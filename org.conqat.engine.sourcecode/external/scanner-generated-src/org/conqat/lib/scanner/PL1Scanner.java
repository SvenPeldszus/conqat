/* The following code was generated by JFlex 1.4.2 on {{TIMESTAMP}} */

/* Based on OS PL/I V2R3 grammar Version 0.1 
   http://www.cs.vu.nl/grammars/browsable/os-pli-v2r3/
   and IBM PL/1 Language Reference Seventh Edition
 */
   
package org.conqat.lib.scanner;



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.2
 * on {{TIMESTAMP}} from the specification file
 * <tt>/home/freakout/cqse/repositories/conqat/trunk/lib/org.conqat.lib.scanner/grammars/pl1.flex</tt>
 */
class PL1Scanner implements ILenientScanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\5\1\2\1\3\1\4\1\1\22\0\1\5\1\0\1\16"+
    "\2\11\1\72\1\65\1\17\1\56\1\57\1\7\1\67\1\60\1\15"+
    "\1\13\1\6\1\53\1\55\1\44\1\45\1\46\1\10\1\52\3\10"+
    "\1\61\1\62\1\71\1\64\1\70\1\0\1\11\1\20\1\37\1\21"+
    "\1\25\1\14\1\41\1\42\1\35\1\23\1\11\1\47\1\27\1\40"+
    "\1\26\1\32\1\33\1\54\1\34\1\31\1\22\1\30\1\24\1\50"+
    "\1\36\1\43\1\51\3\0\1\63\1\12\1\0\1\20\1\37\1\21"+
    "\1\25\1\14\1\41\1\42\1\35\1\23\1\11\1\47\1\27\1\40"+
    "\1\26\1\32\1\33\1\54\1\34\1\31\1\22\1\30\1\24\1\50"+
    "\1\36\1\43\1\51\1\0\1\66\10\0\1\3\u1fa2\0\1\3\1\3"+
    "\udfd6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\1\12\2\1\1\13\1\14\1\7\1\15"+
    "\1\16\1\17\2\7\1\20\2\7\1\21\1\22\1\7"+
    "\1\23\1\24\1\25\1\26\1\27\3\7\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\0\1\46\1\47\1\50"+
    "\3\0\1\51\6\7\1\52\1\53\1\0\1\54\1\0"+
    "\1\54\1\0\24\7\1\55\1\56\5\7\1\57\2\7"+
    "\1\60\2\7\1\61\1\62\4\7\1\63\1\64\25\7"+
    "\1\65\20\7\1\66\1\67\5\7\1\70\1\71\1\72"+
    "\1\73\1\74\5\7\1\75\2\7\1\76\1\7\1\77"+
    "\1\7\1\100\6\7\1\101\2\7\1\102\1\103\1\104"+
    "\1\105\1\106\1\107\1\110\1\111\2\45\1\0\1\112"+
    "\1\51\2\0\3\7\1\113\1\114\3\7\1\115\2\7"+
    "\1\54\11\7\1\116\5\7\1\117\3\7\1\120\22\7"+
    "\1\121\12\7\1\122\1\7\1\123\1\7\1\124\3\7"+
    "\1\125\1\7\1\126\2\7\1\127\1\7\1\130\1\7"+
    "\1\131\37\7\1\132\3\7\1\133\1\134\10\7\1\135"+
    "\4\7\1\136\10\7\1\137\4\7\1\140\1\7\1\141"+
    "\1\142\1\143\2\7\1\144\1\145\10\7\1\146\21\7"+
    "\1\147\1\150\3\7\1\151\16\7\1\152\1\153\3\7"+
    "\1\154\11\7\1\155\1\156\1\0\1\7\1\157\4\7"+
    "\1\160\1\7\1\161\1\7\1\162\1\7\1\163\3\7"+
    "\1\164\5\7\1\165\3\7\1\166\1\167\1\7\1\170"+
    "\1\171\5\7\1\172\1\173\1\174\2\7\1\175\2\7"+
    "\1\176\1\7\1\177\1\200\5\7\1\201\1\7\1\202"+
    "\1\203\3\7\1\204\1\205\13\7\1\206\1\207\11\7"+
    "\1\210\1\211\4\7\1\212\4\7\1\213\3\7\1\214"+
    "\25\7\1\215\1\7\1\216\1\7\1\217\1\7\1\220"+
    "\1\221\4\7\1\222\7\7\1\223\4\7\1\224\4\7"+
    "\1\225\1\226\1\7\1\227\1\230\4\7\1\231\3\7"+
    "\1\232\11\7\1\140\1\233\1\7\1\234\2\7\1\235"+
    "\2\7\1\236\1\7\1\237\1\240\44\7\1\241\1\242"+
    "\2\7\1\243\6\7\1\244\1\245\1\246\2\7\1\247"+
    "\5\7\1\250\4\7\1\251\2\7\1\252\1\253\1\254"+
    "\3\7\1\255\10\7\1\256\1\7\1\257\1\7\1\260"+
    "\5\7\1\261\1\262\5\7\1\263\1\7\1\264\1\7"+
    "\1\265\1\7\1\266\1\267\1\7\1\270\5\7\1\271"+
    "\5\7\1\272\1\273\2\7\1\274\7\7\1\275\26\7"+
    "\1\276\4\7\1\277\7\7\1\300\1\301\5\7\1\302"+
    "\2\7\1\303\1\304\4\7\1\305\20\7\1\306\1\7"+
    "\1\307\4\7\1\310\14\7\1\311\14\7\1\312\5\7"+
    "\1\313\1\7\1\314\2\7\1\315\4\7\1\316\1\7"+
    "\1\317\4\7\1\320\1\321\1\322\4\7\1\323\1\7"+
    "\1\324\1\325\1\326\7\7\1\327\1\330\3\7\1\331"+
    "\1\7\1\332\1\333\11\7\1\334\10\7\1\335\1\336"+
    "\6\7\1\120\2\7\1\337\2\7\1\340\1\341\10\7"+
    "\1\342\1\343\2\7\1\344\5\7\1\345\1\346\1\7"+
    "\1\347\1\7\1\350\4\7\1\351\2\7\1\352\7\7"+
    "\1\353\1\354\2\7\1\355\1\356\1\357\4\7\1\360"+
    "\1\7\1\361\2\7\1\362\4\7\1\363\4\7\1\364"+
    "\2\7\1\365\1\366\1\367\3\7\1\370\2\7\1\371"+
    "\1\372\1\7\1\373\1\374\2\7\1\375\2\7\1\376"+
    "\1\377\2\7\1\u0100\1\7\1\u0101\15\7\1\u0102\1\7"+
    "\1\u0103\1\u0104\1\7\1\u0105\4\7\1\u0106\1\7\1\u0107"+
    "\3\7\1\u0108\3\7\1\150\5\7\1\u0109\2\7\1\u010a"+
    "\3\7\1\u010b\2\7\1\u010c\2\7\1\u010d\4\7\1\u010e"+
    "\1\u010f\2\7\1\u0110\2\7\1\u0111\1\u0112\1\u0113\17\7"+
    "\1\u0114\1\u0115\2\7\1\205\1\7\1\u0116\4\7\1\122"+
    "\1\7\1\124\1\7\1\125\1\u0117\5\7\1\u0118\1\u0119"+
    "\5\7\1\u011a\1\u011b\4\7\1\u011c\1\7\1\u011d\1\7"+
    "\1\u011e\3\7\1\u011f\1\u0120\11\7\1\u0121\1\u0122\4\7"+
    "\1\u0123\4\7\1\u0124\1\u0125\1\u0126\1\u0127\1\7\1\u0128"+
    "\3\7\1\142\4\7\1\u0129\2\7\1\u012a\1\u012b\1\u012c"+
    "\1\7\1\u012d\2\7\1\u012e\1\u012f\1\7\1\u0130\1\u0131"+
    "\1\7\1\u0132\2\7\1\u0133\1\u0134\1\7\1\u0135\1\u0136"+
    "\1\u0137\2\7\1\u0138\1\u0139\1\7\1\u013a\1\u013b\1\7"+
    "\1\u013c\1\u013d\3\7\1\115\1\u013e\2\7\1\257\3\7"+
    "\1\u013f\5\7\1\263\3\7\1\u0140\1\7\1\121\3\7"+
    "\1\u0141\1\u0142\3\7\1\u0143\5\7\1\u0144\14\7\1\u0145"+
    "\4\7\1\132\12\7\1\u0146\1\7\1\u0147\1\7\1\u0148"+
    "\1\144\1\7\1\u0149\4\7\1\u014a\1\u014b\1\u014c\1\u014d"+
    "\1\u014e\2\7\1\151\6\7\1\161\1\7\1\165\3\7"+
    "\1\173\1\174\1\7\1\177\1\7\1\u014f\1\7\1\u0150"+
    "\1\u0151\3\7\1\127\1\7\1\u0152\4\7\1\u0153\13\7"+
    "\1\221\11\7\1\u0154\1\7\1\307\1\7\1\235\1\236"+
    "\1\u0155\1\u0156\1\146\1\u0157\1\u0158\1\u0159\1\7\1\u015a"+
    "\1\u015b\3\7\1\117\1\172\4\7\1\u015c\1\u015d\7\7"+
    "\1\353\11\7\1\305\7\7\1\113\1\7\1\u015e\1\266"+
    "\1\u015f\1\273\1\u0160\3\7\1\u0161\11\7\1\u0162\3\7"+
    "\1\u0163\3\7\1\u0112\1\7\1\351\1\7\1\u0164\1\7"+
    "\1\u011b\3\7\1\u0165\7\7\1\u0119\3\7\1\u0166\6\7"+
    "\1\u0167\1\u0168\1\7\1\u0169";

  private static int [] zzUnpackAction() {
    int [] result = new int[1462];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\73\0\166\0\73\0\73\0\261\0\354\0\u0127"+
    "\0\u0162\0\u019d\0\u01d8\0\u0213\0\u024e\0\u0289\0\u02c4\0\u02ff"+
    "\0\u033a\0\u0375\0\u03b0\0\u03eb\0\u0426\0\u0461\0\u049c\0\u04d7"+
    "\0\u0512\0\u054d\0\u0588\0\u05c3\0\u05fe\0\u0639\0\u0674\0\u06af"+
    "\0\u06ea\0\u0725\0\u0760\0\u079b\0\73\0\73\0\73\0\73"+
    "\0\73\0\u07d6\0\u0811\0\u084c\0\u0887\0\u08c2\0\u08fd\0\u0938"+
    "\0\73\0\u0973\0\u09ae\0\73\0\u09e9\0\73\0\u0a24\0\u019d"+
    "\0\u0a5f\0\u0a9a\0\u0ad5\0\u0b10\0\u0b4b\0\u0b86\0\u0bc1\0\u0bfc"+
    "\0\73\0\73\0\u024e\0\u0c37\0\u0c72\0\u0cad\0\u0ce8\0\u0d23"+
    "\0\u0d5e\0\u0d99\0\u0dd4\0\u0e0f\0\u0e4a\0\u0e85\0\u0ec0\0\u0efb"+
    "\0\u0f36\0\u0f71\0\u0fac\0\u0fe7\0\u1022\0\u105d\0\u1098\0\u10d3"+
    "\0\u110e\0\u1149\0\u1184\0\u11bf\0\u0162\0\u11fa\0\u1235\0\u1270"+
    "\0\u12ab\0\u12e6\0\u1321\0\u135c\0\u1397\0\u0162\0\u13d2\0\u140d"+
    "\0\u1448\0\u1483\0\u14be\0\u14f9\0\u1534\0\u156f\0\u15aa\0\u0162"+
    "\0\u15e5\0\u1620\0\u165b\0\u1696\0\u16d1\0\u170c\0\u1747\0\u1782"+
    "\0\u17bd\0\u17f8\0\u1833\0\u186e\0\u18a9\0\u18e4\0\u191f\0\u195a"+
    "\0\u1995\0\u19d0\0\u1a0b\0\u1a46\0\u1a81\0\u0162\0\u1abc\0\u1af7"+
    "\0\u1b32\0\u1b6d\0\u1ba8\0\u1be3\0\u1c1e\0\u1c59\0\u1c94\0\u1ccf"+
    "\0\u1d0a\0\u1d45\0\u1d80\0\u1dbb\0\u1df6\0\u1e31\0\u0162\0\u0162"+
    "\0\u1e6c\0\u1ea7\0\u1ee2\0\u1f1d\0\u1f58\0\u0162\0\u1f93\0\u0162"+
    "\0\u0162\0\u0162\0\u1fce\0\u2009\0\u2044\0\u207f\0\u20ba\0\u0162"+
    "\0\u20f5\0\u2130\0\u216b\0\u21a6\0\u21e1\0\u221c\0\u0162\0\u2257"+
    "\0\u2292\0\u22cd\0\u2308\0\u2343\0\u237e\0\u0162\0\u23b9\0\u23f4"+
    "\0\73\0\73\0\73\0\73\0\u242f\0\73\0\73\0\73"+
    "\0\u246a\0\73\0\u24a5\0\73\0\u24e0\0\u251b\0\u2556\0\u2591"+
    "\0\u25cc\0\u2607\0\u2642\0\u267d\0\u26b8\0\u26f3\0\u272e\0\u2769"+
    "\0\u27a4\0\u27df\0\u281a\0\u2855\0\u2890\0\u28cb\0\u2906\0\u2941"+
    "\0\u297c\0\u29b7\0\u29f2\0\u2a2d\0\u0162\0\u2a68\0\u2aa3\0\u2ade"+
    "\0\u2b19\0\u2b54\0\u2b8f\0\u2bca\0\u2c05\0\u2c40\0\u2c7b\0\u2cb6"+
    "\0\u2cf1\0\u2d2c\0\u2d67\0\u2da2\0\u2ddd\0\u2e18\0\u2e53\0\u2e8e"+
    "\0\u2ec9\0\u2f04\0\u2f3f\0\u2f7a\0\u2fb5\0\u2ff0\0\u302b\0\u3066"+
    "\0\u30a1\0\u30dc\0\u3117\0\u3152\0\u318d\0\u31c8\0\u3203\0\u323e"+
    "\0\u3279\0\u32b4\0\u32ef\0\u332a\0\u3365\0\u33a0\0\u0162\0\u33db"+
    "\0\u3416\0\u3451\0\u348c\0\u34c7\0\u3502\0\u353d\0\u0162\0\u3578"+
    "\0\u35b3\0\u35ee\0\u3629\0\u0162\0\u3664\0\u0162\0\u369f\0\u36da"+
    "\0\u3715\0\u3750\0\u378b\0\u37c6\0\u3801\0\u383c\0\u3877\0\u38b2"+
    "\0\u38ed\0\u3928\0\u3963\0\u399e\0\u39d9\0\u3a14\0\u3a4f\0\u3a8a"+
    "\0\u3ac5\0\u3b00\0\u3b3b\0\u3b76\0\u3bb1\0\u3bec\0\u3c27\0\u3c62"+
    "\0\u3c9d\0\u3cd8\0\u3d13\0\u3d4e\0\u3d89\0\u3dc4\0\u3dff\0\u3e3a"+
    "\0\u3e75\0\u0162\0\u0162\0\u3eb0\0\u3eeb\0\u3f26\0\u3f61\0\u3f9c"+
    "\0\u3fd7\0\u4012\0\u404d\0\u0162\0\u4088\0\u40c3\0\u40fe\0\u4139"+
    "\0\u4174\0\u41af\0\u41ea\0\u4225\0\u4260\0\u429b\0\u42d6\0\u4311"+
    "\0\u434c\0\u0162\0\u4387\0\u43c2\0\u43fd\0\u4438\0\u4473\0\u44ae"+
    "\0\u0162\0\u44e9\0\u0162\0\u4524\0\u455f\0\u459a\0\u0162\0\u45d5"+
    "\0\u4610\0\u464b\0\u4686\0\u46c1\0\u46fc\0\u4737\0\u4772\0\u47ad"+
    "\0\u47e8\0\u4823\0\u485e\0\u4899\0\u48d4\0\u490f\0\u494a\0\u4985"+
    "\0\u49c0\0\u49fb\0\u4a36\0\u4a71\0\u4aac\0\u4ae7\0\u4b22\0\u4b5d"+
    "\0\u4b98\0\u0162\0\u4bd3\0\u4c0e\0\u4c49\0\u4c84\0\u4cbf\0\u4cfa"+
    "\0\u4d35\0\u4d70\0\u4dab\0\u4de6\0\u4e21\0\u4e5c\0\u4e97\0\u4ed2"+
    "\0\u4f0d\0\u4f48\0\u4f83\0\u4fbe\0\u4ff9\0\u0162\0\u0162\0\u5034"+
    "\0\u506f\0\u50aa\0\u50e5\0\u5120\0\u515b\0\u5196\0\u51d1\0\u520c"+
    "\0\u5247\0\u5282\0\u52bd\0\u52f8\0\73\0\73\0\u24e0\0\u5333"+
    "\0\u0162\0\u536e\0\u53a9\0\u53e4\0\u541f\0\u0162\0\u545a\0\u5495"+
    "\0\u54d0\0\u0162\0\u550b\0\73\0\u5546\0\u5581\0\u55bc\0\u0162"+
    "\0\u55f7\0\u5632\0\u566d\0\u56a8\0\u56e3\0\u571e\0\u5759\0\u5794"+
    "\0\u57cf\0\u0162\0\u0162\0\u580a\0\u0162\0\u0162\0\u5845\0\u5880"+
    "\0\u58bb\0\u58f6\0\u5931\0\u596c\0\u59a7\0\u59e2\0\u5a1d\0\u5a58"+
    "\0\u0162\0\u5a93\0\u5ace\0\u0162\0\u5b09\0\u5b44\0\u0162\0\u5b7f"+
    "\0\u5bba\0\u5bf5\0\u5c30\0\u5c6b\0\u0162\0\u5ca6\0\u0162\0\u0162"+
    "\0\u5ce1\0\u5d1c\0\u5d57\0\u0162\0\u5d92\0\u5dcd\0\u5e08\0\u5e43"+
    "\0\u5e7e\0\u5eb9\0\u5ef4\0\u5f2f\0\u5f6a\0\u5fa5\0\u5fe0\0\u601b"+
    "\0\u0162\0\u0162\0\u6056\0\u6091\0\u60cc\0\u6107\0\u6142\0\u617d"+
    "\0\u61b8\0\u61f3\0\u622e\0\u0162\0\u0162\0\u6269\0\u62a4\0\u62df"+
    "\0\u631a\0\u0162\0\u6355\0\u6390\0\u63cb\0\u6406\0\u0162\0\u6441"+
    "\0\u647c\0\u64b7\0\u0162\0\u64f2\0\u652d\0\u6568\0\u65a3\0\u65de"+
    "\0\u6619\0\u6654\0\u668f\0\u66ca\0\u6705\0\u6740\0\u677b\0\u67b6"+
    "\0\u67f1\0\u682c\0\u6867\0\u68a2\0\u68dd\0\u6918\0\u6953\0\u698e"+
    "\0\u69c9\0\u6a04\0\u0162\0\u6a3f\0\u0162\0\u6a7a\0\u0162\0\u6ab5"+
    "\0\u6af0\0\u6b2b\0\u6b66\0\u6ba1\0\u0162\0\u6bdc\0\u6c17\0\u6c52"+
    "\0\u6c8d\0\u6cc8\0\u6d03\0\u6d3e\0\u0162\0\u6d79\0\u6db4\0\u6def"+
    "\0\u6e2a\0\u0162\0\u6e65\0\u6ea0\0\u6edb\0\u6f16\0\u0162\0\u0162"+
    "\0\u6f51\0\u0162\0\u0162\0\u6f8c\0\u6fc7\0\u7002\0\u703d\0\u0162"+
    "\0\u7078\0\u70b3\0\u70ee\0\u0162\0\u7129\0\u7164\0\u719f\0\u71da"+
    "\0\u7215\0\u7250\0\u728b\0\u72c6\0\u7301\0\u0162\0\u733c\0\u7377"+
    "\0\u0162\0\u73b2\0\u73ed\0\u7428\0\u7463\0\u749e\0\u74d9\0\u7514"+
    "\0\u0162\0\u0162\0\u754f\0\u758a\0\u75c5\0\u7600\0\u763b\0\u7676"+
    "\0\u76b1\0\u76ec\0\u7727\0\u7762\0\u779d\0\u77d8\0\u7813\0\u784e"+
    "\0\u7889\0\u78c4\0\u78ff\0\u793a\0\u7975\0\u79b0\0\u79eb\0\u7a26"+
    "\0\u7a61\0\u7a9c\0\u7ad7\0\u7b12\0\u7b4d\0\u7b88\0\u7bc3\0\u7bfe"+
    "\0\u7c39\0\u7c74\0\u7caf\0\u7cea\0\u7d25\0\u7d60\0\u0162\0\u0162"+
    "\0\u7d9b\0\u7dd6\0\u0162\0\u7e11\0\u7e4c\0\u7e87\0\u7ec2\0\u7efd"+
    "\0\u7f38\0\u0162\0\u0162\0\u7f73\0\u7fae\0\u7fe9\0\u0162\0\u8024"+
    "\0\u805f\0\u809a\0\u80d5\0\u8110\0\u0162\0\u814b\0\u8186\0\u81c1"+
    "\0\u81fc\0\u0162\0\u8237\0\u8272\0\u0162\0\u0162\0\u0162\0\u82ad"+
    "\0\u82e8\0\u8323\0\u0162\0\u835e\0\u8399\0\u83d4\0\u840f\0\u844a"+
    "\0\u8485\0\u84c0\0\u84fb\0\u0162\0\u8536\0\u8571\0\u85ac\0\u0162"+
    "\0\u85e7\0\u8622\0\u865d\0\u8698\0\u86d3\0\u0162\0\u0162\0\u870e"+
    "\0\u8749\0\u8784\0\u87bf\0\u87fa\0\u8835\0\u8870\0\u0162\0\u88ab"+
    "\0\u0162\0\u88e6\0\u8921\0\u0162\0\u895c\0\u0162\0\u8997\0\u89d2"+
    "\0\u8a0d\0\u8a48\0\u8a83\0\u8abe\0\u8af9\0\u8b34\0\u8b6f\0\u8baa"+
    "\0\u8be5\0\u0162\0\u8c20\0\u8c5b\0\u8c96\0\u0162\0\u8cd1\0\u8d0c"+
    "\0\u8d47\0\u8d82\0\u8dbd\0\u8df8\0\u8e33\0\u0162\0\u8e6e\0\u8ea9"+
    "\0\u8ee4\0\u8f1f\0\u8f5a\0\u8f95\0\u8fd0\0\u900b\0\u9046\0\u9081"+
    "\0\u90bc\0\u90f7\0\u9132\0\u916d\0\u91a8\0\u91e3\0\u921e\0\u9259"+
    "\0\u9294\0\u92cf\0\u930a\0\u9345\0\u0162\0\u9380\0\u93bb\0\u93f6"+
    "\0\u9431\0\u0162\0\u946c\0\u94a7\0\u94e2\0\u951d\0\u9558\0\u9593"+
    "\0\u95ce\0\u0162\0\u0162\0\u9609\0\u9644\0\u967f\0\u96ba\0\u96f5"+
    "\0\u0162\0\u9730\0\u976b\0\u0162\0\u0162\0\u97a6\0\u97e1\0\u981c"+
    "\0\u9857\0\u9892\0\u98cd\0\u9908\0\u9943\0\u997e\0\u99b9\0\u99f4"+
    "\0\u9a2f\0\u9a6a\0\u9aa5\0\u9ae0\0\u9b1b\0\u9b56\0\u9b91\0\u9bcc"+
    "\0\u9c07\0\u9c42\0\u0162\0\u9c7d\0\u9cb8\0\u9cf3\0\u9d2e\0\u9d69"+
    "\0\u9da4\0\u0162\0\u9ddf\0\u9e1a\0\u9e55\0\u9e90\0\u9ecb\0\u9f06"+
    "\0\u9f41\0\u9f7c\0\u9fb7\0\u9ff2\0\ua02d\0\ua068\0\u0162\0\ua0a3"+
    "\0\ua0de\0\ua119\0\ua154\0\ua18f\0\ua1ca\0\ua205\0\ua240\0\ua27b"+
    "\0\ua2b6\0\ua2f1\0\ua32c\0\u0162\0\ua367\0\ua3a2\0\ua3dd\0\ua418"+
    "\0\ua453\0\u0162\0\ua48e\0\u0162\0\ua4c9\0\ua504\0\u0162\0\ua53f"+
    "\0\ua57a\0\ua5b5\0\ua5f0\0\u0162\0\ua62b\0\u0162\0\ua666\0\ua6a1"+
    "\0\ua6dc\0\ua717\0\u0162\0\u0162\0\u0162\0\ua752\0\ua78d\0\ua7c8"+
    "\0\ua803\0\ua83e\0\ua879\0\ua8b4\0\u0162\0\u0162\0\ua8ef\0\ua92a"+
    "\0\ua965\0\ua9a0\0\ua9db\0\uaa16\0\uaa51\0\u0162\0\u0162\0\uaa8c"+
    "\0\uaac7\0\uab02\0\u0162\0\uab3d\0\u0162\0\u0162\0\uab78\0\uabb3"+
    "\0\uabee\0\uac29\0\uac64\0\uac9f\0\uacda\0\uad15\0\uad50\0\u0162"+
    "\0\uad8b\0\uadc6\0\uae01\0\uae3c\0\uae77\0\uaeb2\0\uaeed\0\uaf28"+
    "\0\u0162\0\u0162\0\uaf63\0\uaf9e\0\uafd9\0\ub014\0\ub04f\0\ub08a"+
    "\0\u0162\0\ub0c5\0\ub100\0\u0162\0\ub13b\0\ub176\0\u0162\0\u0162"+
    "\0\ub1b1\0\ub1ec\0\ub227\0\ub262\0\ub29d\0\ub2d8\0\ub313\0\ub34e"+
    "\0\u0162\0\u0162\0\ub389\0\ub3c4\0\u0162\0\ub3ff\0\ub43a\0\ub475"+
    "\0\ub4b0\0\ub4eb\0\u0162\0\u0162\0\ub526\0\ub561\0\ub59c\0\u0162"+
    "\0\ub5d7\0\ub612\0\ub64d\0\ub688\0\ub6c3\0\ub6fe\0\ub739\0\u0162"+
    "\0\ub774\0\ub7af\0\ub7ea\0\ub825\0\ub860\0\ub89b\0\ub8d6\0\ub911"+
    "\0\u0162\0\ub94c\0\ub987\0\u0162\0\u0162\0\u0162\0\ub9c2\0\ub9fd"+
    "\0\uba38\0\uba73\0\u0162\0\ubaae\0\u0162\0\ubae9\0\ubb24\0\u0162"+
    "\0\ubb5f\0\ubb9a\0\ubbd5\0\ubc10\0\u0162\0\ubc4b\0\ubc86\0\ubcc1"+
    "\0\ubcfc\0\u0162\0\ubd37\0\ubd72\0\u0162\0\u0162\0\u0162\0\ubdad"+
    "\0\ubde8\0\ube23\0\u0162\0\ube5e\0\ube99\0\u0162\0\ubed4\0\ubf0f"+
    "\0\u0162\0\u0162\0\ubf4a\0\ubf85\0\u0162\0\ubfc0\0\ubffb\0\u0162"+
    "\0\uc036\0\uc071\0\uc0ac\0\u0162\0\uc0e7\0\uc122\0\uc15d\0\uc198"+
    "\0\uc1d3\0\uc20e\0\uc249\0\uc284\0\uc2bf\0\uc2fa\0\uc335\0\uc370"+
    "\0\uc3ab\0\uc3e6\0\uc421\0\u0162\0\uc45c\0\uc497\0\u0162\0\uc4d2"+
    "\0\u0162\0\uc50d\0\uc548\0\uc583\0\uc5be\0\u0162\0\uc5f9\0\u0162"+
    "\0\uc634\0\uc66f\0\uc6aa\0\u0162\0\uc6e5\0\uc720\0\uc75b\0\u0162"+
    "\0\uc796\0\uc7d1\0\uc80c\0\uc847\0\uc882\0\u0162\0\uc8bd\0\uc8f8"+
    "\0\u0162\0\uc933\0\uc96e\0\uc9a9\0\u0162\0\uc9e4\0\uca1f\0\u0162"+
    "\0\uca5a\0\uca95\0\u0162\0\ucad0\0\ucb0b\0\ucb46\0\ucb81\0\u0162"+
    "\0\u0162\0\ucbbc\0\ucbf7\0\u0162\0\ucc32\0\ucc6d\0\u0162\0\ucca8"+
    "\0\u0162\0\ucce3\0\ucd1e\0\ucd59\0\ucd94\0\ucdcf\0\uce0a\0\uce45"+
    "\0\uce80\0\ucebb\0\ucef6\0\ucf31\0\ucf6c\0\ucfa7\0\ucfe2\0\ud01d"+
    "\0\u0162\0\u0162\0\ud058\0\ud093\0\u0162\0\ud0ce\0\u0162\0\ud109"+
    "\0\ud144\0\ud17f\0\ud1ba\0\ud1f5\0\ud230\0\u0162\0\ud26b\0\u0162"+
    "\0\u0162\0\ud2a6\0\ud2e1\0\ud31c\0\ud357\0\ud392\0\u0162\0\ud3cd"+
    "\0\ud408\0\ud443\0\ud47e\0\ud4b9\0\ud4f4\0\u0162\0\ud52f\0\ud56a"+
    "\0\ud5a5\0\ud5e0\0\ud61b\0\u0162\0\ud656\0\u0162\0\ud691\0\u0162"+
    "\0\ud6cc\0\ud707\0\ud742\0\u0162\0\u0162\0\ud77d\0\ud7b8\0\ud7f3"+
    "\0\ud82e\0\ud869\0\ud8a4\0\ud8df\0\ud91a\0\ud955\0\u0162\0\u0162"+
    "\0\ud990\0\ud9cb\0\uda06\0\uda41\0\u0162\0\uda7c\0\udab7\0\udaf2"+
    "\0\udb2d\0\u0162\0\u0162\0\u0162\0\u0162\0\udb68\0\u0162\0\udba3"+
    "\0\udbde\0\udc19\0\u0162\0\udc54\0\udc8f\0\udcca\0\udd05\0\u0162"+
    "\0\udd40\0\udd7b\0\u0162\0\u0162\0\u0162\0\uddb6\0\u0162\0\uddf1"+
    "\0\ude2c\0\u0162\0\u0162\0\ude67\0\u0162\0\u0162\0\udea2\0\u0162"+
    "\0\udedd\0\udf18\0\u0162\0\u0162\0\udf53\0\u0162\0\u0162\0\u0162"+
    "\0\udf8e\0\udfc9\0\u0162\0\u0162\0\ue004\0\u0162\0\u0162\0\ue03f"+
    "\0\u0162\0\u0162\0\ue07a\0\ue0b5\0\ue0f0\0\u0162\0\u0162\0\ue12b"+
    "\0\ue166\0\u0162\0\ue1a1\0\ue1dc\0\ue217\0\u0162\0\ue252\0\ue28d"+
    "\0\ue2c8\0\ue303\0\ue33e\0\u0162\0\ue379\0\ue3b4\0\ue3ef\0\u0162"+
    "\0\ue42a\0\u0162\0\ue465\0\ue4a0\0\ue4db\0\u0162\0\u0162\0\ue516"+
    "\0\ue551\0\ue58c\0\u0162\0\ue5c7\0\ue602\0\ue63d\0\ue678\0\ue6b3"+
    "\0\u0162\0\ue6ee\0\ue729\0\ue764\0\ue79f\0\ue7da\0\ue815\0\ue850"+
    "\0\ue88b\0\ue8c6\0\ue901\0\ue93c\0\ue977\0\u0162\0\ue9b2\0\ue9ed"+
    "\0\uea28\0\uea63\0\u0162\0\uea9e\0\uead9\0\ueb14\0\ueb4f\0\ueb8a"+
    "\0\uebc5\0\uec00\0\uec3b\0\uec76\0\uecb1\0\u0162\0\uecec\0\u0162"+
    "\0\ued27\0\u0162\0\u0162\0\ued62\0\u0162\0\ued9d\0\uedd8\0\uee13"+
    "\0\uee4e\0\u0162\0\u0162\0\u0162\0\u0162\0\u0162\0\uee89\0\ueec4"+
    "\0\u0162\0\ueeff\0\uef3a\0\uef75\0\uefb0\0\uefeb\0\uf026\0\u0162"+
    "\0\uf061\0\u0162\0\uf09c\0\uf0d7\0\uf112\0\u0162\0\u0162\0\uf14d"+
    "\0\u0162\0\uf188\0\u0162\0\uf1c3\0\u0162\0\u0162\0\uf1fe\0\uf239"+
    "\0\uf274\0\u0162\0\uf2af\0\u0162\0\uf2ea\0\uf325\0\uf360\0\uf39b"+
    "\0\u0162\0\uf3d6\0\uf411\0\uf44c\0\uf487\0\uf4c2\0\uf4fd\0\uf538"+
    "\0\uf573\0\uf5ae\0\uf5e9\0\uf624\0\u0162\0\uf65f\0\uf69a\0\uf6d5"+
    "\0\uf710\0\uf74b\0\uf786\0\uf7c1\0\uf7fc\0\uf837\0\u0162\0\uf872"+
    "\0\u0162\0\uf8ad\0\u0162\0\u0162\0\u0162\0\u0162\0\u0162\0\u0162"+
    "\0\u0162\0\u0162\0\uf8e8\0\u0162\0\u0162\0\uf923\0\uf95e\0\uf999"+
    "\0\u0162\0\u0162\0\uf9d4\0\ufa0f\0\ufa4a\0\ufa85\0\u0162\0\ufac0"+
    "\0\ufafb\0\ufb36\0\ufb71\0\ufbac\0\ufbe7\0\ufc22\0\ufc5d\0\u0162"+
    "\0\ufc98\0\ufcd3\0\ufd0e\0\ufd49\0\ufd84\0\ufdbf\0\ufdfa\0\ufe35"+
    "\0\ufe70\0\u0162\0\ufeab\0\ufee6\0\uff21\0\uff5c\0\uff97\0\uffd2"+
    "\1\15\0\u0162\1\110\0\u0162\0\u0162\0\u0162\0\u0162\0\u0162"+
    "\1\203\1\276\1\371\0\u0162\1\u0134\1\u016f\1\u01aa\1\u01e5"+
    "\1\u0220\1\u025b\1\u0296\1\u02d1\1\u030c\0\u0162\1\u0347\1\u0382"+
    "\1\u03bd\0\u0162\1\u03f8\1\u0433\1\u046e\0\u0162\1\u04a9\0\u0162"+
    "\1\u04e4\0\u0162\1\u051f\0\u0162\1\u055a\1\u0595\1\u05d0\0\u0162"+
    "\1\u060b\1\u0646\1\u0681\1\u06bc\1\u06f7\1\u0732\1\u076d\0\u0162"+
    "\1\u07a8\1\u07e3\1\u081e\0\u0162\1\u0859\1\u0894\1\u08cf\1\u090a"+
    "\1\u0945\1\u0980\0\u0162\0\u0162\1\u09bb\0\u0162";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1462];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\1\4\1\6\1\7\1\10"+
    "\2\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
    "\1\41\1\11\3\10\1\42\1\43\1\44\2\10\1\11"+
    "\1\10\1\45\1\46\1\47\1\50\1\51\1\52\1\53"+
    "\1\54\1\55\1\56\1\57\1\60\1\61\75\0\1\4"+
    "\76\0\1\62\1\63\54\0\1\64\15\0\1\65\54\0"+
    "\1\66\16\0\1\10\1\0\1\67\1\70\1\71\27\0"+
    "\3\10\3\0\2\10\1\0\1\10\25\0\3\11\1\0"+
    "\1\11\3\0\36\11\25\0\1\72\33\0\3\72\3\0"+
    "\2\72\1\0\1\72\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\73\1\74\1\75\1\76\4\11\1\77\1\11"+
    "\1\100\17\11\101\0\1\101\3\0\1\102\2\0\16\103"+
    "\1\104\54\103\17\105\1\106\33\105\1\107\1\105\1\107"+
    "\15\105\10\0\3\11\1\0\1\11\3\0\1\11\1\110"+
    "\1\111\2\11\1\112\1\113\1\114\1\115\1\116\2\11"+
    "\1\117\2\11\1\120\16\11\25\0\3\11\1\0\1\121"+
    "\3\0\1\122\1\11\1\123\2\11\1\124\1\11\1\125"+
    "\2\11\1\126\1\127\1\11\1\130\20\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\131\2\11\1\132\5\11\1\133"+
    "\1\134\1\135\1\136\1\137\5\11\1\140\12\11\25\0"+
    "\3\11\1\0\1\141\3\0\2\11\1\142\3\11\1\143"+
    "\5\11\1\144\3\11\1\145\1\146\1\147\13\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\150\10\11\1\151\5\11"+
    "\1\152\16\11\25\0\3\11\1\0\1\153\3\0\1\154"+
    "\1\155\1\11\1\156\6\11\1\157\4\11\1\160\1\11"+
    "\1\161\14\11\25\0\3\11\1\0\1\11\3\0\1\162"+
    "\1\163\10\11\1\164\23\11\25\0\3\11\1\0\1\165"+
    "\3\0\1\166\2\11\1\167\6\11\1\170\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\171\4\11\1\172"+
    "\5\11\1\173\14\11\25\0\3\11\1\0\1\174\3\0"+
    "\1\11\1\175\1\176\1\177\2\11\1\200\1\11\1\201"+
    "\12\11\1\202\3\11\1\203\6\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\204\1\11\1\205\1\11\1\206"+
    "\1\11\1\207\2\11\1\210\1\211\4\11\1\212\14\11"+
    "\25\0\3\11\1\0\1\213\3\0\1\214\1\11\1\215"+
    "\1\216\4\11\1\217\1\11\1\220\1\11\1\221\21\11"+
    "\25\0\3\11\1\0\1\222\3\0\1\223\35\11\25\0"+
    "\3\11\1\0\1\224\3\0\1\225\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\226\2\11\1\227\1\11"+
    "\1\230\25\11\25\0\3\11\1\0\1\231\3\0\1\232"+
    "\2\11\1\233\3\11\1\234\1\235\5\11\1\236\4\11"+
    "\1\237\1\240\1\241\1\242\1\243\6\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\244\35\11\25\0\3\11\1\0"+
    "\1\245\3\0\3\11\1\246\3\11\1\247\1\11\1\250"+
    "\1\251\1\11\1\252\2\11\1\253\16\11\25\0\3\11"+
    "\1\0\1\254\3\0\12\11\1\255\1\11\1\256\1\11"+
    "\1\257\17\11\25\0\3\11\1\0\1\260\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\261\1\262\1\11"+
    "\1\263\10\11\1\264\1\265\1\266\17\11\25\0\3\11"+
    "\1\0\1\267\3\0\5\11\1\270\30\11\101\0\1\271"+
    "\76\0\1\272\66\0\1\273\72\0\1\274\1\0\1\275"+
    "\70\0\1\276\72\0\1\277\72\0\1\300\6\0\1\62"+
    "\1\301\2\302\1\0\66\62\7\63\1\303\63\63\64\0"+
    "\1\304\16\0\1\10\1\0\1\67\31\0\3\10\3\0"+
    "\2\10\1\0\1\10\25\0\1\305\4\0\1\306\26\0"+
    "\3\305\3\0\2\305\1\0\1\305\11\0\1\306\13\0"+
    "\1\72\1\0\1\307\1\0\1\71\27\0\3\72\3\0"+
    "\2\72\1\0\1\72\25\0\3\11\1\0\1\310\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\3\11\1\311"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\2\11\1\312"+
    "\1\11\1\313\1\314\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\11\11\1\315\24\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\316\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\11\1\317\1\320\1\321\7\11\1\322\22\11"+
    "\33\0\1\103\54\0\17\105\1\106\53\105\17\0\1\105"+
    "\53\0\17\105\1\323\53\105\10\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\324\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\325\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\326\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\23\11\1\327\12\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\330\3\11\1\331\26\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\332\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\333\7\11\1\334\6\11"+
    "\1\335\1\11\1\336\13\11\25\0\3\11\1\0\1\337"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\340\27\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\341\26\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\342\26\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\343\26\11\25\0\3\11\1\0\1\344\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\345\23\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\346\1\347"+
    "\3\11\1\350\3\11\1\351\1\352\15\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\353\26\11\25\0\3\11"+
    "\1\0\1\354\3\0\1\355\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\11\11\1\356\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\357\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\360\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\361\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\362\26\11\1\363\6\11\25\0\3\11"+
    "\1\0\1\364\3\0\14\11\1\365\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\13\11\1\366\22\11\25\0\3\11"+
    "\1\0\1\367\3\0\36\11\25\0\3\11\1\0\1\370"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\1\11"+
    "\1\371\1\372\1\373\1\374\1\375\1\11\1\376\1\11"+
    "\1\377\1\11\1\u0100\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0101\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u0102\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u0103\27\11\25\0\3\11\1\0\1\11"+
    "\3\0\7\11\1\u0104\4\11\1\u0105\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u0106\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\11\11\1\u0107\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u0108\1\u0109\1\u010a\4\11\1\u010b\1\11"+
    "\1\u010c\7\11\1\u010d\14\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u010e\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\7\11\1\u010f\26\11\25\0\3\11\1\0\1\11"+
    "\3\0\11\11\1\u0110\2\11\1\u0111\3\11\1\u0112\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\30\11\1\u0113\5\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u0114\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\20\11\1\u0115\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\13\11\1\u0116\22\11"+
    "\25\0\2\11\1\u0117\1\0\1\u0118\3\0\1\11\1\u0119"+
    "\1\u011a\1\u011b\1\11\1\u011c\1\u011d\1\u011e\1\u011f\1\u0120"+
    "\1\u0121\1\u0122\1\u0123\4\11\1\u0124\6\11\1\u0125\1\u0126"+
    "\4\11\25\0\3\11\1\0\1\11\3\0\1\u0127\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\17\11\1\u0128\16\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u0129\3\11"+
    "\1\u012a\2\11\1\u012b\6\11\1\u012c\6\11\1\u012d\6\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u012e\10\11"+
    "\1\u012f\23\11\25\0\3\11\1\0\1\11\3\0\1\u0130"+
    "\1\u0131\1\u0132\1\u0133\1\11\1\u0134\1\11\1\u0135\1\11"+
    "\1\u0136\5\11\1\u0137\16\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u0138\2\11\1\u0139\30\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u013a\26\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u013b\4\11\1\u013c\3\11"+
    "\1\u013d\20\11\1\u013e\1\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u013f\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0140\4\11\1\u0141\4\11\1\u0142\1\11\1\u0143\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u0144\10\11"+
    "\1\u0145\6\11\1\u0146\4\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0147\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\13\11\1\u0148\3\11\1\u0149\16\11\25\0\3\11\1\0"+
    "\1\11\3\0\11\11\1\u014a\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u014b\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\15\11\1\u014c\20\11\25\0\3\11\1\0"+
    "\1\u014d\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u014e\33\11\25\0\3\11\1\0\1\u014f\3\0"+
    "\2\11\1\u0150\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0151\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u0152\11\11\1\u0153\14\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0154\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u0155\7\11\1\u0156\2\11\1\u0157"+
    "\5\11\1\u0158\13\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u0159\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u015a\34\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u015b\6\11\1\u015c\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u015d\5\11\1\u015e\1\11\1\u015f"+
    "\22\11\25\0\3\11\1\0\1\u0160\3\0\3\11\1\u0161"+
    "\6\11\1\u0162\23\11\25\0\3\11\1\0\1\u0163\3\0"+
    "\1\u0164\1\u0165\1\u0166\1\11\1\u0167\1\u0168\1\u0169\1\u016a"+
    "\1\u016b\1\u016c\1\u016d\1\u016e\1\u016f\4\11\1\u0170\1\u0171"+
    "\5\11\1\u0172\5\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0173\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\16\11\1\u0174\17\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0175\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0176\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\22\11\1\u0177\13\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u0178\7\11\1\u0179\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u017a\3\11\1\u017b\13\11\1\u017c"+
    "\13\11\25\0\3\11\1\0\1\11\3\0\27\11\1\u017d"+
    "\6\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u017e"+
    "\15\11\1\u017f\14\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0180\3\11\1\u0181\31\11\25\0\3\11\1\0\1\11"+
    "\3\0\30\11\1\u0182\5\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0183\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u0184\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u0185\1\u0186\6\11\1\u0187\17\11\25\0"+
    "\3\11\1\0\1\11\3\0\10\11\1\u0188\1\11\1\u0189"+
    "\23\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u018a"+
    "\4\11\1\u018b\14\11\25\0\3\11\1\0\1\u018c\3\0"+
    "\12\11\1\u018d\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u018e\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u018f\3\11\1\u0190\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0191\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u0192\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\23\11\1\u0193\12\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0194\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\15\11\1\u0195\20\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u0196\1\u0197\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0198\32\11\25\0\3\11\1\0"+
    "\1\u0199\3\0\3\11\1\u019a\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u019b\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u019c\32\11\101\0\1\u019d\10\0"+
    "\1\302\70\0\6\63\1\u019e\1\303\63\63\10\0\1\305"+
    "\1\0\1\u019f\31\0\3\305\3\0\2\305\1\0\1\305"+
    "\25\0\1\305\33\0\3\305\3\0\2\305\1\0\1\305"+
    "\25\0\1\72\1\0\1\307\31\0\3\72\3\0\2\72"+
    "\1\0\1\72\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u01a0\27\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u01a1\33\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u01a2\21\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u01a3\32\11\25\0\3\11\1\0\1\11\3\0\13\11"+
    "\1\u01a4\5\11\1\u01a5\14\11\25\0\3\11\1\0\1\u01a6"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u01a7\23\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u01a8\26\11\25\0\3\11\1\0\1\u01a9\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u01aa\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\u01ab\23\11"+
    "\34\0\1\105\17\0\1\u01ac\43\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u01ad\32\11\25\0\3\11\1\0\1\u01ae"+
    "\3\0\1\u01af\5\11\1\u01b0\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\17\11\1\u01b1\16\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u01b2\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u01b3\21\11\1\u01b4\13\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u01b5\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u01b6\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u01b7\32\11\25\0\3\11"+
    "\1\0\1\u01b8\3\0\3\11\1\u01b9\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u01ba\27\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u01bb\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u01bc\23\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u01bd\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u01be\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u01bf\24\11\1\u01c0\10\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u01c1\34\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u01c2\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u01c3\1\11\1\u01c4\1\u01c5"+
    "\1\u01c6\2\11\1\u01c7\24\11\25\0\3\11\1\0\1\11"+
    "\3\0\10\11\1\u01c8\25\11\25\0\3\11\1\0\1\11"+
    "\3\0\23\11\1\u01c9\12\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u01ca\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u01cb\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\16\11\1\u01cc\17\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\11\1\u01cd\34\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u01ce\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\27\11\1\u01cf\6\11\25\0\3\11\1\0\1\11"+
    "\3\0\7\11\1\u01d0\26\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u01d1\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u01d2\35\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u01d3\27\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u01d4\23\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u01d5\27\11\25\0\3\11\1\0\1\u01d6\3\0\36\11"+
    "\25\0\3\11\1\0\1\u01d7\3\0\36\11\25\0\3\11"+
    "\1\0\1\u01d8\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u01d9\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\7\11\1\u01da\26\11\25\0\3\11\1\0\1\u01db"+
    "\3\0\12\11\1\u01dc\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u01dd\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u01de\35\11\25\0\3\11\1\0\1\u01df\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u01e0"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u01e1"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\10\11\1\u01e2"+
    "\25\11\25\0\3\11\1\0\1\u01e3\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u01e4\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u01e5\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\10\11\1\u01e6\25\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u01e7\17\11\1\u01e8"+
    "\5\11\1\u01e9\4\11\25\0\3\11\1\0\1\11\3\0"+
    "\20\11\1\u01ea\15\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u01eb\34\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u01ec\3\11\1\u01ed\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u01ee\35\11\25\0\3\11\1\0\1\u01ef"+
    "\3\0\1\u01f0\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u01f1\34\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u01f2\2\11\1\u01f3\32\11\25\0\3\11\1\0\1\u01f4"+
    "\3\0\1\u01f5\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\13\11\1\u01f6\22\11\25\0\3\11\1\0\1\u01f7\3\0"+
    "\36\11\25\0\3\11\1\0\1\u01f8\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u01f9\27\11\25\0"+
    "\3\11\1\0\1\u01fa\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\34\11\1\u01fb\1\11\25\0\3\11\1\0"+
    "\1\11\3\0\16\11\1\u01fc\17\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u01fd\2\11\1\u01fe\20\11\25\0"+
    "\3\11\1\0\1\u01ff\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0200\27\11\25\0\3\11\1\0"+
    "\1\u0201\3\0\36\11\25\0\2\11\1\u0202\1\0\1\u0203"+
    "\3\0\1\u0204\1\u0205\2\11\1\u0206\31\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u0207\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u0208\12\11\1\u0209\14\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u020a\1\u020b"+
    "\4\11\1\u020c\25\11\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\u020d\14\11\1\u020e\14\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u020f\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\20\11\1\u0210\15\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0211\6\11\1\u0212\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0213\21\11\25\0"+
    "\3\11\1\0\1\u0214\3\0\5\11\1\u0215\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\4\11\1\u0216\31\11\25\0"+
    "\3\11\1\0\1\u0217\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0218\33\11\25\0\3\11\1\0"+
    "\1\u0219\3\0\27\11\1\u021a\6\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u021b\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u021c\32\11\25\0\3\11\1\0"+
    "\1\u021d\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u021e\35\11\25\0\3\11\1\0\1\11\3\0\13\11"+
    "\1\u021f\22\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u0220\26\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u0221\23\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0222\32\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u0223\23\11\25\0\3\11\1\0\1\u0224\3\0\21\11"+
    "\1\u0225\14\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u0226\23\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0227\32\11\25\0\3\11\1\0\1\11\3\0\10\11"+
    "\1\u0228\25\11\25\0\3\11\1\0\1\11\3\0\15\11"+
    "\1\u0229\20\11\25\0\3\11\1\0\1\11\3\0\1\u022a"+
    "\35\11\25\0\3\11\1\0\1\u022b\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u022c\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u022d\1\u022e\25\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u022f\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u0230\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u0231\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\13\11\1\u0232\1\u0233\21\11"+
    "\25\0\3\11\1\0\1\u0234\3\0\3\11\1\u0235\4\11"+
    "\1\u0236\11\11\1\u0237\6\11\1\u0238\4\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u0239\27\11\25\0\3\11"+
    "\1\0\1\u023a\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u023b\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u023c\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\11\11\1\u023d\2\11\1\u023e\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u023f\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\13\11\1\u0240\22\11\25\0\3\11"+
    "\1\0\1\u0241\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0242\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u0243\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u0244\27\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0245\3\11\1\u0246\26\11\25\0\3\11"+
    "\1\0\1\u0247\3\0\3\11\1\u0248\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u0249\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\5\11\1\u024a\30\11\25\0\3\11"+
    "\1\0\1\11\3\0\27\11\1\u024b\6\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u024c\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u024d\17\11\1\u024e\15\11\25\0"+
    "\3\11\1\0\1\u024f\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0250\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\15\11\1\u0251\20\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0252\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0253\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u0254\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0255\3\11\1\u0256\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u0257\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u0258\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u0259\1\11\1\u025a"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\10\11\1\u025b"+
    "\1\u025c\1\u025d\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u025e\6\11\1\u025f\25\11\25\0\3\11\1\0"+
    "\1\u0260\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\10\11\1\u0261\25\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0262\35\11\25\0\3\11\1\0\1\u0263\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u0264\24\11"+
    "\25\0\3\11\1\0\1\u0265\3\0\3\11\1\u0266\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u0267\21\11"+
    "\25\0\3\11\1\0\1\u0268\3\0\7\11\1\u0269\26\11"+
    "\25\0\3\11\1\0\1\u026a\3\0\36\11\25\0\3\11"+
    "\1\0\1\u026b\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u026c\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u026d\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\22\11\1\u026e\13\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u026f\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0270\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u0271\7\11\1\u0272\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0273\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\27\11\1\u0274\6\11\25\0\3\11\1\0"+
    "\1\u0275\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0276\35\11\25\0\3\11\1\0\1\u0277\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u0278\24\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u0279\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u027a\2\11"+
    "\1\u027b\7\11\1\u027c\14\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u027d\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u027e\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u027f\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0280\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\11\1\u0281\34\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u0282\32\11\25\0\3\11\1\0\1\u0283\3\0"+
    "\36\11\25\0\3\11\1\0\1\u0284\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\11\11\1\u0285\24\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u0286\35\11\25\0\3\11"+
    "\1\0\1\u0287\3\0\2\11\1\u0288\15\11\1\u0289\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u028a\26\11"+
    "\25\0\3\11\1\0\1\u028b\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\20\11\1\u028c\15\11\25\0\3\11"+
    "\1\0\1\u028d\3\0\27\11\1\u028e\6\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u028f\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\13\11\1\u0290\22\11\25\0\3\11"+
    "\1\0\1\u0291\3\0\2\11\1\u0292\4\11\1\u0293\11\11"+
    "\1\u0294\14\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u0295\33\11\25\0\3\11\1\0\1\11\3\0\1\u0296"+
    "\35\11\25\0\3\11\1\0\1\u0297\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\20\11\1\u0298\15\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u0299\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u029a\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u029b\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u029c\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\4\11\1\u029d\31\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u029e\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\23\11\1\u029f\12\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u02a0\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u02a1\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u02a2\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u02a3\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\10\11\1\u02a4\25\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u02a5\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u02a6\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\4\11\1\u02a7\31\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u02a8\27\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u02a9\34\11\25\0\3\11"+
    "\1\0\1\11\3\0\10\11\1\u02aa\25\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u02ab\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u02ac\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u02ad\27\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u02ae\34\11\25\0\3\11"+
    "\1\0\1\11\3\0\20\11\1\u02af\15\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u02b0\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\20\11\1\u02b1\15\11\25\0\3\11"+
    "\1\0\1\11\3\0\22\11\1\u02b2\13\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u02b3\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u02b4\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\32\11\1\u02b5\3\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u02b6\26\11\25\0\3\11"+
    "\1\0\1\u02b7\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u02b8\21\11\25\0\3\11\1\0\1\u02b9"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u02ba\32\11\25\0\3\11\1\0\1\u02bb\3\0\36\11"+
    "\25\0\3\11\1\0\1\u02bc\3\0\2\11\1\u02bd\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\20\11\1\u02be\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u02bf\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u02c0\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\27\11\1\u02c1\6\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u02c2\21\11\1\u02c3"+
    "\13\11\25\0\3\11\1\0\1\u02c4\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u02c5\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u02c6\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\11\11\1\u02c7\24\11\25\0"+
    "\3\11\1\0\1\11\3\0\21\11\1\u02c8\14\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u02c9\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u02ca\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\10\11\1\u02cb\25\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u02cc\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u02cd\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u02ce\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\16\11\1\u02cf\17\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u02d0\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u02d1\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u02d2\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u02d3\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u02d4\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u02d5\21\11\25\0\3\11\1\0\1\u02d6"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\1\u02d7"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u02d8"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u02d9"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\20\11\1\u02da"+
    "\15\11\25\0\3\11\1\0\1\11\3\0\1\u02db\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u02dc\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u02dd\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\23\11\1\u02de\12\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u02df\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\10\11\1\u02e0\25\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u02e1\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u02e2\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u02e3\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u02e4\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u02e5\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\10\11\1\u02e6\25\11"+
    "\25\0\3\11\1\0\1\u02e7\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u02e8\27\11\25\0\3\11"+
    "\1\0\1\u02e9\3\0\1\u02ea\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u02eb\1\u02ec\2\11\1\u02ed\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u02ee\24\11"+
    "\25\0\3\11\1\0\1\11\3\0\34\11\1\u02ef\1\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u02f0\24\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\u02f1\23\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u02f2\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u02f3\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u02f4\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u02f5\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u02f6\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\31\11\1\u02f7\4\11\25\0"+
    "\3\11\1\0\1\11\3\0\17\11\1\u02f8\16\11\25\0"+
    "\3\11\1\0\1\u02f9\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u02fa\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u02fb\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u02fc\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\16\11\1\u02fd\17\11\25\0\3\11\1\0\1\11"+
    "\3\0\21\11\1\u02fe\14\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u02ff\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0300\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0301\32\11\25\0\3\11\1\0\1\u0302"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u0303\26\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u0304\26\11\25\0\3\11\1\0\1\11\3\0\11\11"+
    "\1\u0305\24\11\25\0\3\11\1\0\1\11\3\0\1\u0306"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0307"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0308"+
    "\4\11\1\u0309\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u030a\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u030b\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u030c\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u030d\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u030e\4\11\1\u030f\14\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u0310\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\22\11\1\u0311\13\11\25\0\3\11\1\0"+
    "\1\11\3\0\21\11\1\u0312\14\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u0313\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0314\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u0315\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u0316\21\11\25\0\3\11\1\0"+
    "\1\u0317\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0318\35\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0319\32\11\25\0\3\11\1\0\1\11\3\0\1\u031a"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\1\u031b\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u031c\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u031d\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u031e\34\11\25\0"+
    "\3\11\1\0\1\u031f\3\0\1\u0320\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u0321\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u0322\34\11\25\0\3\11"+
    "\1\0\1\11\3\0\22\11\1\u0323\13\11\25\0\3\11"+
    "\1\0\1\u0324\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0325\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\21\11\1\u0326\14\11\25\0\3\11\1\0\1\11"+
    "\3\0\10\11\1\u0327\25\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u0328\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0329\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u032a\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u032b\27\11\25\0\3\11\1\0\1\u032c"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u032d\32\11\25\0\3\11\1\0\1\u032e\3\0\1\u032f"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\30\11\1\u0330"+
    "\5\11\25\0\3\11\1\0\1\11\3\0\20\11\1\u0331"+
    "\15\11\25\0\3\11\1\0\1\11\3\0\11\11\1\u0332"+
    "\24\11\25\0\3\11\1\0\1\11\3\0\10\11\1\u0333"+
    "\25\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0334"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0335"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u0336"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0337"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u0338"+
    "\21\11\25\0\3\11\1\0\1\u0339\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u033a\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u033b\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u033c\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u033d\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u033e\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u033f\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0340\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u0341\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\20\11\1\u0342\15\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u0343\35\11\25\0\3\11"+
    "\1\0\1\u0344\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0345\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\22\11\1\u0346\13\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u0347\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0348\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0349\22\11\1\u034a\12\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u034b\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u034c\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\12\11\1\u034d\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u034e\32\11\25\0\3\11\1\0\1\u034f\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\5\11\1\u0350"+
    "\30\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u0351"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u0352"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u0353"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0354"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\30\11\1\u0355"+
    "\5\11\25\0\3\11\1\0\1\11\3\0\5\11\1\u0356"+
    "\30\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u0357"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0358"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u0359"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u035a"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u035b"+
    "\1\11\1\u035c\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\13\11\1\u035d\22\11\25\0\3\11\1\0\1\u035e\3\0"+
    "\12\11\1\u035f\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0360\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u0361\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\15\11\1\u0362\20\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u0363\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0364\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\15\11\1\u0365\20\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u0366\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\u0367\31\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u0368\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0369\35\11\25\0\3\11\1\0\1\11\3\0\1\u036a"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u036b"+
    "\21\11\25\0\3\11\1\0\1\u036c\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\15\11\1\u036d\20\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u036e\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u036f\23\11\25\0"+
    "\3\11\1\0\1\u0370\3\0\12\11\1\u0371\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0372\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0373\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\262\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u0374\35\11\25\0\3\11"+
    "\1\0\1\u0375\3\0\36\11\25\0\3\11\1\0\1\u0376"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\5\11"+
    "\1\u0377\30\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u0378\23\11\25\0\3\11\1\0\1\11\3\0\22\11"+
    "\1\u0379\13\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u037a\26\11\25\0\3\11\1\0\1\11\3\0\11\11"+
    "\1\u037b\24\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u037c\27\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u037d\33\11\25\0\3\11\1\0\1\11\3\0\1\u037e"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u037f"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\15\11\1\u0380"+
    "\20\11\25\0\3\11\1\0\1\11\3\0\21\11\1\u0381"+
    "\14\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0382"+
    "\27\11\25\0\3\11\1\0\1\u0383\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u0384\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u0385\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\17\11\1\u0386\16\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0387\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\20\11\1\u0388\15\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u0389\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\33\11\1\u038a\2\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u038b\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u038c\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u038d\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\11\1\u038e\34\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\11\1\u038f\34\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0390\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0391\27\11\25\0\3\11\1\0\1\353\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u0392"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u0393"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\27\11\1\u0394"+
    "\6\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u0395"+
    "\14\11\1\u0396\15\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u0397\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0398\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u0399\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u039a\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u039b\5\11\1\u039c\27\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u039d\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u039e\32\11\25\0\3\11\1\0\1\u039f\3\0"+
    "\1\u03a0\35\11\25\0\3\11\1\0\1\u03a1\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u03a2\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\10\11\1\u03a3\25\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u03a4\33\11"+
    "\25\0\3\11\1\0\1\u03a5\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\17\11\1\u03a6\16\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u03a7\27\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u03a8\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u03a9\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u03aa\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\15\11\1\u03ab\20\11\25\0\3\11\1\0"+
    "\1\u03ac\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u03ad\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\161\26\11\25\0\3\11\1\0\1\u03ae\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\1\u03af\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u03b0\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u03b1\24\11"+
    "\25\0\3\11\1\0\1\11\3\0\15\11\1\u03b2\20\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u03b3\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u03b4\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\4\11\1\u03b5\31\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u03b6\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u03b7\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u03b8\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u03b9\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u03ba\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u03bb\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\10\11\1\u03bc\25\11\25\0"+
    "\3\11\1\0\1\11\3\0\11\11\1\u03bd\10\11\1\u03be"+
    "\13\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u03bf"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u03c0"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\27\11\1\u03c1"+
    "\6\11\25\0\3\11\1\0\1\u03c2\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u03c3\16\11\1\u03c4"+
    "\6\11\1\u03c5\4\11\25\0\3\11\1\0\1\u03c6\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\11\11\1\u03c7"+
    "\2\11\1\u03c8\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u03c9\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u03ca\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u03cb\26\11\25\0\3\11\1\0\1\u03cc\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u03cd"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u03ce"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\12\11\1\u03cf"+
    "\23\11\25\0\3\11\1\0\1\11\3\0\4\11\1\u03d0"+
    "\31\11\25\0\3\11\1\0\1\u03d1\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u03d2\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\22\11\1\u03d3\13\11\25\0"+
    "\3\11\1\0\1\u03d4\3\0\36\11\25\0\3\11\1\0"+
    "\1\u03d5\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\22\11\1\u03d6\13\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u03d7\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\21\11\1\u03d8\14\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u03d9\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\27\11\1\u03da\6\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u03db\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\21\11\1\u03dc\14\11\25\0\3\11\1\0\1\11\3\0"+
    "\10\11\1\u03dd\25\11\25\0\3\11\1\0\1\u03de\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u03df"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\1\u03e0\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u03e1\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u03e2\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u03e3\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u03e4\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\22\11\1\u03e5\13\11"+
    "\25\0\3\11\1\0\1\11\3\0\20\11\1\u03e6\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\22\11\1\u03e7\13\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u03e8\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\5\11\1\u03e9\30\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u03ea\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u03eb\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u03ec\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\20\11\1\u03ed\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\30\11\1\u03ee\5\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u03ef\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u03f0\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u03f1\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u03f2\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u03f3\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u03f4\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u03f5\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u03f6\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\22\11\1\u03f7\13\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u03f8\23\11\25\0"+
    "\3\11\1\0\1\u03f9\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u03fa\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u03fb\21\11\25\0\3\11\1\0"+
    "\1\215\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u03fc\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u03fd\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u03fe\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u03ff\3\11\1\u0400\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u0401\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\11\11\1\u0402\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\31\11\1\u0403\4\11\25\0\3\11\1\0"+
    "\1\11\3\0\5\11\1\u0404\30\11\25\0\3\11\1\0"+
    "\1\11\3\0\5\11\1\u0405\30\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0406\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0407\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0408\32\11\25\0\3\11\1\0"+
    "\1\u0409\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u040a\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\u040b\31\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u040c\27\11\25\0\3\11\1\0\1\u040d\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u040e"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u040f"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\5\11\1\u0410"+
    "\30\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0411"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u0412"+
    "\33\11\25\0\3\11\1\0\1\u0413\3\0\36\11\25\0"+
    "\3\11\1\0\1\u0414\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\10\11\1\u0415\25\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u0416\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0417\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\23\11\1\u0418\12\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0419\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\31\11\1\u041a\4\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u041b\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u041c\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\21\11\1\u041d\14\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u041e\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\10\11\1\u041f\25\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0420\35\11\25\0\3\11\1\0\1\11\3\0\15\11"+
    "\1\u0421\20\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u0422\23\11\25\0\3\11\1\0\1\u0423\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u0424\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u0425\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u0426\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u0427\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\23\11\1\u0428\12\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u0429\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u042a\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\11\1\u042b\34\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u042c\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u042d\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u042e\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u042f\27\11\25\0"+
    "\3\11\1\0\1\u0430\3\0\36\11\25\0\3\11\1\0"+
    "\1\u0431\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u0432\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u0433\35\11\25\0\3\11\1\0\1\11\3\0\11\11"+
    "\1\u0434\24\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u0435\33\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0436\32\11\25\0\3\11\1\0\1\11\3\0\21\11"+
    "\1\u0437\14\11\25\0\3\11\1\0\1\11\3\0\5\11"+
    "\1\u0438\30\11\25\0\3\11\1\0\1\11\3\0\5\11"+
    "\1\u0439\30\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u043a\33\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u043b\33\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u043c\26\11\25\0\3\11\1\0\1\11\3\0\1\u043d"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\1\u043e\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u043f\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\11\11\1\u0440\24\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u0441\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u0442\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\10\11\1\u0443\25\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u0444\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u0445\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u0446\35\11\25\0"+
    "\3\11\1\0\1\u0447\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0448\32\11\25\0\3\11\1\0"+
    "\1\u0449\3\0\36\11\25\0\3\11\1\0\1\u044a\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u044b"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\1\u044c\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\7\11\1\u044d\26\11"+
    "\25\0\3\11\1\0\1\11\3\0\5\11\1\u044e\30\11"+
    "\25\0\3\11\1\0\1\11\3\0\5\11\1\u044f\30\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u0450\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u0451\34\11"+
    "\25\0\3\11\1\0\1\u0452\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u0453\26\11\25\0\3\11"+
    "\1\0\1\11\3\0\22\11\1\u0454\13\11\25\0\3\11"+
    "\1\0\1\11\3\0\4\11\1\u0455\31\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u0456\26\11\25\0\3\11"+
    "\1\0\1\u010f\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u0457\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u0458\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\23\11\1\u0459\12\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u045a\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u045b\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\11\1\u045c\34\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u045d\23\11\25\0\3\11\1\0\1\u045e"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\27\11"+
    "\1\u045f\6\11\25\0\3\11\1\0\1\11\3\0\22\11"+
    "\1\u0460\13\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u0461\26\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u0462\27\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u0463\21\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0464\32\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0465\32\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u0466\27\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u0467\27\11\25\0\3\11\1\0\1\11\3\0\23\11"+
    "\1\u0468\12\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u0469\21\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u046a\27\11\25\0\3\11\1\0\1\11\3\0\1\11"+
    "\1\u046b\34\11\25\0\3\11\1\0\1\11\3\0\22\11"+
    "\1\u046c\13\11\25\0\3\11\1\0\1\11\3\0\21\11"+
    "\1\u046d\14\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u046e\33\11\25\0\3\11\1\0\1\11\3\0\5\11"+
    "\1\u046f\30\11\25\0\3\11\1\0\1\u0470\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\5\11\1\u0471\30\11"+
    "\25\0\3\11\1\0\1\u0472\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\31\11\1\u0473\4\11\25\0\3\11"+
    "\1\0\1\u0474\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u0475\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u0476\27\11\25\0\3\11\1\0\1\u0477"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\7\11"+
    "\1\u0478\26\11\25\0\3\11\1\0\1\11\3\0\6\11"+
    "\1\u0479\27\11\25\0\3\11\1\0\1\u047a\3\0\36\11"+
    "\25\0\3\11\1\0\1\u047b\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u047c\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u047d\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\4\11\1\u047e\31\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u047f\26\11\25\0\3\11"+
    "\1\0\1\u0480\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\4\11\1\u0481\4\11\1\u0482\2\11\1\u0483\21\11"+
    "\25\0\3\11\1\0\1\11\3\0\10\11\1\u0484\25\11"+
    "\25\0\3\11\1\0\1\11\3\0\2\11\1\u0485\33\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u0486\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u0487\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\u0488\23\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u0489\10\11\1\u048a"+
    "\24\11\25\0\3\11\1\0\1\11\3\0\27\11\1\u048b"+
    "\6\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u048c"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\22\11\1\u048d"+
    "\13\11\25\0\2\11\1\u048e\1\0\1\11\3\0\36\11"+
    "\25\0\3\11\1\0\1\u048f\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u0490\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u0491\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\31\11\1\u0492\4\11\25\0\3\11"+
    "\1\0\1\u0493\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u0494\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0495\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u0496\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\10\11\1\u0497\25\11\25\0\3\11\1\0\1\11"+
    "\3\0\11\11\1\u0498\24\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0499\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u049a\32\11\25\0\3\11\1\0\1\u049b\3\0"+
    "\36\11\25\0\3\11\1\0\1\u049c\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\11\11\1\u049d\24\11\25\0"+
    "\3\11\1\0\1\11\3\0\17\11\1\u049e\16\11\25\0"+
    "\3\11\1\0\1\u049f\3\0\36\11\25\0\3\11\1\0"+
    "\1\u04a0\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u04a1\35\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u04a2\21\11\25\0\3\11\1\0\1\u04a3\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u04a4\35\11\25\0"+
    "\3\11\1\0\1\u04a5\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u04a6\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\5\11\1\u04a7\30\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u04a8\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u04a9\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u04aa\32\11\25\0\3\11\1\0"+
    "\1\u04ab\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u04ac\27\11\25\0\3\11\1\0\1\u04ad\3\0"+
    "\11\11\1\u04ae\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\21\11\1\u04af\14\11\25\0\3\11\1\0\1\u04b0\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\17\11\1\u04b1"+
    "\16\11\25\0\3\11\1\0\1\11\3\0\4\11\1\u04b2"+
    "\31\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u04b3"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u04b4"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u04b5"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u04b6"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u04b7"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\22\11\1\u04b8"+
    "\13\11\25\0\3\11\1\0\1\11\3\0\20\11\1\u04b9"+
    "\15\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u04ba"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\4\11\1\u04bb"+
    "\31\11\25\0\3\11\1\0\1\11\3\0\20\11\1\u04bc"+
    "\15\11\25\0\3\11\1\0\1\11\3\0\4\11\1\u04bd"+
    "\31\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u04be"+
    "\26\11\25\0\3\11\1\0\1\u04bf\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u04c0\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u04c1\32\11\25\0"+
    "\3\11\1\0\1\u04c2\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u04c3\32\11\25\0\3\11\1\0"+
    "\1\u04c4\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\17\11\1\u04c5\16\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u04c6\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u04c7\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u04c8\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\12\11\1\u04c9\23\11\25\0\3\11\1\0\1\u04ca\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u04cb"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u04cc"+
    "\33\11\25\0\3\11\1\0\1\u04cd\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\13\11\1\u04ce\22\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u04cf\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u04d0\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u04d1\33\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u04d2\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u04d3\23\11\25\0"+
    "\3\11\1\0\1\u04d4\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u04d5\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\5\11\1\u04d6\30\11\25\0\3\11\1\0"+
    "\1\u04d7\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\31\11\1\u01e9\4\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u04d8\35\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u04d9\33\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u04da\23\11\25\0\3\11\1\0\1\11\3\0\10\11"+
    "\1\u04db\25\11\25\0\3\11\1\0\1\11\3\0\27\11"+
    "\1\u04dc\6\11\25\0\3\11\1\0\1\11\3\0\13\11"+
    "\1\u04dd\22\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u04de\21\11\25\0\3\11\1\0\1\11\3\0\14\11"+
    "\1\u04df\21\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u04e0\32\11\25\0\3\11\1\0\1\u04e1\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u04e2\32\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u04e3\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\22\11\1\u04e4\13\11"+
    "\25\0\3\11\1\0\1\u04e5\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u04e6\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\21\11\1\u04e7\14\11\25\0\3\11"+
    "\1\0\1\11\3\0\22\11\1\u04e8\13\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\u04e9\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u04ea\26\11\25\0\3\11"+
    "\1\0\1\11\3\0\12\11\1\u04eb\23\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u04ec\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u04ed\27\11\25\0\3\11"+
    "\1\0\1\u04ee\3\0\36\11\25\0\3\11\1\0\1\u04ef"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\1\11"+
    "\1\u04f0\34\11\25\0\3\11\1\0\1\11\3\0\12\11"+
    "\1\u04f1\23\11\25\0\3\11\1\0\1\u04f2\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\5\11\1\u04f3\30\11"+
    "\25\0\3\11\1\0\1\11\3\0\14\11\1\u04f4\21\11"+
    "\25\0\3\11\1\0\1\u04f5\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\3\11\1\u04f6\32\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u04f7\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u04f8\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u04f9\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u04fa\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u04fb\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\13\11\1\u04fc\22\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u04fd\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\30\11\1\u0152\5\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u04fe\26\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u04ff\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u0500\30\11\25\0\3\11\1\0\1\u0501\3\0"+
    "\36\11\25\0\3\11\1\0\1\u0502\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u0503\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\12\11\1\u0504\23\11\25\0"+
    "\3\11\1\0\1\11\3\0\23\11\1\u0505\12\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0506\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u0507\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\4\11\1\u0508\31\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u0509\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u050a\3\11\1\u050b"+
    "\24\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u050c"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u050d"+
    "\26\11\25\0\3\11\1\0\1\u050e\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u050f\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\1\u0510\35\11\25\0\3\11"+
    "\1\0\1\11\3\0\5\11\1\u0511\30\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u0512\26\11\25\0\3\11"+
    "\1\0\1\u0513\3\0\36\11\25\0\3\11\1\0\1\u0514"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u0515\33\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0516\32\11\25\0\3\11\1\0\1\u0517\3\0\36\11"+
    "\25\0\3\11\1\0\1\u0518\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\6\11\1\u01b0\27\11\25\0\3\11"+
    "\1\0\1\11\3\0\2\11\1\u0519\33\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u051a\34\11\25\0\3\11"+
    "\1\0\1\11\3\0\14\11\1\335\21\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u051b\26\11\25\0\3\11"+
    "\1\0\1\u051c\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u051d\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\6\11\1\u051e\27\11\25\0\3\11\1\0\1\11"+
    "\3\0\5\11\1\u051f\30\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0520\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\14\11\1\u0521\21\11\25\0\3\11\1\0\1\11"+
    "\3\0\15\11\1\u0522\20\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u0523\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u0524\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\13\11\1\u0525\22\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u0526\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\17\11\1\u0527\16\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u0528\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\12\11\1\u0529\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u052a\27\11\25\0\2\11\1\u052b\1\0\1\11"+
    "\3\0\36\11\25\0\3\11\1\0\1\11\3\0\11\11"+
    "\1\u052c\24\11\25\0\3\11\1\0\1\11\3\0\11\11"+
    "\1\u052d\24\11\25\0\3\11\1\0\1\11\3\0\1\u052e"+
    "\35\11\25\0\3\11\1\0\1\11\3\0\5\11\1\u052f"+
    "\30\11\25\0\3\11\1\0\1\11\3\0\13\11\1\u0530"+
    "\22\11\25\0\3\11\1\0\1\11\3\0\27\11\1\u0531"+
    "\6\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0532"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u0533"+
    "\34\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0534"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u0535"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\11\11\1\u0536"+
    "\2\11\1\u0537\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\3\11\1\u0538\32\11\25\0\3\11\1\0\1\11\3\0"+
    "\12\11\1\u0539\23\11\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\u053a\31\11\25\0\3\11\1\0\1\11\3\0"+
    "\4\11\1\u053b\31\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u053c\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u053d\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u053e\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\30\11\1\u013a\5\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u053f\30\11\25\0\3\11\1\0\1\u0540\3\0"+
    "\36\11\25\0\2\11\1\u0541\1\0\1\11\3\0\36\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\u0542\35\11\25\0"+
    "\3\11\1\0\1\11\3\0\14\11\1\u0543\21\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u0544\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\31\11\1\u0545\4\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u0546\27\11\25\0"+
    "\3\11\1\0\1\u0547\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0548\33\11\25\0\3\11\1\0"+
    "\1\u0549\3\0\36\11\25\0\3\11\1\0\1\u054a\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u024e"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u054b"+
    "\27\11\25\0\3\11\1\0\1\u054c\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\2\11\1\u054d\33\11\25\0"+
    "\3\11\1\0\1\u054e\3\0\36\11\25\0\3\11\1\0"+
    "\1\u054f\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\11\11\1\u0550\24\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0551\27\11\25\0\3\11\1\0\1\u0552\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\14\11\1\u0553"+
    "\21\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0554"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\15\11\1\u0555"+
    "\20\11\25\0\3\11\1\0\1\11\3\0\5\11\1\u0556"+
    "\30\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u0557"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u0558"+
    "\32\11\25\0\3\11\1\0\1\u01ba\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u0559\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\6\11\1\u055a\27\11\25\0"+
    "\3\11\1\0\1\11\3\0\4\11\1\u055b\31\11\25\0"+
    "\3\11\1\0\1\11\3\0\3\11\1\u055c\32\11\25\0"+
    "\3\11\1\0\1\11\3\0\4\11\1\u055d\31\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u055e\26\11\25\0"+
    "\3\11\1\0\1\u055f\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u0560\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\17\11\1\u0561\16\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0562\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\13\11\1\u0563\22\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u0564\23\11\25\0\3\11\1\0"+
    "\1\11\3\0\2\11\1\u0565\33\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\u0566\35\11\25\0\3\11\1\0\1\11"+
    "\3\0\2\11\1\u0567\33\11\25\0\3\11\1\0\1\11"+
    "\3\0\22\11\1\u0568\13\11\25\0\3\11\1\0\1\11"+
    "\3\0\12\11\1\u0569\23\11\25\0\3\11\1\0\1\11"+
    "\3\0\3\11\1\u056a\32\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u056b\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\13\11\1\u056c\22\11\25\0\3\11\1\0\1\11\3\0"+
    "\30\11\1\u02fa\5\11\25\0\3\11\1\0\1\u056d\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u056e"+
    "\32\11\25\0\3\11\1\0\1\11\3\0\3\11\1\u056f"+
    "\32\11\25\0\3\11\1\0\1\u0570\3\0\36\11\25\0"+
    "\3\11\1\0\1\11\3\0\21\11\1\u0571\14\11\25\0"+
    "\3\11\1\0\1\11\3\0\5\11\1\u0572\30\11\25\0"+
    "\3\11\1\0\1\11\3\0\11\11\1\u0573\24\11\25\0"+
    "\3\11\1\0\1\11\3\0\7\11\1\u022d\26\11\25\0"+
    "\3\11\1\0\1\11\3\0\23\11\1\u0574\12\11\25\0"+
    "\3\11\1\0\1\11\3\0\10\11\1\u0575\25\11\25\0"+
    "\3\11\1\0\1\u0238\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\22\11\1\u0576\13\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u0577\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\1\11\1\u0578\34\11\25\0\3\11\1\0"+
    "\1\11\3\0\21\11\1\u0579\14\11\25\0\3\11\1\0"+
    "\1\u029d\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u057a\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\12\11\1\u057b\23\11\25\0\3\11\1\0\1\u057c\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\1\11\1\u057d"+
    "\34\11\25\0\3\11\1\0\1\u057e\3\0\36\11\25\0"+
    "\3\11\1\0\1\u057f\3\0\36\11\25\0\3\11\1\0"+
    "\1\11\3\0\11\11\1\u0580\24\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u0581\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u0582\23\11\25\0\3\11\1\0"+
    "\1\11\3\0\15\11\1\u0583\20\11\25\0\3\11\1\0"+
    "\1\11\3\0\13\11\1\u0584\22\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u0585\23\11\25\0\3\11\1\0"+
    "\1\11\3\0\17\11\1\u0586\16\11\25\0\3\11\1\0"+
    "\1\u0587\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\30\11\1\u02f5\5\11\25\0\3\11\1\0\1\11\3\0"+
    "\31\11\1\u0588\4\11\25\0\3\11\1\0\1\11\3\0"+
    "\6\11\1\u0589\27\11\25\0\3\11\1\0\1\11\3\0"+
    "\2\11\1\u058a\33\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u058b\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\5\11\1\u058c\30\11\25\0\3\11\1\0\1\11\3\0"+
    "\1\u058d\35\11\25\0\3\11\1\0\1\11\3\0\5\11"+
    "\1\u058e\30\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u058f\32\11\25\0\3\11\1\0\1\11\3\0\2\11"+
    "\1\u0590\33\11\25\0\3\11\1\0\1\11\3\0\3\11"+
    "\1\u0591\32\11\25\0\3\11\1\0\1\u0592\3\0\36\11"+
    "\25\0\3\11\1\0\1\u0237\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\u0593\35\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0594\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u0595\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0596\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\12\11\1\u0597\23\11\25\0\3\11\1\0"+
    "\1\11\3\0\6\11\1\u0598\27\11\25\0\3\11\1\0"+
    "\1\11\3\0\3\11\1\u0599\32\11\25\0\3\11\1\0"+
    "\1\11\3\0\14\11\1\u059a\21\11\25\0\3\11\1\0"+
    "\1\11\3\0\7\11\1\u059b\26\11\25\0\3\11\1\0"+
    "\1\11\3\0\5\11\1\u059c\30\11\25\0\3\11\1\0"+
    "\1\u03c5\3\0\36\11\25\0\3\11\1\0\1\11\3\0"+
    "\22\11\1\u059d\13\11\25\0\3\11\1\0\1\11\3\0"+
    "\14\11\1\u059e\21\11\25\0\3\11\1\0\1\11\3\0"+
    "\21\11\1\u059f\14\11\25\0\3\11\1\0\1\u03d0\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\6\11\1\u05a0"+
    "\27\11\25\0\3\11\1\0\1\11\3\0\7\11\1\u05a1"+
    "\26\11\25\0\3\11\1\0\1\11\3\0\1\u05a2\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u05a3\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u05a4\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\20\11\1\u05a5\15\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\u05a6\23\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u05a7\34\11"+
    "\25\0\3\11\1\0\1\11\3\0\1\11\1\u05a8\34\11"+
    "\25\0\3\11\1\0\1\u0466\3\0\36\11\25\0\3\11"+
    "\1\0\1\u03c4\3\0\36\11\25\0\3\11\1\0\1\11"+
    "\3\0\1\u05a9\35\11\25\0\3\11\1\0\1\11\3\0"+
    "\7\11\1\u05aa\26\11\25\0\3\11\1\0\1\u0225\3\0"+
    "\36\11\25\0\3\11\1\0\1\11\3\0\2\11\1\u05ab"+
    "\33\11\25\0\3\11\1\0\1\11\3\0\22\11\1\u05ac"+
    "\13\11\25\0\3\11\1\0\1\11\3\0\22\11\1\u05ad"+
    "\13\11\25\0\3\11\1\0\1\11\3\0\1\u05ae\35\11"+
    "\25\0\3\11\1\0\1\11\3\0\30\11\1\u028a\5\11"+
    "\25\0\3\11\1\0\1\11\3\0\27\11\1\u05af\6\11"+
    "\25\0\3\11\1\0\1\11\3\0\6\11\1\u05b0\27\11"+
    "\25\0\3\11\1\0\1\11\3\0\12\11\1\u05b1\23\11"+
    "\25\0\3\11\1\0\1\11\3\0\3\11\1\u05b2\32\11"+
    "\25\0\3\11\1\0\1\u0323\3\0\36\11\25\0\3\11"+
    "\1\0\1\11\3\0\7\11\1\u05b3\26\11\25\0\3\11"+
    "\1\0\1\11\3\0\11\11\1\u05b4\24\11\25\0\3\11"+
    "\1\0\1\11\3\0\22\11\1\u05b5\13\11\25\0\3\11"+
    "\1\0\1\11\3\0\30\11\1\u03cd\5\11\25\0\3\11"+
    "\1\0\1\11\3\0\1\11\1\u05b6\34\11\25\0\3\11"+
    "\1\0\1\u046c\3\0\36\11\15\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[68086];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\2\11\37\1\5\11\7\1\1\11"+
    "\1\1\1\0\1\11\1\1\1\11\3\0\7\1\2\11"+
    "\1\0\1\1\1\0\1\1\1\0\161\1\4\11\1\1"+
    "\3\11\1\1\1\11\1\0\1\11\1\1\2\0\325\1"+
    "\2\11\1\0\14\1\1\11\u040a\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1462];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
  private StringBuffer string = new StringBuffer();

  private String originId;
   
  /** 
   * Resets scanner.
   */    
  public void reset(java.io.Reader reader, String originId) {
    this.originId = originId;
    yyreset(reader);
  } 
  
  /**
   * {@inheritDoc}
   */
  public void close() throws java.io.IOException {
    yyclose();
  } 

  /** This indicates that a constructor shouldn't be used. */
  public class DeprecatedConstructorException extends Exception {} 


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  PL1Scanner(java.io.Reader in, String originId) {
  	this.originId = originId;
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  PL1Scanner(java.io.InputStream in, String originId) {
    this(new java.io.InputStreamReader(in), originId);
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 202) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public PL1Token getNextToken() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 301: 
          { return new PL1Token(ETokenType.RELEASE	, yychar, yyline, yytext(), originId);
          }
        case 362: break;
        case 204: 
          { return new PL1Token(ETokenType.REFER	, yychar, yyline, yytext(), originId);
          }
        case 363: break;
        case 195: 
          { return new PL1Token(ETokenType.UNTIL	, yychar, yyline, yytext(), originId);
          }
        case 364: break;
        case 223: 
          { return new PL1Token(ETokenType.TSTACK	, yychar, yyline, yytext(), originId);
          }
        case 365: break;
        case 256: 
          { return new PL1Token(ETokenType.OFFSET	, yychar, yyline, yytext(), originId);
          }
        case 366: break;
        case 11: 
          { return new PL1Token(ETokenType.A	, yychar, yyline, yytext(), originId);
          }
        case 367: break;
        case 22: 
          { return new PL1Token(ETokenType.F	, yychar, yyline, yytext(), originId);
          }
        case 368: break;
        case 54: 
          { return new PL1Token(ETokenType.XN	, yychar, yyline, yytext(), originId);
          }
        case 369: break;
        case 10: 
          { return new PL1Token(ETokenType.MINUS, yychar, yyline, yytext(), originId);
          }
        case 370: break;
        case 46: 
          { return new PL1Token(ETokenType.TP	, yychar, yyline, yytext(), originId);
          }
        case 371: break;
        case 190: 
          { return new PL1Token(ETokenType.NOUNDERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 372: break;
        case 120: 
          { return new PL1Token(ETokenType.CELL	, yychar, yyline, yytext(), originId);
          }
        case 373: break;
        case 323: 
          { return new PL1Token(ETokenType.DOWNTHRU, yychar, yyline, yytext(), originId);
          }
        case 374: break;
        case 133: 
          { return new PL1Token(ETokenType.INITIAL	, yychar, yyline, yytext(), originId);
          }
        case 375: break;
        case 197: 
          { return new PL1Token(ETokenType.UNBUFFERED	, yychar, yyline, yytext(), originId);
          }
        case 376: break;
        case 155: 
          { return new PL1Token(ETokenType.PAGE	, yychar, yyline, yytext(), originId);
          }
        case 377: break;
        case 288: 
          { return new PL1Token(ETokenType.LIMITED	, yychar, yyline, yytext(), originId);
          }
        case 378: break;
        case 36: 
          { return new PL1Token(ETokenType.PREPROCESSOR_DIRECTIVE, yychar, yyline, yytext(), originId);
          }
        case 379: break;
        case 342: 
          { return new PL1Token(ETokenType.RECURSIVE	, yychar, yyline, yytext(), originId);
          }
        case 380: break;
        case 316: 
          { return new PL1Token(ETokenType.KEYFROM	, yychar, yyline, yytext(), originId);
          }
        case 381: break;
        case 169: 
          { return new PL1Token(ETokenType.WHEN	, yychar, yyline, yytext(), originId);
          }
        case 382: break;
        case 255: 
          { return new PL1Token(ETokenType.PREPROCESSOR_OPTION, yychar, yyline, yytext(), originId);
          }
        case 383: break;
        case 267: 
          { return new PL1Token(ETokenType.FORMAT	, yychar, yyline, yytext(), originId);
          }
        case 384: break;
        case 114: 
          { return new PL1Token(ETokenType.EXIT	, yychar, yyline, yytext(), originId);
          }
        case 385: break;
        case 306: 
          { return new PL1Token(ETokenType.PREPROCESSOR_XINSCAN, yychar, yyline, yytext(), originId);
          }
        case 386: break;
        case 63: 
          { return new PL1Token(ETokenType.GO	, yychar, yyline, yytext(), originId);
          }
        case 387: break;
        case 102: 
          { return new PL1Token(ETokenType.REDUCIBLE	, yychar, yyline, yytext(), originId);
          }
        case 388: break;
        case 194: 
          { return new PL1Token(ETokenType.LOCAL	, yychar, yyline, yytext(), originId);
          }
        case 389: break;
        case 164: 
          { return new PL1Token(ETokenType.FIXEDOVERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 390: break;
        case 335: 
          { return new PL1Token(ETokenType.TRANSIENT	, yychar, yyline, yytext(), originId);
          }
        case 391: break;
        case 253: 
          { return new PL1Token(ETokenType.SYSTEM	, yychar, yyline, yytext(), originId);
          }
        case 392: break;
        case 121: 
          { return new PL1Token(ETokenType.CALL	, yychar, yyline, yytext(), originId);
          }
        case 393: break;
        case 115: 
          { return new PL1Token(ETokenType.BOOLEAN_LITERAL, yychar, yyline, yytext(), originId);
          }
        case 394: break;
        case 15: 
          { return new PL1Token(ETokenType.D	, yychar, yyline, yytext(), originId);
          }
        case 395: break;
        case 13: 
          { return new PL1Token(ETokenType.I	, yychar, yyline, yytext(), originId);
          }
        case 396: break;
        case 122: 
          { return new PL1Token(ETokenType.CONVERSION	, yychar, yyline, yytext(), originId);
          }
        case 397: break;
        case 307: 
          { return new PL1Token(ETokenType.BLKSIZE	, yychar, yyline, yytext(), originId);
          }
        case 398: break;
        case 37: 
          { return new PL1Token(ETokenType.END_OF_LINE_COMMENT, yychar, yyline, yytext(), originId);
          }
        case 399: break;
        case 358: 
          { return new PL1Token(ETokenType.SCALARVARYING	, yychar, yyline, yytext(), originId);
          }
        case 400: break;
        case 27: 
          { return new PL1Token(ETokenType.COLON, yychar, yyline, yytext(), originId);
          }
        case 401: break;
        case 124: 
          { return new PL1Token(ETokenType.CONNECTED	, yychar, yyline, yytext(), originId);
          }
        case 402: break;
        case 327: 
          { return new PL1Token(ETokenType.PASSWORD	, yychar, yyline, yytext(), originId);
          }
        case 403: break;
        case 355: 
          { return new PL1Token(ETokenType.STRINGVALUE	, yychar, yyline, yytext(), originId);
          }
        case 404: break;
        case 336: 
          { return new PL1Token(ETokenType.INVALIDOP	, yychar, yyline, yytext(), originId);
          }
        case 405: break;
        case 119: 
          { return new PL1Token(ETokenType.AREA	, yychar, yyline, yytext(), originId);
          }
        case 406: break;
        case 99: 
          { return new PL1Token(ETokenType.PUT	, yychar, yyline, yytext(), originId);
          }
        case 407: break;
        case 53: 
          { return new PL1Token(ETokenType.ON	, yychar, yyline, yytext(), originId);
          }
        case 408: break;
        case 281: 
          { return new PL1Token(ETokenType.NOCHARGRAPHIC	, yychar, yyline, yytext(), originId);
          }
        case 409: break;
        case 347: 
          { return new PL1Token(ETokenType.KEYLENGTH	, yychar, yyline, yytext(), originId);
          }
        case 410: break;
        case 118: 
          { return new PL1Token(ETokenType.ASSIGNABLE	, yychar, yyline, yytext(), originId);
          }
        case 411: break;
        case 167: 
          { return new PL1Token(ETokenType.GOTO	, yychar, yyline, yytext(), originId);
          }
        case 412: break;
        case 352: 
          { return new PL1Token(ETokenType.DESCRIPTORS	, yychar, yyline, yytext(), originId);
          }
        case 413: break;
        case 66: 
          { return new PL1Token(ETokenType.NOTEQ, yychar, yyline, yytext(), originId);
          }
        case 414: break;
        case 112: 
          { return new PL1Token(ETokenType.ELSE	, yychar, yyline, yytext(), originId);
          }
        case 415: break;
        case 20: 
          { return new PL1Token(ETokenType.B	, yychar, yyline, yytext(), originId);
          }
        case 416: break;
        case 287: 
          { return new PL1Token(ETokenType.LINKAGE	, yychar, yyline, yytext(), originId);
          }
        case 417: break;
        case 23: 
          { return new PL1Token(ETokenType.G	, yychar, yyline, yytext(), originId);
          }
        case 418: break;
        case 39: 
          { return new PL1Token(ETokenType.EXPONENTIATION, yychar, yyline, yytext(), originId);
          }
        case 419: break;
        case 136: 
          { return new PL1Token(ETokenType.DATE	, yychar, yyline, yytext(), originId);
          }
        case 420: break;
        case 333: 
          { return new PL1Token(ETokenType.REGIONAL	, yychar, yyline, yytext(), originId);
          }
        case 421: break;
        case 32: 
          { return new PL1Token(ETokenType.OR, yychar, yyline, yytext(), originId);
          }
        case 422: break;
        case 100: 
          { return new PL1Token(ETokenType.POSITION	, yychar, yyline, yytext(), originId);
          }
        case 423: break;
        case 321: 
          { return new PL1Token(ETokenType.IMPORTED	, yychar, yyline, yytext(), originId);
          }
        case 424: break;
        case 284: 
          { return new PL1Token(ETokenType.NOSUBSCRIPTRANGE	, yychar, yyline, yytext(), originId);
          }
        case 425: break;
        case 329: 
          { return new PL1Token(ETokenType.PRIORITY	, yychar, yyline, yytext(), originId);
          }
        case 426: break;
        case 293: 
          { return new PL1Token(ETokenType.OPTLINK	, yychar, yyline, yytext(), originId);
          }
        case 427: break;
        case 318: 
          { return new PL1Token(ETokenType.PREPROCESSOR_ACTIVATE 	, yychar, yyline, yytext(), originId);
          }
        case 428: break;
        case 74: 
          { return new PL1Token(ETokenType.EXPONENTIATIONEQ, yychar, yyline, yytext(), originId);
          }
        case 429: break;
        case 84: 
          { return new PL1Token(ETokenType.DECIMAL	, yychar, yyline, yytext(), originId);
          }
        case 430: break;
        case 86: 
          { return new PL1Token(ETokenType.DECLARE	, yychar, yyline, yytext(), originId);
          }
        case 431: break;
        case 161: 
          { return new PL1Token(ETokenType.BKWD	, yychar, yyline, yytext(), originId);
          }
        case 432: break;
        case 96: 
          { return new PL1Token(ETokenType.PARAMETER	, yychar, yyline, yytext(), originId);
          }
        case 433: break;
        case 78: 
          { return new PL1Token(ETokenType.ASSEMBLER	, yychar, yyline, yytext(), originId);
          }
        case 434: break;
        case 111: 
          { return new PL1Token(ETokenType.EDIT	, yychar, yyline, yytext(), originId);
          }
        case 435: break;
        case 9: 
          { return new PL1Token(ETokenType.E	, yychar, yyline, yytext(), originId);
          }
        case 436: break;
        case 186: 
          { return new PL1Token(ETokenType.INPUT	, yychar, yyline, yytext(), originId);
          }
        case 437: break;
        case 71: 
          { return new PL1Token(ETokenType.PLUSEQ, yychar, yyline, yytext(), originId);
          }
        case 438: break;
        case 176: 
          { return new PL1Token(ETokenType.ASCII	, yychar, yyline, yytext(), originId);
          }
        case 439: break;
        case 248: 
          { return new PL1Token(ETokenType.STATIC	, yychar, yyline, yytext(), originId);
          }
        case 440: break;
        case 42: 
          { return new PL1Token(ETokenType.MINUSEQ, yychar, yyline, yytext(), originId);
          }
        case 441: break;
        case 299: 
          { return new PL1Token(ETokenType.RETCODE	, yychar, yyline, yytext(), originId);
          }
        case 442: break;
        case 259: 
          { return new PL1Token(ETokenType.RETURN	, yychar, yyline, yytext(), originId);
          }
        case 443: break;
        case 264: 
          { return new PL1Token(ETokenType.HANDLE	, yychar, yyline, yytext(), originId);
          }
        case 444: break;
        case 295: 
          { return new PL1Token(ETokenType.PENDING	, yychar, yyline, yytext(), originId);
          }
        case 445: break;
        case 154: 
          { return new PL1Token(ETokenType.OPEN, yychar, yyline, yytext(), originId);
          }
        case 446: break;
        case 64: 
          { return new PL1Token(ETokenType.GX	, yychar, yyline, yytext(), originId);
          }
        case 447: break;
        case 187: 
          { return new PL1Token(ETokenType.IRREDUCIBLE	, yychar, yyline, yytext(), originId);
          }
        case 448: break;
        case 81: 
          { return new PL1Token(ETokenType.INTERNAL	, yychar, yyline, yytext(), originId);
          }
        case 449: break;
        case 68: 
          { return new PL1Token(ETokenType.ANDEQ, yychar, yyline, yytext(), originId);
          }
        case 450: break;
        case 33: 
          { return new PL1Token(ETokenType.PLUS, yychar, yyline, yytext(), originId);
          }
        case 451: break;
        case 156: 
          { return new PL1Token(ETokenType.PREPROCESSOR_PUSH, yychar, yyline, yytext(), originId);
          }
        case 452: break;
        case 349: 
          { return new PL1Token(ETokenType.DESCRIPTOR	, yychar, yyline, yytext(), originId);
          }
        case 453: break;
        case 21: 
          { return new PL1Token(ETokenType.M	, yychar, yyline, yytext(), originId);
          }
        case 454: break;
        case 137: 
          { return new PL1Token(ETokenType.DATA	, yychar, yyline, yytext(), originId);
          }
        case 455: break;
        case 55: 
          { return new PL1Token(ETokenType.XU	, yychar, yyline, yytext(), originId);
          }
        case 456: break;
        case 346: 
          { return new PL1Token(ETokenType.FROMALIEN	, yychar, yyline, yytext(), originId);
          }
        case 457: break;
        case 209: 
          { return new PL1Token(ETokenType.BUFND	, yychar, yyline, yytext(), originId);
          }
        case 458: break;
        case 305: 
          { return new PL1Token(ETokenType.HEXADEC	, yychar, yyline, yytext(), originId);
          }
        case 459: break;
        case 208: 
          { return new PL1Token(ETokenType.BUFNI	, yychar, yyline, yytext(), originId);
          }
        case 460: break;
        case 109: 
          { return new PL1Token(ETokenType.CONCATENATIONEQ, yychar, yyline, yytext(), originId);
          }
        case 461: break;
        case 2: 
          { /* ignore */
          }
        case 462: break;
        case 69: 
          { return new PL1Token(ETokenType.OREQ, yychar, yyline, yytext(), originId);
          }
        case 463: break;
        case 320: 
          { return new PL1Token(ETokenType.TRANSMIT	, yychar, yyline, yytext(), originId);
          }
        case 464: break;
        case 206: 
          { return new PL1Token(ETokenType.BEGIN	, yychar, yyline, yytext(), originId);
          }
        case 465: break;
        case 270: 
          { return new PL1Token(ETokenType.ENDPAGE	, yychar, yyline, yytext(), originId);
          }
        case 466: break;
        case 151: 
          { return new PL1Token(ETokenType.SIZE	, yychar, yyline, yytext(), originId);
          }
        case 467: break;
        case 101: 
          { return new PL1Token(ETokenType.PREPROCESSOR_POP, yychar, yyline, yytext(), originId);
          }
        case 468: break;
        case 231: 
          { return new PL1Token(ETokenType.DEFINE	, yychar, yyline, yytext(), originId);
          }
        case 469: break;
        case 214: 
          { return new PL1Token(ETokenType.FLOAT	, yychar, yyline, yytext(), originId);
          }
        case 470: break;
        case 261: 
          { return new PL1Token(ETokenType.RENAME	, yychar, yyline, yytext(), originId);
          }
        case 471: break;
        case 177: 
          { return new PL1Token(ETokenType.CDECL	, yychar, yyline, yytext(), originId);
          }
        case 472: break;
        case 289: 
          { return new PL1Token(ETokenType.STDCALL	, yychar, yyline, yytext(), originId);
          }
        case 473: break;
        case 50: 
          { return new PL1Token(ETokenType.VB	, yychar, yyline, yytext(), originId);
          }
        case 474: break;
        case 308: 
          { return new PL1Token(ETokenType.BUILTIN	, yychar, yyline, yytext(), originId);
          }
        case 475: break;
        case 70: 
          { return new PL1Token(ETokenType.CONCATENATION, yychar, yyline, yytext(), originId);
          }
        case 476: break;
        case 173: 
          { return new PL1Token(ETokenType.ERROR	, yychar, yyline, yytext(), originId);
          }
        case 477: break;
        case 145: 
          { return new PL1Token(ETokenType.UNALIGNED	, yychar, yyline, yytext(), originId);
          }
        case 478: break;
        case 203: 
          { return new PL1Token(ETokenType.REPLY	, yychar, yyline, yytext(), originId);
          }
        case 479: break;
        case 244: 
          { return new PL1Token(ETokenType.UNLOCK	, yychar, yyline, yytext(), originId);
          }
        case 480: break;
        case 343: 
          { return new PL1Token(ETokenType.BACKWARDS	, yychar, yyline, yytext(), originId);
          }
        case 481: break;
        case 279: 
          { return new PL1Token(ETokenType.DISPLAY	, yychar, yyline, yytext(), originId);
          }
        case 482: break;
        case 17: 
          { return new PL1Token(ETokenType.P	, yychar, yyline, yytext(), originId);
          }
        case 483: break;
        case 193: 
          { return new PL1Token(ETokenType.LABEL	, yychar, yyline, yytext(), originId);
          }
        case 484: break;
        case 143: 
          { return new PL1Token(ETokenType.LIKE	, yychar, yyline, yytext(), originId);
          }
        case 485: break;
        case 180: 
          { return new PL1Token(ETokenType.COBOL	, yychar, yyline, yytext(), originId);
          }
        case 486: break;
        case 330: 
          { return new PL1Token(ETokenType.RESERVED	, yychar, yyline, yytext(), originId);
          }
        case 487: break;
        case 48: 
          { return new PL1Token(ETokenType.IF	, yychar, yyline, yytext(), originId);
          }
        case 488: break;
        case 354: 
          { return new PL1Token(ETokenType.UNCONNECTED	, yychar, yyline, yytext(), originId);
          }
        case 489: break;
        case 216: 
          { return new PL1Token(ETokenType.KEYTO	, yychar, yyline, yytext(), originId);
          }
        case 490: break;
        case 361: 
          { return new PL1Token(ETokenType.SEPARATE_STATIC	, yychar, yyline, yytext(), originId);
          }
        case 491: break;
        case 265: 
          { return new PL1Token(ETokenType.BYADDR	, yychar, yyline, yytext(), originId);
          }
        case 492: break;
        case 165: 
          { return new PL1Token(ETokenType.FREE	, yychar, yyline, yytext(), originId);
          }
        case 493: break;
        case 34: 
          { return new PL1Token(ETokenType.GT, yychar, yyline, yytext(), originId);
          }
        case 494: break;
        case 35: 
          { return new PL1Token(ETokenType.LT, yychar, yyline, yytext(), originId);
          }
        case 495: break;
        case 240: 
          { return new PL1Token(ETokenType.NORMAL	, yychar, yyline, yytext(), originId);
          }
        case 496: break;
        case 196: 
          { return new PL1Token(ETokenType.UNION	, yychar, yyline, yytext(), originId);
          }
        case 497: break;
        case 166: 
          { return new PL1Token(ETokenType.FROM	, yychar, yyline, yytext(), originId);
          }
        case 498: break;
        case 332: 
          { return new PL1Token(ETokenType.RESIGNAL	, yychar, yyline, yytext(), originId);
          }
        case 499: break;
        case 337: 
          { return new PL1Token(ETokenType.INDEXAREA	, yychar, yyline, yytext(), originId);
          }
        case 500: break;
        case 57: 
          { return new PL1Token(ETokenType.BY	, yychar, yyline, yytext(), originId);
          }
        case 501: break;
        case 127: 
          { return new PL1Token(ETokenType.CHARACTER	, yychar, yyline, yytext(), originId);
          }
        case 502: break;
        case 269: 
          { return new PL1Token(ETokenType.KEYLOC	, yychar, yyline, yytext(), originId);
          }
        case 503: break;
        case 110: 
          { return new PL1Token(ETokenType.TRADITIONAL_COMMENT, yychar, yyline, yytext(), originId);
          }
        case 504: break;
        case 268: 
          { return new PL1Token(ETokenType.GENKEY	, yychar, yyline, yytext(), originId);
          }
        case 505: break;
        case 292: 
          { return new PL1Token(ETokenType.OPTIONS	, yychar, yyline, yytext(), originId);
          }
        case 506: break;
        case 170: 
          { return new PL1Token(ETokenType.ZERODIVIDE	, yychar, yyline, yytext(), originId);
          }
        case 507: break;
        case 257: 
          { return new PL1Token(ETokenType.PACKED	, yychar, yyline, yytext(), originId);
          }
        case 508: break;
        case 254: 
          { return new PL1Token(ETokenType.OUTPUT	, yychar, yyline, yytext(), originId);
          }
        case 509: break;
        case 238: 
          { return new PL1Token(ETokenType.NOSTRINGSIZE	, yychar, yyline, yytext(), originId);
          }
        case 510: break;
        case 189: 
          { return new PL1Token(ETokenType.DELAY	, yychar, yyline, yytext(), originId);
          }
        case 511: break;
        case 247: 
          { return new PL1Token(ETokenType.SELECT	, yychar, yyline, yytext(), originId);
          }
        case 512: break;
        case 47: 
          { return new PL1Token(ETokenType.IN	, yychar, yyline, yytext(), originId);
          }
        case 513: break;
        case 28: 
          { return new PL1Token(ETokenType.SEMICOLON, yychar, yyline, yytext(), originId);
          }
        case 514: break;
        case 298: 
          { return new PL1Token(ETokenType.RECSIZE	, yychar, yyline, yytext(), originId);
          }
        case 515: break;
        case 340: 
          { return new PL1Token(ETokenType.STRUCTURE	, yychar, yyline, yytext(), originId);
          }
        case 516: break;
        case 339: 
          { return new PL1Token(ETokenType.NON_QUICK	, yychar, yyline, yytext(), originId);
          }
        case 517: break;
        case 59: 
          { return new PL1Token(ETokenType.B3	, yychar, yyline, yytext(), originId);
          }
        case 518: break;
        case 75: 
          { return new PL1Token(ETokenType.ENVIRONMENT	, yychar, yyline, yytext(), originId);
          }
        case 519: break;
        case 103: 
          { return new PL1Token(ETokenType.BIT	, yychar, yyline, yytext(), originId);
          }
        case 520: break;
        case 29: 
          { return new PL1Token(ETokenType.NOT, yychar, yyline, yytext(), originId);
          }
        case 521: break;
        case 262: 
          { return new PL1Token(ETokenType.REPEAT	, yychar, yyline, yytext(), originId);
          }
        case 522: break;
        case 304: 
          { return new PL1Token(ETokenType.REWRITE	, yychar, yyline, yytext(), originId);
          }
        case 523: break;
        case 220: 
          { return new PL1Token(ETokenType.ATTACH	, yychar, yyline, yytext(), originId);
          }
        case 524: break;
        case 159: 
          { return new PL1Token(ETokenType.READ	, yychar, yyline, yytext(), originId);
          }
        case 525: break;
        case 135: 
          { return new PL1Token(ETokenType.VSAM	, yychar, yyline, yytext(), originId);
          }
        case 526: break;
        case 251: 
          { return new PL1Token(ETokenType.SIGNED	, yychar, yyline, yytext(), originId);
          }
        case 527: break;
        case 108: 
          { return new PL1Token(ETokenType.KEY	, yychar, yyline, yytext(), originId);
          }
        case 528: break;
        case 7: 
          { return new PL1Token(ETokenType.IDENTIFIER, yychar, yyline, yytext(), originId);
          }
        case 529: break;
        case 14: 
          { return new PL1Token(ETokenType.V	, yychar, yyline, yytext(), originId);
          }
        case 530: break;
        case 72: 
          { return new PL1Token(ETokenType.GTEQ, yychar, yyline, yytext(), originId);
          }
        case 531: break;
        case 91: 
          { return new PL1Token(ETokenType.UNDERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 532: break;
        case 25: 
          { return new PL1Token(ETokenType.RPAREN, yychar, yyline, yytext(), originId);
          }
        case 533: break;
        case 278: 
          { return new PL1Token(ETokenType.INDEXED	, yychar, yyline, yytext(), originId);
          }
        case 534: break;
        case 217: 
          { return new PL1Token(ETokenType.WIDECHAR	, yychar, yyline, yytext(), originId);
          }
        case 535: break;
        case 183: 
          { return new PL1Token(ETokenType.TITLE	, yychar, yyline, yytext(), originId);
          }
        case 536: break;
        case 201: 
          { return new PL1Token(ETokenType.PRINT	, yychar, yyline, yytext(), originId);
          }
        case 537: break;
        case 168: 
          { return new PL1Token(ETokenType.WAIT	, yychar, yyline, yytext(), originId);
          }
        case 538: break;
        case 246: 
          { return new PL1Token(ETokenType.UPDATE	, yychar, yyline, yytext(), originId);
          }
        case 539: break;
        case 138: 
          { return new PL1Token(ETokenType.NAME	, yychar, yyline, yytext(), originId);
          }
        case 540: break;
        case 205: 
          { return new PL1Token(ETokenType.RANGE	, yychar, yyline, yytext(), originId);
          }
        case 541: break;
        case 303: 
          { return new PL1Token(ETokenType.PREPROCESSOR_REPLACE, yychar, yyline, yytext(), originId);
          }
        case 542: break;
        case 225: 
          { return new PL1Token(ETokenType.THREAD	, yychar, yyline, yytext(), originId);
          }
        case 543: break;
        case 338: 
          { return new PL1Token(ETokenType.NOEXECOPS	, yychar, yyline, yytext(), originId);
          }
        case 544: break;
        case 123: 
          { return new PL1Token(ETokenType.CONDITION	, yychar, yyline, yytext(), originId);
          }
        case 545: break;
        case 211: 
          { return new PL1Token(ETokenType.FETCH	, yychar, yyline, yytext(), originId);
          }
        case 546: break;
        case 274: 
          { return new PL1Token(ETokenType.ANYCONDITION	, yychar, yyline, yytext(), originId);
          }
        case 547: break;
        case 41: 
          { return new PL1Token(ETokenType.FLOATING_POINT_LITERAL, yychar, yyline, yytext(), originId);
          }
        case 548: break;
        case 175: 
          { return new PL1Token(ETokenType.ALLOCATE	, yychar, yyline, yytext(), originId);
          }
        case 549: break;
        case 210: 
          { return new PL1Token(ETokenType.BUFSP	, yychar, yyline, yytext(), originId);
          }
        case 550: break;
        case 24: 
          { return new PL1Token(ETokenType.LPAREN, yychar, yyline, yytext(), originId);
          }
        case 551: break;
        case 52: 
          { return new PL1Token(ETokenType.DB	, yychar, yyline, yytext(), originId);
          }
        case 552: break;
        case 160: 
          { return new PL1Token(ETokenType.REAL	, yychar, yyline, yytext(), originId);
          }
        case 553: break;
        case 61: 
          { return new PL1Token(ETokenType.FS	, yychar, yyline, yytext(), originId);
          }
        case 554: break;
        case 286: 
          { return new PL1Token(ETokenType.NOWRITE	, yychar, yyline, yytext(), originId);
          }
        case 555: break;
        case 79: 
          { return new PL1Token(ETokenType.CONTROLLED	, yychar, yyline, yytext(), originId);
          }
        case 556: break;
        case 276: 
          { return new PL1Token(ETokenType.ITERATE	, yychar, yyline, yytext(), originId);
          }
        case 557: break;
        case 282: 
          { return new PL1Token(ETokenType.NONASSIGNABLE	, yychar, yyline, yytext(), originId);
          }
        case 558: break;
        case 249: 
          { return new PL1Token(ETokenType.STREAM	, yychar, yyline, yytext(), originId);
          }
        case 559: break;
        case 141: 
          { return new PL1Token(ETokenType.LINE	, yychar, yyline, yytext(), originId);
          }
        case 560: break;
        case 80: 
          { return new PL1Token(ETokenType.COLUMN	, yychar, yyline, yytext(), originId);
          }
        case 561: break;
        case 60: 
          { return new PL1Token(ETokenType.B4	, yychar, yyline, yytext(), originId);
          }
        case 562: break;
        case 222: 
          { return new PL1Token(ETokenType.CTL360	, yychar, yyline, yytext(), originId);
          }
        case 563: break;
        case 87: 
          { return new PL1Token(ETokenType.DIMENSION	, yychar, yyline, yytext(), originId);
          }
        case 564: break;
        case 227: 
          { return new PL1Token(ETokenType.PREPROCESSOR_INSCAN, yychar, yyline, yytext(), originId);
          }
        case 565: break;
        case 49: 
          { return new PL1Token(ETokenType.VS	, yychar, yyline, yytext(), originId);
          }
        case 566: break;
        case 221: 
          { return new PL1Token(ETokenType.CTLASA	, yychar, yyline, yytext(), originId);
          }
        case 567: break;
        case 252: 
          { return new PL1Token(ETokenType.SIGNAL	, yychar, yyline, yytext(), originId);
          }
        case 568: break;
        case 239: 
          { return new PL1Token(ETokenType.NOSIZE	, yychar, yyline, yytext(), originId);
          }
        case 569: break;
        case 18: 
          { return new PL1Token(ETokenType.R	, yychar, yyline, yytext(), originId);
          }
        case 570: break;
        case 226: 
          { return new PL1Token(ETokenType.INLINE	, yychar, yyline, yytext(), originId);
          }
        case 571: break;
        case 230: 
          { return new PL1Token(ETokenType.DELETE	, yychar, yyline, yytext(), originId);
          }
        case 572: break;
        case 56: 
          { return new PL1Token(ETokenType.BX	, yychar, yyline, yytext(), originId);
          }
        case 573: break;
        case 162: 
          { return new PL1Token(ETokenType.MAIN	, yychar, yyline, yytext(), originId);
          }
        case 574: break;
        case 280: 
          { return new PL1Token(ETokenType.NOCHECK	, yychar, yyline, yytext(), originId);
          }
        case 575: break;
        case 357: 
          { return new PL1Token(ETokenType.LITTLEENDIAN	, yychar, yyline, yytext(), originId);
          }
        case 576: break;
        case 191: 
          { return new PL1Token(ETokenType.NOOVERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 577: break;
        case 198: 
          { return new PL1Token(ETokenType.SUBSCRIPTRANGE	, yychar, yyline, yytext(), originId);
          }
        case 578: break;
        case 272: 
          { return new PL1Token(ETokenType.EXPORTS	, yychar, yyline, yytext(), originId);
          }
        case 579: break;
        case 275: 
          { return new PL1Token(ETokenType.ALIGNED	, yychar, yyline, yytext(), originId);
          }
        case 580: break;
        case 300: 
          { return new PL1Token(ETokenType.RETURNS	, yychar, yyline, yytext(), originId);
          }
        case 581: break;
        case 43: 
          { return new PL1Token(ETokenType.LOCATOR_POINTER, yychar, yyline, yytext(), originId);
          }
        case 582: break;
        case 65: 
          { return new PL1Token(ETokenType.WX	, yychar, yyline, yytext(), originId);
          }
        case 583: break;
        case 58: 
          { return new PL1Token(ETokenType.B2	, yychar, yyline, yytext(), originId);
          }
        case 584: break;
        case 146: 
          { return new PL1Token(ETokenType.UNDEFINEDFILE	, yychar, yyline, yytext(), originId);
          }
        case 585: break;
        case 26: 
          { return new PL1Token(ETokenType.COMMA, yychar, yyline, yytext(), originId);
          }
        case 586: break;
        case 233: 
          { return new PL1Token(ETokenType.NOCONVERSION	, yychar, yyline, yytext(), originId);
          }
        case 587: break;
        case 241: 
          { return new PL1Token(ETokenType.NOFIXEDOVERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 588: break;
        case 215: 
          { return new PL1Token(ETokenType.KEYED	, yychar, yyline, yytext(), originId);
          }
        case 589: break;
        case 104: 
          { return new PL1Token(ETokenType.BINARY	, yychar, yyline, yytext(), originId);
          }
        case 590: break;
        case 40: 
          { return new PL1Token(ETokenType.MULTEQ, yychar, yyline, yytext(), originId);
          }
        case 591: break;
        case 16: 
          { return new PL1Token(ETokenType.U	, yychar, yyline, yytext(), originId);
          }
        case 592: break;
        case 148: 
          { return new PL1Token(ETokenType.STOP	, yychar, yyline, yytext(), originId);
          }
        case 593: break;
        case 234: 
          { return new PL1Token(ETokenType.NOINIT	, yychar, yyline, yytext(), originId);
          }
        case 594: break;
        case 302: 
          { return new PL1Token(ETokenType.REORDER	, yychar, yyline, yytext(), originId);
          }
        case 595: break;
        case 105: 
          { return new PL1Token(ETokenType.BUFFERED	, yychar, yyline, yytext(), originId);
          }
        case 596: break;
        case 76: 
          { return new PL1Token(ETokenType.END	, yychar, yyline, yytext(), originId);
          }
        case 597: break;
        case 218: 
          { return new PL1Token(ETokenType.WRITE	, yychar, yyline, yytext(), originId);
          }
        case 598: break;
        case 228: 
          { return new PL1Token(ETokenType.IGNORE	, yychar, yyline, yytext(), originId);
          }
        case 599: break;
        case 144: 
          { return new PL1Token(ETokenType.LOOP	, yychar, yyline, yytext(), originId);
          }
        case 600: break;
        case 296: 
          { return new PL1Token(ETokenType.PACKAGE	, yychar, yyline, yytext(), originId);
          }
        case 601: break;
        case 353: 
          { return new PL1Token(ETokenType.NOINVALIDOP	, yychar, yyline, yytext(), originId);
          }
        case 602: break;
        case 116: 
          { return new PL1Token(ETokenType.ATTENTION	, yychar, yyline, yytext(), originId);
          }
        case 603: break;
        case 19: 
          { return new PL1Token(ETokenType.X	, yychar, yyline, yytext(), originId);
          }
        case 604: break;
        case 130: 
          { return new PL1Token(ETokenType.TYPE	, yychar, yyline, yytext(), originId);
          }
        case 605: break;
        case 229: 
          { return new PL1Token(ETokenType.DETACH	, yychar, yyline, yytext(), originId);
          }
        case 606: break;
        case 85: 
          { return new PL1Token(ETokenType.DEFINED	, yychar, yyline, yytext(), originId);
          }
        case 607: break;
        case 88: 
          { return new PL1Token(ETokenType.DEFAULT	, yychar, yyline, yytext(), originId);
          }
        case 608: break;
        case 83: 
          { return new PL1Token(ETokenType.VBS	, yychar, yyline, yytext(), originId);
          }
        case 609: break;
        case 77: 
          { return new PL1Token(ETokenType.EXTERNAL	, yychar, yyline, yytext(), originId);
          }
        case 610: break;
        case 219: 
          { return new PL1Token(ETokenType.WHILE	, yychar, yyline, yytext(), originId);
          }
        case 611: break;
        case 260: 
          { return new PL1Token(ETokenType.REVERT	, yychar, yyline, yytext(), originId);
          }
        case 612: break;
        case 294: 
          { return new PL1Token(ETokenType.ORDINAL	, yychar, yyline, yytext(), originId);
          }
        case 613: break;
        case 94: 
          { return new PL1Token(ETokenType.SUB	, yychar, yyline, yytext(), originId);
          }
        case 614: break;
        case 232: 
          { return new PL1Token(ETokenType.DIRECT	, yychar, yyline, yytext(), originId);
          }
        case 615: break;
        case 1: 
          { return new PL1Token(ETokenType.ILLEGAL_CHARACTER, yychar, yyline, yytext(), originId);
          }
        case 616: break;
        case 341: 
          { return new PL1Token(ETokenType.REENTRANT	, yychar, yyline, yytext(), originId);
          }
        case 617: break;
        case 181: 
          { return new PL1Token(ETokenType.CHECK	, yychar, yyline, yytext(), originId);
          }
        case 618: break;
        case 90: 
          { return new PL1Token(ETokenType.UNSIGNED	, yychar, yyline, yytext(), originId);
          }
        case 619: break;
        case 149: 
          { return new PL1Token(ETokenType.STRINGRANGE	, yychar, yyline, yytext(), originId);
          }
        case 620: break;
        case 317: 
          { return new PL1Token(ETokenType.WINMAIN	, yychar, yyline, yytext(), originId);
          }
        case 621: break;
        case 326: 
          { return new PL1Token(ETokenType.OPTIONAL	, yychar, yyline, yytext(), originId);
          }
        case 622: break;
        case 285: 
          { return new PL1Token(ETokenType.PREPROCESSOR_NOPRINT, yychar, yyline, yytext(), originId);
          }
        case 623: break;
        case 92: 
          { return new PL1Token(ETokenType.SET	, yychar, yyline, yytext(), originId);
          }
        case 624: break;
        case 132: 
          { return new PL1Token(ETokenType.INTO	, yychar, yyline, yytext(), originId);
          }
        case 625: break;
        case 290: 
          { return new PL1Token(ETokenType.STORAGE	, yychar, yyline, yytext(), originId);
          }
        case 626: break;
        case 207: 
          { return new PL1Token(ETokenType.BASED	, yychar, yyline, yytext(), originId);
          }
        case 627: break;
        case 192: 
          { return new PL1Token(ETokenType.LEAVE	, yychar, yyline, yytext(), originId);
          }
        case 628: break;
        case 350: 
          { return new PL1Token(ETokenType.CONSECUTIVE	, yychar, yyline, yytext(), originId);
          }
        case 629: break;
        case 266: 
          { return new PL1Token(ETokenType.FINISH	, yychar, yyline, yytext(), originId);
          }
        case 630: break;
        case 243: 
          { return new PL1Token(ETokenType.LOCATE	, yychar, yyline, yytext(), originId);
          }
        case 631: break;
        case 202: 
          { return new PL1Token(ETokenType.REUSE	, yychar, yyline, yytext(), originId);
          }
        case 632: break;
        case 348: 
          { return new PL1Token(ETokenType.PREPROCESSOR_DEACTIVATE 	, yychar, yyline, yytext(), originId);
          }
        case 633: break;
        case 73: 
          { return new PL1Token(ETokenType.LTEQ, yychar, yyline, yytext(), originId);
          }
        case 634: break;
        case 152: 
          { return new PL1Token(ETokenType.SNAP	, yychar, yyline, yytext(), originId);
          }
        case 635: break;
        case 140: 
          { return new PL1Token(ETokenType.NONE	, yychar, yyline, yytext(), originId);
          }
        case 636: break;
        case 97: 
          { return new PL1Token(ETokenType.POINTER	, yychar, yyline, yytext(), originId);
          }
        case 637: break;
        case 139: 
          { return new PL1Token(ETokenType.PREPROCESSOR_NOTE, yychar, yyline, yytext(), originId);
          }
        case 638: break;
        case 8: 
          { return new PL1Token(ETokenType.DOT, yychar, yyline, yytext(), originId);
          }
        case 639: break;
        case 89: 
          { return new PL1Token(ETokenType.NCP	, yychar, yyline, yytext(), originId);
          }
        case 640: break;
        case 356: 
          { return new PL1Token(ETokenType.NODESCRIPTOR	, yychar, yyline, yytext(), originId);
          }
        case 641: break;
        case 199: 
          { return new PL1Token(ETokenType.OTHERWISE	, yychar, yyline, yytext(), originId);
          }
        case 642: break;
        case 309: 
          { return new PL1Token(ETokenType.BUFFERS	, yychar, yyline, yytext(), originId);
          }
        case 643: break;
        case 283: 
          { return new PL1Token(ETokenType.NONCONNECTED	, yychar, yyline, yytext(), originId);
          }
        case 644: break;
        case 117: 
          { return new PL1Token(ETokenType.AUTOMATIC	, yychar, yyline, yytext(), originId);
          }
        case 645: break;
        case 179: 
          { return new PL1Token(ETokenType.CONSTANT	, yychar, yyline, yytext(), originId);
          }
        case 646: break;
        case 67: 
          { return new PL1Token(ETokenType.LOCATOR_HANDLE, yychar, yyline, yytext(), originId);
          }
        case 647: break;
        case 107: 
          { return new PL1Token(ETokenType.GET	, yychar, yyline, yytext(), originId);
          }
        case 648: break;
        case 360: 
          { return new PL1Token(ETokenType.NO_QUICK_BLOCKS	, yychar, yyline, yytext(), originId);
          }
        case 649: break;
        case 271: 
          { return new PL1Token(ETokenType.ENDFILE	, yychar, yyline, yytext(), originId);
          }
        case 650: break;
        case 142: 
          { return new PL1Token(ETokenType.LIST	, yychar, yyline, yytext(), originId);
          }
        case 651: break;
        case 106: 
          { return new PL1Token(ETokenType.FBS	, yychar, yyline, yytext(), originId);
          }
        case 652: break;
        case 128: 
          { return new PL1Token(ETokenType.TASK	, yychar, yyline, yytext(), originId);
          }
        case 653: break;
        case 236: 
          { return new PL1Token(ETokenType.NOLOCK	, yychar, yyline, yytext(), originId);
          }
        case 654: break;
        case 178: 
          { return new PL1Token(ETokenType.CLOSE	, yychar, yyline, yytext(), originId);
          }
        case 655: break;
        case 258: 
          { return new PL1Token(ETokenType.RECORD	, yychar, yyline, yytext(), originId);
          }
        case 656: break;
        case 312: 
          { return new PL1Token(ETokenType.FOREVER	, yychar, yyline, yytext(), originId);
          }
        case 657: break;
        case 235: 
          { return new PL1Token(ETokenType.NONVARYING	, yychar, yyline, yytext(), originId);
          }
        case 658: break;
        case 44: 
          { return new PL1Token(ETokenType.STRING_LITERAL, yychar, yyline, yytext(), originId);
          }
        case 659: break;
        case 188: 
          { return new PL1Token(ETokenType.VALUE	, yychar, yyline, yytext(), originId);
          }
        case 660: break;
        case 351: 
          { return new PL1Token(ETokenType.INTERACTIVE	, yychar, yyline, yytext(), originId);
          }
        case 661: break;
        case 172: 
          { return new PL1Token(ETokenType.ENTRY	, yychar, yyline, yytext(), originId);
          }
        case 662: break;
        case 311: 
          { return new PL1Token(ETokenType.BYVALUE	, yychar, yyline, yytext(), originId);
          }
        case 663: break;
        case 213: 
          { return new PL1Token(ETokenType.FLUSH	, yychar, yyline, yytext(), originId);
          }
        case 664: break;
        case 163: 
          { return new PL1Token(ETokenType.FILE	, yychar, yyline, yytext(), originId);
          }
        case 665: break;
        case 184: 
          { return new PL1Token(ETokenType.TOTAL	, yychar, yyline, yytext(), originId);
          }
        case 666: break;
        case 82: 
          { return new PL1Token(ETokenType.VARYING	, yychar, yyline, yytext(), originId);
          }
        case 667: break;
        case 30: 
          { return new PL1Token(ETokenType.EQ, yychar, yyline, yytext(), originId);
          }
        case 668: break;
        case 147: 
          { return new PL1Token(ETokenType.SEQUENTIAL	, yychar, yyline, yytext(), originId);
          }
        case 669: break;
        case 171: 
          { return new PL1Token(ETokenType.EVENT	, yychar, yyline, yytext(), originId);
          }
        case 670: break;
        case 224: 
          { return new PL1Token(ETokenType.TRKOFL	, yychar, yyline, yytext(), originId);
          }
        case 671: break;
        case 324: 
          { return new PL1Token(ETokenType.NOINLINE	, yychar, yyline, yytext(), originId);
          }
        case 672: break;
        case 51: 
          { return new PL1Token(ETokenType.DO	, yychar, yyline, yytext(), originId);
          }
        case 673: break;
        case 93: 
          { return new PL1Token(ETokenType.SIS	, yychar, yyline, yytext(), originId);
          }
        case 674: break;
        case 131: 
          { return new PL1Token(ETokenType.IEEE	, yychar, yyline, yytext(), originId);
          }
        case 675: break;
        case 3: 
          { yyline -= 1;
          }
        case 676: break;
        case 185: 
          { return new PL1Token(ETokenType.INTER	, yychar, yyline, yytext(), originId);
          }
        case 677: break;
        case 38: 
          { return new PL1Token(ETokenType.DIVEQ, yychar, yyline, yytext(), originId);
          }
        case 678: break;
        case 314: 
          { return new PL1Token(ETokenType.GENERIC	, yychar, yyline, yytext(), originId);
          }
        case 679: break;
        case 315: 
          { return new PL1Token(ETokenType.GRAPHIC	, yychar, yyline, yytext(), originId);
          }
        case 680: break;
        case 200: 
          { return new PL1Token(ETokenType.ORDER	, yychar, yyline, yytext(), originId);
          }
        case 681: break;
        case 150: 
          { return new PL1Token(ETokenType.STRINGSIZE	, yychar, yyline, yytext(), originId);
          }
        case 682: break;
        case 245: 
          { return new PL1Token(ETokenType.UPTHRU, yychar, yyline, yytext(), originId);
          }
        case 683: break;
        case 334: 
          { return new PL1Token(ETokenType.PREPROCESSOR_XINCLUDE, yychar, yyline, yytext(), originId);
          }
        case 684: break;
        case 273: 
          { return new PL1Token(ETokenType.ADDBUFF	, yychar, yyline, yytext(), originId);
          }
        case 685: break;
        case 6: 
          { return new PL1Token(ETokenType.INTEGER_LITERAL, yychar,  yyline, yytext(), originId);
          }
        case 686: break;
        case 31: 
          { return new PL1Token(ETokenType.AND, yychar, yyline, yytext(), originId);
          }
        case 687: break;
        case 250: 
          { return new PL1Token(ETokenType.STRING	, yychar, yyline, yytext(), originId);
          }
        case 688: break;
        case 45: 
          { return new PL1Token(ETokenType.TO	, yychar, yyline, yytext(), originId);
          }
        case 689: break;
        case 344: 
          { return new PL1Token(ETokenType.BIGENDIAN	, yychar, yyline, yytext(), originId);
          }
        case 690: break;
        case 313: 
          { return new PL1Token(ETokenType.FORTRAN	, yychar, yyline, yytext(), originId);
          }
        case 691: break;
        case 277: 
          { return new PL1Token(ETokenType.PREPROCESSOR_INCLUDE, yychar, yyline, yytext(), originId);
          }
        case 692: break;
        case 98: 
          { return new PL1Token(ETokenType.PICTURE	, yychar, yyline, yytext(), originId);
          }
        case 693: break;
        case 291: 
          { return new PL1Token(ETokenType.SUPPORT	, yychar, yyline, yytext(), originId);
          }
        case 694: break;
        case 242: 
          { return new PL1Token(ETokenType.NOZERODIVIDE	, yychar, yyline, yytext(), originId);
          }
        case 695: break;
        case 359: 
          { return new PL1Token(ETokenType.PACKED_DECIMAL	, yychar, yyline, yytext(), originId);
          }
        case 696: break;
        case 237: 
          { return new PL1Token(ETokenType.NOSTRINGRANGE	, yychar, yyline, yytext(), originId);
          }
        case 697: break;
        case 182: 
          { return new PL1Token(ETokenType.CHARGRAPHIC	, yychar, yyline, yytext(), originId);
          }
        case 698: break;
        case 310: 
          { return new PL1Token(ETokenType.BUFFOFF	, yychar, yyline, yytext(), originId);
          }
        case 699: break;
        case 129: 
          { return new PL1Token(ETokenType.THEN	, yychar, yyline, yytext(), originId);
          }
        case 700: break;
        case 134: 
          { return new PL1Token(ETokenType.VARYINGZ	, yychar, yyline, yytext(), originId);
          }
        case 701: break;
        case 4: 
          { return new PL1Token(ETokenType.DIV, yychar, yyline, yytext(), originId);
          }
        case 702: break;
        case 297: 
          { return new PL1Token(ETokenType.PREPROCESSOR_PROCESS, yychar, yyline, yytext(), originId);
          }
        case 703: break;
        case 345: 
          { return new PL1Token(ETokenType.FETCHABLE	, yychar, yyline, yytext(), originId);
          }
        case 704: break;
        case 331: 
          { return new PL1Token(ETokenType.RESERVES	, yychar, yyline, yytext(), originId);
          }
        case 705: break;
        case 126: 
          { return new PL1Token(ETokenType.COMPLEX	, yychar, yyline, yytext(), originId);
          }
        case 706: break;
        case 328: 
          { return new PL1Token(ETokenType.PAGESIZE	, yychar, yyline, yytext(), originId);
          }
        case 707: break;
        case 125: 
          { return new PL1Token(ETokenType.COPY	, yychar, yyline, yytext(), originId);
          }
        case 708: break;
        case 12: 
          { return new PL1Token(ETokenType.C	, yychar, yyline, yytext(), originId);
          }
        case 709: break;
        case 62: 
          { return new PL1Token(ETokenType.FB	, yychar, yyline, yytext(), originId);
          }
        case 710: break;
        case 212: 
          { return new PL1Token(ETokenType.FIXED	, yychar, yyline, yytext(), originId);
          }
        case 711: break;
        case 153: 
          { return new PL1Token(ETokenType.SKIP	, yychar, yyline, yytext(), originId);
          }
        case 712: break;
        case 174: 
          { return new PL1Token(ETokenType.ALIAS	, yychar, yyline, yytext(), originId);
          }
        case 713: break;
        case 263: 
          { return new PL1Token(ETokenType.REREAD	, yychar, yyline, yytext(), originId);
          }
        case 714: break;
        case 319: 
          { return new PL1Token(ETokenType.ABNORMAL, yychar, yyline, yytext(), originId);
          }
        case 715: break;
        case 5: 
          { return new PL1Token(ETokenType.MULT, yychar, yyline, yytext(), originId);
          }
        case 716: break;
        case 113: 
          { return new PL1Token(ETokenType.EXCLUSIVE	, yychar, yyline, yytext(), originId);
          }
        case 717: break;
        case 157: 
          { return new PL1Token(ETokenType.PRECISION	, yychar, yyline, yytext(), originId);
          }
        case 718: break;
        case 325: 
          { return new PL1Token(ETokenType.LINESIZE	, yychar, yyline, yytext(), originId);
          }
        case 719: break;
        case 158: 
          { return new PL1Token(ETokenType.PROCEDURE	, yychar, yyline, yytext(), originId);
          }
        case 720: break;
        case 322: 
          { return new PL1Token(ETokenType.VARIABLE	, yychar, yyline, yytext(), originId);
          }
        case 721: break;
        case 95: 
          { return new PL1Token(ETokenType.OVERFLOW	, yychar, yyline, yytext(), originId);
          }
        case 722: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return new PL1Token(ETokenType.EOF, yychar, yyline, yytext(), originId);
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
