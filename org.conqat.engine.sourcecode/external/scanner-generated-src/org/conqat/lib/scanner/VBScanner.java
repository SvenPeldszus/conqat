/* The following code was generated by JFlex 1.4.2 on {{TIMESTAMP}} */

/* Based on the Microsoft Visual Basic .NET Language Specification 7.1 
   http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vbls7/html/vbSpecStart.asp
 */

/* We assume that VB .NET is a superset of all other VB dialects. */

/* TODO: Handle the '#', the '!', the '{', and the ';' in e.g.:
     Open sFileName For Input As #1
     Print #1, frmMain.txtMain;
     res = InStr(1, rs!TABLE_NAME, "MSys", vbTextCompare)
     Shortcut        =   {DEL} */

package org.conqat.lib.scanner;



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.2
 * on {{TIMESTAMP}} from the specification file
 * <tt>/home/freakout/cqse/repositories/conqat/trunk/lib/org.conqat.lib.scanner/grammars/vb.flex</tt>
 */
class VBScanner implements ILenientScanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\5\1\3\1\1\1\6\1\2\22\0\1\5\1\21\1\35"+
    "\1\22\1\23\1\17\1\20\1\7\1\62\1\63\1\67\1\34\1\66"+
    "\1\41\1\33\1\40\10\31\2\25\1\42\1\75\1\72\1\73\1\74"+
    "\1\0\1\17\1\43\1\27\1\36\1\32\1\11\1\53\1\45\1\26"+
    "\1\46\1\60\1\61\1\52\1\12\1\47\1\30\1\44\1\15\1\10"+
    "\1\24\1\50\1\54\1\57\1\55\1\56\1\51\1\15\1\13\1\70"+
    "\1\14\1\71\1\4\1\0\1\43\1\27\1\36\1\32\1\11\1\53"+
    "\1\45\1\26\1\46\1\60\1\61\1\52\1\12\1\47\1\30\1\44"+
    "\1\15\1\10\1\24\1\50\1\54\1\57\1\55\1\56\1\51\1\15"+
    "\1\64\1\0\1\65\7\0\1\1\44\0\1\15\12\0\1\15\4\0"+
    "\1\15\5\0\27\15\1\0\37\15\1\0\u01ca\15\4\0\14\15\16\0"+
    "\5\15\7\0\1\15\1\0\1\15\201\0\5\15\1\0\2\15\2\0"+
    "\4\15\10\0\1\15\1\0\3\15\1\0\1\15\1\0\24\15\1\0"+
    "\123\15\1\0\213\15\10\0\236\15\11\0\46\15\2\0\1\15\7\0"+
    "\47\15\110\0\33\15\5\0\3\15\55\0\53\15\25\0\12\16\4\0"+
    "\2\15\1\0\143\15\1\0\1\15\17\0\2\15\7\0\2\15\12\16"+
    "\3\15\2\0\1\15\20\0\1\15\1\0\36\15\35\0\131\15\13\0"+
    "\1\15\16\0\12\16\41\15\11\0\2\15\4\0\1\15\5\0\26\15"+
    "\4\0\1\15\11\0\1\15\3\0\1\15\27\0\31\15\253\0\66\15"+
    "\3\0\1\15\22\0\1\15\7\0\12\15\4\0\12\16\1\0\7\15"+
    "\1\0\7\15\5\0\10\15\2\0\2\15\2\0\26\15\1\0\7\15"+
    "\1\0\1\15\3\0\4\15\3\0\1\15\20\0\1\15\15\0\2\15"+
    "\1\0\3\15\4\0\12\16\2\15\23\0\6\15\4\0\2\15\2\0"+
    "\26\15\1\0\7\15\1\0\2\15\1\0\2\15\1\0\2\15\37\0"+
    "\4\15\1\0\1\15\7\0\12\16\2\0\3\15\20\0\11\15\1\0"+
    "\3\15\1\0\26\15\1\0\7\15\1\0\2\15\1\0\5\15\3\0"+
    "\1\15\22\0\1\15\17\0\2\15\4\0\12\16\25\0\10\15\2\0"+
    "\2\15\2\0\26\15\1\0\7\15\1\0\2\15\1\0\5\15\3\0"+
    "\1\15\36\0\2\15\1\0\3\15\4\0\12\16\1\0\1\15\21\0"+
    "\1\15\1\0\6\15\3\0\3\15\1\0\4\15\3\0\2\15\1\0"+
    "\1\15\1\0\2\15\3\0\2\15\3\0\3\15\3\0\14\15\26\0"+
    "\1\15\25\0\12\16\25\0\10\15\1\0\3\15\1\0\27\15\1\0"+
    "\12\15\1\0\5\15\3\0\1\15\32\0\2\15\6\0\2\15\4\0"+
    "\12\16\25\0\10\15\1\0\3\15\1\0\27\15\1\0\12\15\1\0"+
    "\5\15\3\0\1\15\40\0\1\15\1\0\2\15\4\0\12\16\1\0"+
    "\2\15\22\0\10\15\1\0\3\15\1\0\51\15\2\0\1\15\20\0"+
    "\1\15\21\0\2\15\4\0\12\16\12\0\6\15\5\0\22\15\3\0"+
    "\30\15\1\0\11\15\1\0\1\15\2\0\7\15\72\0\60\15\1\0"+
    "\2\15\14\0\7\15\11\0\12\16\47\0\2\15\1\0\1\15\2\0"+
    "\2\15\1\0\1\15\2\0\1\15\6\0\4\15\1\0\7\15\1\0"+
    "\3\15\1\0\1\15\1\0\1\15\2\0\2\15\1\0\4\15\1\0"+
    "\2\15\11\0\1\15\2\0\5\15\1\0\1\15\11\0\12\16\2\0"+
    "\2\15\42\0\1\15\37\0\12\16\26\0\10\15\1\0\44\15\33\0"+
    "\5\15\163\0\53\15\24\0\1\15\12\16\6\0\6\15\4\0\4\15"+
    "\3\0\1\15\3\0\2\15\7\0\3\15\4\0\15\15\14\0\1\15"+
    "\1\0\12\16\6\0\46\15\12\0\53\15\1\0\1\15\3\0\u0149\15"+
    "\1\0\4\15\2\0\7\15\1\0\1\15\1\0\4\15\2\0\51\15"+
    "\1\0\4\15\2\0\41\15\1\0\4\15\2\0\7\15\1\0\1\15"+
    "\1\0\4\15\2\0\17\15\1\0\71\15\1\0\4\15\2\0\103\15"+
    "\45\0\20\15\20\0\125\15\14\0\u026c\15\2\0\21\15\1\0\32\15"+
    "\5\0\113\15\25\0\15\15\1\0\4\15\16\0\22\15\16\0\22\15"+
    "\16\0\15\15\1\0\3\15\17\0\64\15\43\0\1\15\4\0\1\15"+
    "\3\0\12\16\46\0\12\16\6\0\130\15\10\0\51\15\1\0\1\15"+
    "\5\0\106\15\12\0\35\15\51\0\12\16\36\15\2\0\5\15\13\0"+
    "\54\15\25\0\7\15\10\0\12\16\46\0\27\15\11\0\65\15\53\0"+
    "\12\16\6\0\12\16\15\0\1\15\135\0\57\15\21\0\7\15\4\0"+
    "\12\16\51\0\36\15\15\0\2\15\12\16\6\0\46\15\32\0\44\15"+
    "\34\0\12\16\3\0\3\15\12\16\44\15\153\0\4\15\1\0\4\15"+
    "\16\0\300\15\100\0\u0116\15\2\0\6\15\2\0\46\15\2\0\6\15"+
    "\2\0\10\15\1\0\1\15\1\0\1\15\1\0\1\15\1\0\37\15"+
    "\2\0\65\15\1\0\7\15\1\0\1\15\3\0\3\15\1\0\7\15"+
    "\3\0\4\15\2\0\6\15\4\0\15\15\5\0\3\15\1\0\7\15"+
    "\33\0\1\7\1\7\2\0\1\37\1\37\12\0\1\1\1\1\107\0"+
    "\1\15\15\0\1\15\20\0\15\15\145\0\1\15\4\0\1\15\2\0"+
    "\12\15\1\0\1\15\3\0\5\15\6\0\1\15\1\0\1\15\1\0"+
    "\1\15\1\0\4\15\1\0\13\15\2\0\4\15\5\0\5\15\4\0"+
    "\1\15\64\0\2\15\u0a7b\0\57\15\1\0\57\15\1\0\205\15\6\0"+
    "\4\15\21\0\46\15\12\0\66\15\11\0\1\15\20\0\27\15\11\0"+
    "\7\15\1\0\7\15\1\0\7\15\1\0\7\15\1\0\7\15\1\0"+
    "\7\15\1\0\7\15\1\0\7\15\120\0\1\15\u01d5\0\2\15\52\0"+
    "\5\15\5\0\2\15\4\0\126\15\6\0\3\15\1\0\132\15\1\0"+
    "\4\15\5\0\51\15\3\0\136\15\21\0\33\15\65\0\20\15\u0200\0"+
    "\u19b6\15\112\0\u51cc\15\64\0\u048d\15\103\0\56\15\2\0\u010d\15\3\0"+
    "\20\15\12\16\2\15\24\0\57\15\20\0\31\15\10\0\106\15\61\0"+
    "\11\15\2\0\147\15\2\0\4\15\1\0\2\15\16\0\12\15\120\0"+
    "\10\15\1\0\3\15\1\0\4\15\1\0\27\15\35\0\64\15\16\0"+
    "\62\15\34\0\12\16\30\0\6\15\3\0\1\15\4\0\12\16\34\15"+
    "\12\0\27\15\31\0\35\15\7\0\57\15\34\0\1\15\12\16\46\0"+
    "\51\15\27\0\3\15\1\0\10\15\4\0\12\16\6\0\27\15\3\0"+
    "\1\15\5\0\60\15\1\0\1\15\3\0\2\15\2\0\5\15\2\0"+
    "\1\15\1\0\1\15\30\0\3\15\43\0\6\15\2\0\6\15\2\0"+
    "\6\15\11\0\7\15\1\0\7\15\221\0\43\15\15\0\12\16\6\0"+
    "\u2ba4\15\14\0\27\15\4\0\61\15\u2104\0\u012e\15\2\0\76\15\2\0"+
    "\152\15\46\0\7\15\14\0\5\15\5\0\1\15\1\0\12\15\1\0"+
    "\15\15\1\0\5\15\1\0\1\15\1\0\2\15\1\0\2\15\1\0"+
    "\154\15\41\0\u016b\15\22\0\100\15\2\0\66\15\50\0\14\15\164\0"+
    "\5\15\1\0\207\15\23\0\12\16\7\0\32\15\6\0\32\15\13\0"+
    "\131\15\3\0\6\15\2\0\6\15\2\0\6\15\2\0\3\15\43\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\2\2\1\1\1\3\1\4\1\5\3\6"+
    "\1\7\1\10\1\6\1\11\1\12\1\13\1\14\1\6"+
    "\1\15\4\6\1\16\1\17\1\1\1\6\1\20\1\21"+
    "\1\22\14\6\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\3\1\15"+
    "\1\0\2\5\11\6\1\37\3\6\6\0\6\6\1\40"+
    "\1\0\1\15\1\0\4\6\1\41\2\6\1\42\2\6"+
    "\1\43\2\6\1\40\1\0\2\44\12\6\1\45\12\6"+
    "\1\46\1\47\1\50\5\6\1\51\20\6\2\0\3\3"+
    "\1\52\10\6\1\53\4\6\1\13\3\6\2\15\3\0"+
    "\1\54\11\6\1\55\1\40\1\0\20\6\1\56\1\0"+
    "\2\44\26\6\1\11\7\6\1\57\5\6\1\60\1\6"+
    "\1\12\1\6\1\61\4\6\1\62\2\6\1\63\2\6"+
    "\1\64\12\6\1\65\11\6\1\66\1\0\7\6\1\67"+
    "\1\70\1\71\5\6\3\0\7\6\1\72\1\73\6\6"+
    "\1\74\12\6\1\75\1\6\2\44\2\76\1\6\1\77"+
    "\1\100\1\101\2\6\1\102\1\6\1\103\1\104\2\6"+
    "\1\105\1\6\1\106\1\107\2\6\1\110\3\6\1\111"+
    "\2\6\1\112\10\6\1\113\4\6\1\114\4\6\1\115"+
    "\1\6\1\116\1\117\1\120\1\121\1\122\6\6\1\123"+
    "\1\124\1\6\1\125\3\6\1\126\3\6\1\127\1\130"+
    "\7\0\4\6\1\131\3\6\1\0\1\6\1\0\3\6"+
    "\1\132\5\6\2\0\1\133\2\0\1\6\1\134\10\6"+
    "\1\135\1\6\1\136\1\137\14\6\1\140\1\141\1\142"+
    "\1\143\1\144\1\145\1\146\1\147\4\6\1\150\7\6"+
    "\1\151\11\6\1\152\5\6\1\153\1\6\1\154\3\6"+
    "\1\155\1\6\1\156\1\6\4\0\1\131\3\0\2\6"+
    "\1\157\4\6\1\0\1\160\3\0\1\6\1\161\1\6"+
    "\1\162\1\163\3\6\3\0\1\164\1\165\1\6\1\166"+
    "\1\14\1\6\1\167\2\6\1\0\2\6\1\170\1\171"+
    "\1\172\6\6\1\173\1\6\1\174\11\6\1\175\12\6"+
    "\1\176\1\177\11\6\2\0\1\157\4\0\1\200\2\6"+
    "\1\201\1\6\1\202\1\160\1\0\1\161\1\0\1\203"+
    "\1\204\1\205\2\6\1\0\1\206\2\6\1\207\1\0"+
    "\1\6\1\210\3\6\1\211\1\212\1\6\1\213\4\6"+
    "\1\214\3\6\1\215\1\6\1\216\1\217\3\6\1\220"+
    "\1\221\3\6\1\222\1\6\1\223\2\6\1\224\1\6"+
    "\1\225\1\6\1\200\2\0\1\201\1\0\1\202\3\6"+
    "\1\203\1\204\2\6\1\0\1\6\1\226\1\0\1\6"+
    "\1\227\3\6\1\230\1\6\1\231\2\6\1\232\1\233"+
    "\3\6\1\234\4\6\1\235\4\6\3\0\1\236\4\6"+
    "\1\237\1\0\1\6\1\240\1\6\1\241\1\6\1\242"+
    "\1\6\1\243\2\6\1\244\2\6\1\245\1\246\2\6"+
    "\1\247\1\236\2\0\4\6\1\0\2\6\1\250\1\251"+
    "\1\252\1\253\2\6\1\254\1\6\2\0\1\255\1\256"+
    "\1\6\1\257\1\0\1\6\1\260\3\6\1\255\1\256"+
    "\1\261\1\0\3\6\1\262\1\0\1\263\2\6\1\263"+
    "\1\264\1\265";

  private static int [] zzUnpackAction() {
    int [] result = new int[779];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\76\0\174\0\174\0\272\0\370\0\u0136\0\174"+
    "\0\u0174\0\u01b2\0\u01f0\0\u022e\0\u026c\0\174\0\u02aa\0\u02e8"+
    "\0\174\0\u0326\0\174\0\u0364\0\u03a2\0\u03e0\0\u041e\0\u045c"+
    "\0\u049a\0\u04d8\0\174\0\u0516\0\u0554\0\174\0\174\0\174"+
    "\0\u0592\0\u05d0\0\u060e\0\u064c\0\u068a\0\u06c8\0\u0706\0\u0744"+
    "\0\u0782\0\u07c0\0\u07fe\0\u083c\0\174\0\174\0\174\0\174"+
    "\0\174\0\174\0\174\0\174\0\174\0\174\0\174\0\174"+
    "\0\u087a\0\u08b8\0\u08f6\0\174\0\u0934\0\u0972\0\174\0\u09b0"+
    "\0\u09ee\0\u0a2c\0\u0a6a\0\u0aa8\0\u0ae6\0\u0b24\0\u02aa\0\u0b62"+
    "\0\u0ba0\0\u0bde\0\u0c1c\0\u0c5a\0\u0c98\0\u0cd6\0\u0326\0\u0d14"+
    "\0\u0d52\0\u0d90\0\u0dce\0\u0e0c\0\u0e4a\0\u0e88\0\174\0\u0ec6"+
    "\0\174\0\u04d8\0\u0f04\0\u0f42\0\u0f80\0\u0fbe\0\u0ffc\0\u103a"+
    "\0\u1078\0\u02aa\0\u10b6\0\u10f4\0\u1132\0\u1170\0\u11ae\0\u11ec"+
    "\0\u122a\0\u1268\0\u122a\0\u12a6\0\u12e4\0\u1322\0\u1360\0\u139e"+
    "\0\u13dc\0\u141a\0\u1458\0\u1496\0\u14d4\0\u1512\0\u1550\0\u158e"+
    "\0\u15cc\0\u160a\0\u1648\0\u1686\0\u16c4\0\u1702\0\u1740\0\u177e"+
    "\0\u02aa\0\u17bc\0\u02aa\0\u17fa\0\u1838\0\u1876\0\u18b4\0\u18f2"+
    "\0\u02aa\0\u1930\0\u196e\0\u19ac\0\u19ea\0\u1a28\0\u1a66\0\u1aa4"+
    "\0\u1ae2\0\u1b20\0\u1b5e\0\u1b9c\0\u1bda\0\u1c18\0\u1c56\0\u1c94"+
    "\0\u1cd2\0\u1d10\0\u1d4e\0\u1d8c\0\174\0\u1dca\0\u1e08\0\u1e46"+
    "\0\u1e84\0\u1ec2\0\u1f00\0\u1f3e\0\u1f7c\0\u1fba\0\u1ff8\0\u2036"+
    "\0\u2074\0\u20b2\0\u20f0\0\u212e\0\u216c\0\u21aa\0\u21e8\0\u2226"+
    "\0\u2264\0\u22a2\0\u22e0\0\u231e\0\u235c\0\u02aa\0\u239a\0\u23d8"+
    "\0\u2416\0\u2454\0\u2492\0\u24d0\0\u250e\0\u254c\0\u258a\0\u02aa"+
    "\0\u25c8\0\u2606\0\u2644\0\u2682\0\u26c0\0\u26fe\0\u273c\0\u277a"+
    "\0\u27b8\0\u27f6\0\u2834\0\u2872\0\u28b0\0\u28ee\0\u292c\0\u296a"+
    "\0\u29a8\0\u29e6\0\u02aa\0\u2a24\0\u2a62\0\u2aa0\0\u2ade\0\u2b1c"+
    "\0\u2b5a\0\u2b98\0\u2bd6\0\u2c14\0\u2c52\0\u2c90\0\u2cce\0\u2d0c"+
    "\0\u2d4a\0\u2d88\0\u2dc6\0\u2e04\0\u2e42\0\u2e80\0\u2ebe\0\u2efc"+
    "\0\u2f3a\0\u2f78\0\u2fb6\0\u2ff4\0\u3032\0\u3070\0\u30ae\0\u30ec"+
    "\0\u312a\0\u3168\0\u31a6\0\u31e4\0\u3222\0\u3260\0\u329e\0\u32dc"+
    "\0\u331a\0\u3358\0\u02aa\0\u3396\0\u33d4\0\u3412\0\u02aa\0\u3450"+
    "\0\u348e\0\u34cc\0\u350a\0\u02aa\0\u3548\0\u3586\0\u02aa\0\u35c4"+
    "\0\u3602\0\u02aa\0\u3640\0\u367e\0\u36bc\0\u36fa\0\u3738\0\u3776"+
    "\0\u37b4\0\u37f2\0\u3830\0\u386e\0\u02aa\0\u38ac\0\u38ea\0\u3928"+
    "\0\u3966\0\u39a4\0\u39e2\0\u3a20\0\u3a5e\0\u3a9c\0\u02aa\0\u3ada"+
    "\0\u3b18\0\u3b56\0\u3b94\0\u3bd2\0\u3c10\0\u3c4e\0\u3c8c\0\u02aa"+
    "\0\u3cca\0\u3d08\0\u3d46\0\u3d84\0\u3dc2\0\u3e00\0\u3e3e\0\u3e7c"+
    "\0\u3eba\0\u3ef8\0\u3f36\0\u3f74\0\u3fb2\0\u3ff0\0\u402e\0\u406c"+
    "\0\u40aa\0\u02aa\0\u02aa\0\u40e8\0\u4126\0\u4164\0\u41a2\0\u41e0"+
    "\0\u421e\0\u02aa\0\u425c\0\u429a\0\u42d8\0\u4316\0\u4354\0\u4392"+
    "\0\u43d0\0\u440e\0\u444c\0\u448a\0\u02aa\0\u44c8\0\u4506\0\u2a24"+
    "\0\174\0\u2a24\0\u4544\0\u02aa\0\u02aa\0\u02aa\0\u4582\0\u45c0"+
    "\0\u02aa\0\u45fe\0\u02aa\0\u02aa\0\u463c\0\u467a\0\u02aa\0\u46b8"+
    "\0\u02aa\0\u02aa\0\u46f6\0\u4734\0\u02aa\0\u4772\0\u47b0\0\u47ee"+
    "\0\u02aa\0\u482c\0\u486a\0\u02aa\0\u48a8\0\u48e6\0\u4924\0\u4962"+
    "\0\u49a0\0\u49de\0\u4a1c\0\u4a5a\0\u02aa\0\u4a98\0\u4ad6\0\u4b14"+
    "\0\u4b52\0\u02aa\0\u4b90\0\u4bce\0\u4c0c\0\u4c4a\0\u02aa\0\u4c88"+
    "\0\u02aa\0\u4cc6\0\u02aa\0\u02aa\0\u02aa\0\u4d04\0\u4d42\0\u4d80"+
    "\0\u4dbe\0\u4dfc\0\u4e3a\0\u02aa\0\u02aa\0\u4e78\0\u4eb6\0\u4ef4"+
    "\0\u4f32\0\u4f70\0\u02aa\0\u4fae\0\u4fec\0\u502a\0\u02aa\0\u02aa"+
    "\0\u5068\0\u50a6\0\u50e4\0\u5122\0\u5160\0\u519e\0\u51dc\0\u521a"+
    "\0\u5258\0\u5296\0\u52d4\0\u02aa\0\u5312\0\u5350\0\u538e\0\u53cc"+
    "\0\u540a\0\u5448\0\u5486\0\u54c4\0\u5502\0\u02aa\0\u5540\0\u557e"+
    "\0\u55bc\0\u55fa\0\u5638\0\u5676\0\u56b4\0\174\0\u56f2\0\u5730"+
    "\0\u576e\0\u02aa\0\u57ac\0\u57ea\0\u5828\0\u5866\0\u58a4\0\u58e2"+
    "\0\u5920\0\u595e\0\u599c\0\u59da\0\u02aa\0\u02aa\0\u5a18\0\u5a56"+
    "\0\u5a94\0\u5ad2\0\u5b10\0\u5b4e\0\u5b8c\0\u5bca\0\u5c08\0\u5c46"+
    "\0\u5c84\0\u5cc2\0\u02aa\0\u02aa\0\u02aa\0\u02aa\0\u02aa\0\u02aa"+
    "\0\u02aa\0\u02aa\0\u5d00\0\u5d3e\0\u5d7c\0\u5dba\0\u02aa\0\u5df8"+
    "\0\u5e36\0\u5e74\0\u5eb2\0\u5ef0\0\u5f2e\0\u5f6c\0\u02aa\0\u5faa"+
    "\0\u5fe8\0\u6026\0\u6064\0\u60a2\0\u60e0\0\u611e\0\u615c\0\u619a"+
    "\0\u02aa\0\u61d8\0\u6216\0\u6254\0\u6292\0\u62d0\0\u02aa\0\u630e"+
    "\0\u02aa\0\u634c\0\u638a\0\u63c8\0\u02aa\0\u6406\0\u02aa\0\u6444"+
    "\0\u6482\0\u64c0\0\u64fe\0\u653c\0\174\0\u657a\0\u65b8\0\u65f6"+
    "\0\u6634\0\u6672\0\u02aa\0\u66b0\0\u66ee\0\u672c\0\u676a\0\u67a8"+
    "\0\u02aa\0\u67e6\0\u6824\0\u6862\0\u68a0\0\u02aa\0\u68de\0\u02aa"+
    "\0\u02aa\0\u691c\0\u695a\0\u6998\0\u69d6\0\u6a14\0\u6a52\0\u02aa"+
    "\0\u02aa\0\u6a90\0\u02aa\0\u02aa\0\u6ace\0\u02aa\0\u6b0c\0\u6b4a"+
    "\0\u6b88\0\u6bc6\0\u6c04\0\u02aa\0\u02aa\0\u6c42\0\u6c80\0\u6cbe"+
    "\0\u6cfc\0\u6d3a\0\u6d78\0\u6db6\0\u02aa\0\u6df4\0\u02aa\0\u6e32"+
    "\0\u6e70\0\u6eae\0\u6eec\0\u6f2a\0\u6f68\0\u6fa6\0\u6fe4\0\u7022"+
    "\0\u02aa\0\u7060\0\u709e\0\u70dc\0\u711a\0\u7158\0\u7196\0\u71d4"+
    "\0\u7212\0\u7250\0\u728e\0\u02aa\0\u02aa\0\u72cc\0\u730a\0\u7348"+
    "\0\u7386\0\u73c4\0\u7402\0\u7440\0\u747e\0\u74bc\0\u74fa\0\u7538"+
    "\0\174\0\u7576\0\u75b4\0\u75f2\0\u7630\0\u02aa\0\u766e\0\u76ac"+
    "\0\u02aa\0\u76ea\0\u02aa\0\174\0\u7728\0\174\0\u7766\0\u02aa"+
    "\0\u02aa\0\u02aa\0\u77a4\0\u77e2\0\u7820\0\u02aa\0\u785e\0\u789c"+
    "\0\u02aa\0\u78da\0\u7918\0\u02aa\0\u7956\0\u7994\0\u79d2\0\u02aa"+
    "\0\u02aa\0\u7a10\0\u02aa\0\u7a4e\0\u7a8c\0\u7aca\0\u7b08\0\u02aa"+
    "\0\u7b46\0\u7b84\0\u7bc2\0\u02aa\0\u7c00\0\u02aa\0\u02aa\0\u7c3e"+
    "\0\u7c7c\0\u7cba\0\u02aa\0\u02aa\0\u7cf8\0\u7d36\0\u7d74\0\u02aa"+
    "\0\u7db2\0\u02aa\0\u7df0\0\u7e2e\0\u02aa\0\u7e6c\0\u02aa\0\u7eaa"+
    "\0\174\0\u7ee8\0\u7f26\0\174\0\u7f64\0\174\0\u7fa2\0\u7fe0"+
    "\0\u801e\0\174\0\174\0\u805c\0\u809a\0\u80d8\0\u8116\0\u02aa"+
    "\0\u8154\0\u8192\0\u02aa\0\u81d0\0\u820e\0\u824c\0\u02aa\0\u828a"+
    "\0\u02aa\0\u82c8\0\u8306\0\u02aa\0\u02aa\0\u8344\0\u8382\0\u83c0"+
    "\0\u02aa\0\u83fe\0\u843c\0\u847a\0\u84b8\0\u02aa\0\u84f6\0\u8534"+
    "\0\u8572\0\u85b0\0\u85ee\0\u862c\0\u866a\0\u02aa\0\u86a8\0\u86e6"+
    "\0\u8724\0\u8762\0\u02aa\0\u87a0\0\u87de\0\u02aa\0\u881c\0\u02aa"+
    "\0\u885a\0\u02aa\0\u8898\0\u02aa\0\u88d6\0\u8914\0\u02aa\0\u8952"+
    "\0\u8990\0\u02aa\0\u02aa\0\u89ce\0\u8a0c\0\u02aa\0\174\0\u8a4a"+
    "\0\u8a88\0\u8ac6\0\u8b04\0\u8b42\0\u8b80\0\u8bbe\0\u8bfc\0\u8c3a"+
    "\0\u02aa\0\u02aa\0\u02aa\0\u02aa\0\u8c78\0\u8cb6\0\u02aa\0\u8cf4"+
    "\0\u8d32\0\u8d70\0\u02aa\0\u02aa\0\u8dae\0\u02aa\0\u8dec\0\u8e2a"+
    "\0\u02aa\0\u8e68\0\u8ea6\0\u8ee4\0\174\0\174\0\u02aa\0\u8f22"+
    "\0\u8f60\0\u8f9e\0\u8fdc\0\u02aa\0\u901a\0\u02aa\0\u9058\0\u9096"+
    "\0\174\0\u02aa\0\u02aa";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[779];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\4\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\2\3\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\25\1\31\1\32\1\33\1\34\1\35\1\34\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\17\1\47\1\50\1\51\1\52\1\53\1\54\2\17"+
    "\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64"+
    "\1\65\1\66\1\67\1\70\1\3\1\4\1\5\1\4"+
    "\1\6\1\71\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\2\3\1\20\1\21\1\22\1\23\1\24"+
    "\1\72\1\26\1\27\1\30\1\72\1\31\1\32\1\33"+
    "\1\34\1\35\1\34\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\17\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\2\17\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70"+
    "\101\0\1\4\76\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\0\7\17\3\0\1\17\4\0\17\17\20\0\1\73"+
    "\71\0\1\11\1\74\1\75\1\74\72\11\4\0\1\17"+
    "\3\0\1\17\1\76\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\100\16\17\20\0\1\17\3\0"+
    "\1\101\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\1\102\3\17\1\103\2\17\1\104\3\17\1\105"+
    "\1\106\2\17\20\0\1\17\3\0\1\17\1\107\1\17"+
    "\2\0\2\17\5\77\4\17\1\110\2\17\3\0\1\17"+
    "\4\0\6\17\1\111\2\17\1\112\5\17\20\0\1\113"+
    "\3\0\3\114\2\0\1\114\6\0\1\114\1\0\3\114"+
    "\1\0\1\114\3\0\1\114\4\0\17\114\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\42\0\1\115\1\0\1\116\52\0\1\117"+
    "\17\0\1\120\3\0\1\120\50\0\1\17\3\0\1\17"+
    "\1\121\1\17\2\0\2\17\5\77\2\17\1\122\4\17"+
    "\3\0\1\17\4\0\3\17\1\123\1\17\1\124\1\125"+
    "\2\17\1\126\5\17\24\0\1\127\1\130\12\0\1\131"+
    "\1\25\3\0\1\25\1\127\1\132\12\0\1\131\3\0"+
    "\1\131\1\127\26\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\133\16\17\20\0"+
    "\1\17\3\0\1\17\1\134\1\17\2\0\2\17\5\77"+
    "\4\17\1\135\2\17\3\0\1\17\4\0\6\17\1\136"+
    "\10\17\20\0\1\17\3\0\1\137\2\17\2\0\2\17"+
    "\5\77\3\17\1\140\3\17\3\0\1\17\4\0\1\17"+
    "\1\141\2\17\1\142\7\17\1\143\2\17\20\0\1\17"+
    "\3\0\1\17\1\144\1\17\2\0\2\17\5\77\4\17"+
    "\1\145\2\17\3\0\1\17\4\0\1\146\2\17\1\147"+
    "\13\17\41\0\1\150\3\0\1\150\44\0\35\151\1\152"+
    "\1\151\1\153\36\151\4\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\1\154\1\17\1\155\1\156\1\157\1\17"+
    "\1\160\3\0\1\161\4\0\1\162\2\17\1\163\1\17"+
    "\1\164\1\17\1\165\7\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\166\5\17\1\167\3\0\1\17"+
    "\4\0\4\17\1\170\2\17\1\171\1\17\1\172\5\17"+
    "\20\0\1\17\3\0\1\173\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\174\10\17\1\175\5\17"+
    "\20\0\1\17\3\0\1\17\1\176\1\17\2\0\2\17"+
    "\5\77\4\17\1\177\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\2\17\1\200\2\0\2\17\5\77"+
    "\1\201\6\17\3\0\1\17\4\0\4\17\1\202\3\17"+
    "\1\203\6\17\20\0\1\17\3\0\1\17\1\204\1\17"+
    "\2\0\2\17\5\77\4\17\1\205\2\17\3\0\1\17"+
    "\4\0\1\206\16\17\20\0\1\17\3\0\1\207\2\17"+
    "\2\0\2\17\5\77\2\17\1\210\1\17\1\211\2\17"+
    "\3\0\1\17\4\0\6\17\1\212\10\17\20\0\1\17"+
    "\3\0\1\17\1\213\1\17\2\0\2\17\5\77\4\17"+
    "\1\214\2\17\3\0\1\17\4\0\3\17\1\215\13\17"+
    "\20\0\1\17\3\0\1\216\2\17\2\0\2\17\5\77"+
    "\4\17\1\217\2\17\3\0\1\17\4\0\1\220\2\17"+
    "\1\221\5\17\1\222\5\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\4\17"+
    "\1\223\12\17\20\0\1\17\3\0\1\224\1\225\1\17"+
    "\2\0\2\17\5\77\2\17\1\226\4\17\3\0\1\17"+
    "\4\0\3\17\1\227\13\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\230\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\231\16\17\20\0"+
    "\1\73\1\232\17\0\1\233\3\0\1\233\51\0\1\234"+
    "\2\0\1\127\1\130\12\0\1\131\1\72\3\0\1\72"+
    "\1\127\1\132\12\0\1\131\3\0\1\131\1\127\23\0"+
    "\1\235\1\236\1\235\1\0\1\73\73\0\1\74\76\0"+
    "\1\17\3\0\2\17\1\237\2\0\2\17\5\77\1\240"+
    "\5\17\1\241\3\0\1\17\4\0\1\242\4\17\1\243"+
    "\11\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\3\17\1\244\13\17\20\0"+
    "\1\17\3\0\1\245\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\246\16\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\247\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\6\17\1\250\3\0\1\17\4\0\11\17\1\251\5\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\1\252"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\253\13\17\20\0\1\17\3\0\1\17\1\254"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\6\17\1\255\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\3\17\1\256\3\17"+
    "\3\0\1\257\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\260\6\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\114\3\0\3\114\2\0\2\114\5\0"+
    "\7\114\3\0\1\114\4\0\17\114\20\0\1\114\3\0"+
    "\3\114\1\0\1\77\2\114\5\0\7\114\3\0\1\114"+
    "\4\0\17\114\25\0\1\261\13\0\1\261\1\0\1\261"+
    "\1\0\2\261\3\0\1\261\4\0\1\261\7\0\1\261"+
    "\53\0\1\262\71\0\1\120\3\0\1\120\6\0\1\263"+
    "\1\264\1\265\37\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\266\1\17"+
    "\1\267\7\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\270\2\17\3\0\1\17\4\0\1\271"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\4\17\1\272\12\17\20\0"+
    "\1\17\3\0\1\273\1\274\1\17\2\0\2\17\5\77"+
    "\4\17\1\275\2\17\3\0\1\17\4\0\1\276\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\277\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\3\17\1\300\3\17"+
    "\3\0\1\17\4\0\17\17\41\0\1\301\3\0\1\301"+
    "\2\0\1\302\4\0\1\302\40\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\4\17"+
    "\1\303\12\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\2\17\1\304\14\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\4\17"+
    "\1\305\2\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\306\2\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\5\17\1\307\6\17\1\310\2\17\20\0"+
    "\1\17\3\0\1\17\1\311\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\15\17\1\312\1\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\313"+
    "\11\17\20\0\1\17\3\0\1\17\1\314\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\315\4\0\7\17\1\316\1\317\6\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\11\17\1\320\5\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\321\11\17\20\0\1\17\3\0\1\322\1\17\1\323"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\24\0\1\127\1\130\13\0\1\150\3\0\1\150\1\127"+
    "\20\0\1\127\22\0\35\324\1\325\1\324\1\326\36\324"+
    "\35\0\1\151\44\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\2\17\1\327\4\17\3\0\1\17\4\0\4\17"+
    "\1\330\1\331\11\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\1\332\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\4\17"+
    "\1\333\2\17\3\0\1\17\4\0\6\17\1\334\10\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\3\17"+
    "\1\335\3\17\3\0\1\17\4\0\4\17\1\336\12\17"+
    "\20\0\1\17\3\0\1\17\1\337\1\17\2\0\2\17"+
    "\5\77\3\17\1\340\3\17\3\0\1\17\4\0\1\341"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\2\17\1\342\4\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\1\343\6\17"+
    "\3\0\1\17\4\0\5\17\1\344\1\17\1\345\7\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\346\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\6\17\1\347\10\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\350"+
    "\3\17\1\351\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\1\352\6\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\6\17"+
    "\1\353\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\1\354\5\17\1\355\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\3\17\1\356"+
    "\13\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\5\17\1\357\11\17\20\0"+
    "\1\17\3\0\1\17\1\360\1\17\2\0\2\17\5\77"+
    "\4\17\1\361\2\17\3\0\1\17\4\0\3\17\1\362"+
    "\13\17\20\0\1\17\3\0\1\363\2\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\3\17\1\364\3\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\365\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\1\366\6\17\3\0\1\17\4\0\5\17\1\367"+
    "\11\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\17\1\370\15\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\2\17\1\371"+
    "\4\17\3\0\1\17\4\0\5\17\1\372\11\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\12\17\1\373\1\374\3\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\375\11\17\20\0\1\17\3\0\2\17"+
    "\1\376\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\6\17\1\377\2\17\1\u0100"+
    "\5\17\20\0\1\17\3\0\1\u0101\1\u0102\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\1\17\1\u0103\15\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u0104\11\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\4\17\1\u0105\2\17\3\0\1\17\4\0"+
    "\4\17\1\u0106\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\3\17\1\u0107\3\17\3\0\1\17\4\0"+
    "\16\17\1\u0108\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\3\17\1\u0109\13\17"+
    "\20\0\1\17\3\0\1\u010a\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\7\17\1\u010b\7\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\4\17\1\u010c"+
    "\12\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\4\17\1\u010d\12\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\3\17\1\u010e\1\17\1\u010f\11\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\3\17\1\u0110\13\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u0111\12\17\20\0\1\17\3\0\1\17\1\u0112"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\u0113\13\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u0114"+
    "\11\17\20\0\1\17\3\0\1\u0115\2\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\u0116\2\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\21\0\1\232\17\0\1\233\3\0"+
    "\1\233\51\0\1\234\17\0\1\233\3\0\1\233\51\0"+
    "\1\234\73\0\1\235\76\0\1\17\1\11\2\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u0117\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\11\17\1\u0118\5\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\3\17\1\u0119\13\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\6\17\1\u011a\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\11\17\1\u011b"+
    "\5\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\1\u011c\6\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\4\17\1\u011d\2\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\u011e\6\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\2\17\1\u011f\4\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\1\u0120\2\0\1\17\1\u0121\1\17\2\0\2\17"+
    "\5\77\1\u0122\6\17\3\0\1\17\4\0\1\17\1\u0123"+
    "\1\17\1\u0124\1\17\1\u0125\2\17\1\u0126\1\17\1\u0127"+
    "\4\17\20\0\1\17\3\0\2\17\1\u0128\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\17\1\u0129\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u012a\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\4\17\1\u012b\12\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\11\17\1\u012c\5\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\1\u012d\16\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u012e"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\5\17\1\u012f\11\17\25\0"+
    "\1\261\12\0\1\131\1\261\1\0\1\261\1\0\2\261"+
    "\3\0\1\261\4\0\1\261\2\0\1\131\3\0\1\131"+
    "\1\261\46\0\1\131\4\0\1\262\14\0\1\131\3\0"+
    "\1\131\50\0\1\u0130\3\0\1\u0130\71\0\1\u0131\3\0"+
    "\1\u0131\71\0\1\u0132\3\0\1\u0132\50\0\1\17\3\0"+
    "\1\17\1\u0133\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\u0134\2\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\1\u0135\2\17\2\0\2\17\5\77"+
    "\6\17\1\u0136\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\2\17\1\u0137\14\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\3\17"+
    "\1\u0138\5\17\1\u0139\5\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\17"+
    "\1\u013a\15\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\17\1\u013b\15\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\5\17\1\u013c\11\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\u013d"+
    "\4\0\17\17\24\0\1\127\14\0\1\301\3\0\1\301"+
    "\1\127\20\0\1\127\47\0\1\301\3\0\1\301\50\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\6\17\1\u013e"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\3\17"+
    "\1\u013f\13\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u0140\7\17"+
    "\20\0\1\17\3\0\1\17\1\u0141\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\17\1\u0142\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\u0143"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\7\17\1\u0144\7\17\20\0"+
    "\1\17\3\0\1\17\1\u0145\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\u0146\13\17\20\0\1\17\3\0\1\u0147\2\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\3\17\1\u0148\3\17\1\u0149\7\17"+
    "\20\0\1\17\3\0\1\17\1\u014a\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\1\u014b\16\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\3\17\1\u014c\3\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\1\17\1\u014d\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\1\17\1\u014e\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\14\0\35\324\1\u014f"+
    "\1\324\1\u0150\36\324\35\0\1\324\1\u0151\37\0\35\324"+
    "\1\u014f\1\u0152\1\u0150\36\324\4\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u0153\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\2\17\1\u0154\14\17"+
    "\20\0\1\17\3\0\1\u0155\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\1\u0156\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u0157\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\5\17\1\u0158\11\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\15\17\1\u0159\1\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\u015a\6\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\u015b\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\7\17\1\u015c\7\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u015d"+
    "\11\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\u015e\16\17\20\0\1\17"+
    "\3\0\1\17\1\u015f\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\u0160\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\7\17\1\u0161\7\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u0162\11\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\17"+
    "\1\u0163\15\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\1\u0164\6\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\2\17\1\u0165\14\17\20\0\1\17\3\0"+
    "\1\17\1\u0166\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\u0167\2\17"+
    "\2\0\2\17\5\77\2\17\1\u0168\4\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\3\17\1\u0169\13\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\u016a\16\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\1\u016b\16\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u016c\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\1\u016d"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\1\17\1\u016e\3\17\1\u016f\11\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\14\17\1\u0170\2\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\1\u0171\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\7\17\1\u0172\7\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u0173\11\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\11\17"+
    "\1\u0174\5\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u0175\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\4\17"+
    "\1\u0176\2\17\3\0\1\17\4\0\7\17\1\u0177\7\17"+
    "\20\0\1\17\3\0\1\17\1\u0178\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\17\1\u0179\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u017a\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\2\17\1\u017b\1\17\1\u017c\2\17\3\0\1\17"+
    "\4\0\3\17\1\u017d\13\17\20\0\1\17\3\0\1\17"+
    "\1\u017e\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u017f\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\4\17"+
    "\1\u0180\2\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\4\17\1\u0181\12\17\20\0\1\17\3\0\1\17"+
    "\1\u0182\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\17\1\u0183\15\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\2\17\1\u0184\14\17\20\0\1\17"+
    "\3\0\1\17\1\u0185\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\17"+
    "\1\u0186\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\1\u0100\6\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\1\u0187\16\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\u0188\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\u0189\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\3\17"+
    "\1\u018a\13\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u018b\11\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\6\17"+
    "\1\u018c\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u018d\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u018e"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\2\17\1\u018f\4\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\3\17\1\u0190\13\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\14\17\1\u0191\2\17\20\0\1\17\3\0\2\17\1\u0192"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\2\17\1\u0193\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\4\17\1\u0194\2\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\u0195\2\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\1\17\1\u0196\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\u0197\2\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\17\1\u0198"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\21\0\1\u0120\3\0\1\u0199\12\0\1\u019a\17\0"+
    "\1\u019b\1\0\1\u019c\1\0\1\u019d\2\0\1\u019e\1\0"+
    "\1\u019f\24\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\4\17\1\u01a0\12\17\20\0"+
    "\1\17\3\0\1\17\1\u01a1\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\11\17\1\u01a2\5\17\20\0"+
    "\1\17\3\0\1\u01a3\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\10\17"+
    "\1\u01a4\6\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\6\17\1\u01a5\10\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\11\17\1\u01a6\5\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\3\17\1\u01a7\13\17\20\0\1\17\1\u01a8\2\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\u01a9\13\17\20\0\1\17\1\u01aa\2\0\3\17"+
    "\2\0\2\17\5\77\1\u01ab\5\17\1\u01ac\3\0\1\17"+
    "\4\0\10\17\1\u01ad\6\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u01ae\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u01af\7\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\1\u01b0"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\1\u01b1\16\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u01b2\2\17\3\0\1\17\4\0\3\17"+
    "\1\u01b3\13\17\41\0\1\u0130\3\0\1\u0130\6\0\1\u01b4"+
    "\62\0\1\u0131\3\0\1\u0131\7\0\1\u01b4\41\0\1\u01b5"+
    "\14\0\1\u01b6\2\0\1\u0132\3\0\1\u0132\10\0\1\u01b7"+
    "\2\u01b8\35\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\u01b9\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u01ba\11\17\20\0\1\17\3\0\1\17\1\u01bb"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\4\17\1\u01bc\2\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\7\17\1\u01bd\7\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u01be\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\u01bf\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\3\17\1\u01c0\13\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\7\17\1\u01c1\7\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u01c2"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\4\17\1\u01c3\12\17\20\0"+
    "\1\17\3\0\1\17\1\u01c4\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\10\17\1\u01c5\6\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u01c6"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\1\u01c7\6\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\u01c8"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u01c9\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\1\u01ca\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\7\17\1\u01cb\7\17\20\0"+
    "\1\17\3\0\2\17\1\u01cc\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\u01cd"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\2\17\1\u01ce\14\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\11\17\1\u01cf\5\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\7\17\1\u01d0\7\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\u01d1\4\0\17\17\51\0"+
    "\1\324\44\0\1\17\3\0\1\u01d2\2\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\7\17\1\u01d3\7\17\20\0\1\17\3\0\1\17"+
    "\1\u01d4\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u01d5\11\17"+
    "\20\0\1\17\3\0\1\17\1\u01d6\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\u01d7\2\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\2\17\1\u01d8\4\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\1\17\1\u01d9\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\1\u01da\6\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\2\17"+
    "\1\u01db\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\1\17\1\u01dc\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\1\u01dd\16\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\7\17"+
    "\1\u01de\7\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\1\u01df\6\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\1\17\1\u01e0\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\1\17\1\u01e1\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\17\1\u01e2"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\u01e3\16\17\20\0\1\17"+
    "\3\0\2\17\1\u01e4\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\3\17\1\u01e5"+
    "\13\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\6\17\1\u01e6\10\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\3\17\1\u01e7"+
    "\3\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\1\u01e8\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u01e9\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\1\u01ea\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\1\u01eb\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\2\17\1\u01ec\14\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\3\17"+
    "\1\u01ed\13\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\14\17\1\u01ee\2\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\u01ef\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\1\u01f0\6\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\12\17\1\u01f1"+
    "\4\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\4\17\1\u01f2\2\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\4\17\1\u01f3\12\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\7\17\1\u01f4\7\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u01f5"+
    "\11\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\4\17\1\u01f6\2\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\7\17\1\u01f7\7\17\20\0\1\17\3\0"+
    "\1\17\1\u01f8\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\17\1\u01f9"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\1\17\1\u01fa\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\1\u01fb\16\17\20\0\1\17\3\0\1\17"+
    "\1\u01fc\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u01fd\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\u01fe\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\4\17\1\u01ff\12\17\20\0\1\17\3\0\1\17"+
    "\1\u0200\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\63\0\1\u0201\37\0\1\u0202\42\0\1\u0203"+
    "\31\0\1\u0204\140\0\1\u0205\73\0\1\u0206\100\0\1\u0207"+
    "\67\0\1\u0208\33\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\11\17\1\u0209\5\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\7\17\1\u020a\7\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\3\17\1\u020b\3\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u020c\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\17\1\u020d\15\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\u020e\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u020f\11\17\21\0\1\u01a8\40\0\1\u0210"+
    "\33\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\10\17\1\u0211\6\17\21\0\1\u01aa"+
    "\16\0\1\u0212\5\0\1\u0213\20\0\1\u0214\26\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\11\17\1\u0215\5\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u0216\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\4\17\1\u0217\2\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\1\17\1\u0218\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\17\1\u0219\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\u021a\6\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\14\17\1\u021b\2\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\4\17\1\u021c\12\17\41\0\1\u021d\3\0"+
    "\1\u021d\51\0\1\u01b5\14\0\1\u01b6\20\0\2\u01b8\56\0"+
    "\1\u021e\3\0\1\u021e\56\0\1\u021f\67\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u0220\11\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\6\17\1\u0221\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\12\17\1\u0222\4\17\20\0\1\17"+
    "\3\0\1\17\1\u0223\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\2\17"+
    "\1\u0224\14\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u0225\11\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\u0226\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u0227\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u0228\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\1\u0229\2\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\17\1\u022a\15\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\1\u022b\16\17\20\0\1\17\3\0\1\17"+
    "\1\u022c\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u022d\11\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\u022e\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\3\17\1\u022f\13\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u0230\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\u0231\16\17\20\0"+
    "\1\17\3\0\1\u0232\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\u0233"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\7\17\1\u0234\7\17\20\0"+
    "\1\17\3\0\1\17\1\u0235\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u0236\11\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u0237"+
    "\11\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\3\17\1\u0238\3\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\1\u0239\6\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\4\17"+
    "\1\u023a\12\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\1\u023b\6\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\1\u023c\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\u023d"+
    "\2\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\u023e\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u023f\11\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\1\u0240\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\u0241\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\17"+
    "\1\u0242\15\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u0243\11\17"+
    "\20\0\1\17\3\0\2\17\1\u0244\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\u0245\13\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\10\17\1\u0246"+
    "\6\17\20\0\1\17\3\0\1\17\1\u0247\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\4\17\1\u0248\12\17\20\0\1\17\3\0"+
    "\1\17\1\u0249\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\2\17\1\u024a\4\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\1\17\1\u024b\15\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\10\17\1\u024c\6\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\6\17\1\u024d\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u024e\7\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\3\17\1\u024f\13\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\6\17\1\u0250\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\4\17\1\u0251\2\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\14\17\1\u0252\2\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\4\17\1\u0253\12\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\2\17\1\u0254\4\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u0255"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\14\17\1\u0256\2\17\70\0"+
    "\1\u0257\73\0\1\u0258\52\0\1\u0259\76\0\1\u025a\111\0"+
    "\1\u025b\100\0\1\u025c\76\0\1\u025d\31\0\1\17\3\0"+
    "\2\17\1\u025e\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u025f\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\17\1\u0260\15\17\20\0\1\17"+
    "\3\0\1\17\1\u0261\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\u0262\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\2\17"+
    "\1\u0263\4\17\3\0\1\17\4\0\17\17\67\0\1\u0264"+
    "\76\0\1\u0265\51\0\1\u0266\75\0\1\u0267\51\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\3\17\1\u0268\3\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\u0269"+
    "\2\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\1\u026a\6\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\17\1\u026b\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\2\17\1\u026c\4\17\3\0\1\17"+
    "\4\0\17\17\21\0\1\u026d\14\0\1\u01b6\2\0\1\u021d"+
    "\3\0\1\u021d\51\0\1\u01b5\14\0\1\u01b6\2\0\1\u021e"+
    "\3\0\1\u021e\11\0\2\u01b8\36\0\1\u021f\14\0\1\u01b6"+
    "\57\0\1\17\3\0\3\17\2\0\2\17\5\77\1\u026e"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\11\17\1\u026f\5\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\u0270\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\1\u0271\6\17"+
    "\3\0\1\17\4\0\17\17\21\0\1\u0229\36\0\1\u0272"+
    "\35\0\1\17\3\0\1\u0273\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u0274\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\1\u0275\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\6\17"+
    "\1\u0276\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\1\u0277\16\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u0278\7\17"+
    "\20\0\1\17\3\0\1\17\1\u0279\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u027a\11\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u027b\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\u027c\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\7\17\1\u027d\7\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\1\u027e\6\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\6\17\1\u027f\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\4\17\1\u0280\2\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\14\17"+
    "\1\u0281\2\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u0282\11\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\5\17\1\u0283\11\17\20\0\1\17"+
    "\3\0\1\17\1\u0284\1\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\u0285"+
    "\2\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\1\17\1\u0286\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\1\u0287\6\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\17"+
    "\1\u0288\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u0289\11\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\u028a\16\17\20\0\1\17\3\0"+
    "\1\u028b\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\2\17\1\u028c\14\17"+
    "\20\0\1\17\3\0\1\u028d\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\1\17\1\u028e\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\1\u028f\16\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\6\17\1\u0290\10\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\4\17\1\u0291\2\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\17"+
    "\1\u0292\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\4\17\1\u0293\12\17"+
    "\20\0\1\17\3\0\1\17\1\u0294\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u0295\11\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\1\u0296"+
    "\16\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\6\17\1\u0297\10\17\20\0"+
    "\1\17\3\0\1\17\1\u0298\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\26\0\1\u0299\74\0"+
    "\1\u029a\130\0\1\u029b\42\0\1\u029c\122\0\1\u029d\65\0"+
    "\1\u029e\53\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\u029f\4\0\17\17\20\0\1\17\3\0"+
    "\1\17\1\u02a0\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u02a1"+
    "\11\17\43\0\1\u02a2\56\0\1\u02a3\71\0\1\17\3\0"+
    "\1\u02a4\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u02a5\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\21\0\1\u026d\14\0\1\u01b6\2\0\1\u02a6\3\0\1\u02a6"+
    "\50\0\1\17\3\0\1\u02a7\2\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\16\17\1\u02a8\24\0\1\u02a9\71\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u02aa\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u02ab\7\17"+
    "\20\0\1\17\3\0\1\17\1\u02ac\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\u02ad\16\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\6\17\1\u02ae"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\17"+
    "\1\u02af\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\u02b0\16\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\6\17\1\u02b1\10\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\4\17\1\u02b2\2\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u02b3"+
    "\7\17\20\0\1\17\3\0\1\17\1\u02b4\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\6\17\1\u02b5\10\17\20\0\1\17\3\0"+
    "\1\17\1\u02b6\1\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\1\u02b7\2\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\4\17\1\u02b8\12\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\1\u02b9\6\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\u02ba\4\0\17\17\20\0"+
    "\1\17\3\0\1\u02bb\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\1\u02bc"+
    "\2\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\u02bd\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u02be\12\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u02bf"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\4\17\1\u02c0\12\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\4\17\1\u02c1\12\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\4\17\1\u02c2\12\17\52\0\1\u02c3\50\0\1\u02c4\134\0"+
    "\1\u02c5\31\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\5\17\1\u02c6\11\17\20\0"+
    "\1\17\3\0\1\u02c7\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\3\17"+
    "\1\u02c8\13\17\20\0\1\17\3\0\1\u02c9\2\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\1\u02ca\2\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\17\17\41\0\1\u02a6\3\0\1\u02a6"+
    "\10\0\1\265\37\0\1\17\3\0\1\17\1\u02cb\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\44\0\1\u02cc\51\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\1\17\1\u02cd\15\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\1\u02ce"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\3\17\1\u02cf\3\17\3\0"+
    "\1\17\4\0\17\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\1\u02d0\6\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\1\u02d1"+
    "\6\17\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\10\17\1\u02d2\6\17\20\0\1\17\3\0\1\17\1\u02d3"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\6\17\1\u02d4\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\1\u02d5\16\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\5\17\1\u02d6"+
    "\11\17\20\0\1\17\3\0\1\17\1\u02d7\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\3\17\1\u02d8\13\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\3\17\1\u02d9\13\17\20\0\1\17\3\0\1\17\1\u02da"+
    "\1\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\17\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\6\17\1\u02db\10\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\5\17\1\u02dc\11\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\6\17\1\u02dd\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\5\17\1\u02de\11\17"+
    "\64\0\1\u02df\35\0\1\u02e0\133\0\1\u02e1\33\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\5\17\1\u02e2\11\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\4\17\1\u02e3\2\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\3\17\1\u02e4\13\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\3\17\1\u02e5\13\17\60\0\1\u02e6"+
    "\35\0\1\17\3\0\1\17\1\u02e7\1\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\3\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\7\17\1\u02e8\7\17\20\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u02e9\11\17\20\0\1\17\3\0\1\u02ea\2\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\6\17\1\u02eb\10\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\1\u02ec\6\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\6\17\1\u02ed\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\3\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\5\17\1\u02ee\11\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\1\u02ef\6\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\7\17\1\u02f0\7\17"+
    "\64\0\1\u02f1\55\0\1\u02f2\51\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\6\17"+
    "\1\u02f3\10\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\7\17\3\0\1\17\4\0\4\17\1\u02f4\12\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\6\17"+
    "\1\u02f5\3\0\1\17\4\0\17\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\5\17\1\u02f6\11\17\25\0\1\u02f7\70\0\1\17\3\0"+
    "\1\u02f8\2\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\20\0\1\17\3\0\1\17\1\u02f9\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\7\17"+
    "\3\0\1\17\4\0\1\u02fa\16\17\20\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\1\u02fb\16\17\20\0\1\17\3\0\1\17\1\u02fc\1\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\17\17"+
    "\65\0\1\u02fd\73\0\1\u02fe\32\0\1\17\3\0\1\17"+
    "\1\u02ff\1\17\2\0\2\17\5\77\7\17\3\0\1\17"+
    "\4\0\17\17\24\0\1\u0300\71\0\1\17\3\0\3\17"+
    "\2\0\2\17\5\77\7\17\3\0\1\17\4\0\5\17"+
    "\1\u0301\11\17\20\0\1\17\3\0\3\17\2\0\2\17"+
    "\5\77\3\17\1\u0302\3\17\3\0\1\17\4\0\17\17"+
    "\20\0\1\17\3\0\3\17\2\0\2\17\5\77\3\17"+
    "\1\u0303\3\17\3\0\1\17\4\0\17\17\20\0\1\17"+
    "\3\0\1\u0304\2\17\2\0\2\17\5\77\7\17\3\0"+
    "\1\17\4\0\17\17\64\0\1\u0305\31\0\1\17\3\0"+
    "\3\17\2\0\2\17\5\77\7\17\3\0\1\17\4\0"+
    "\6\17\1\u0306\10\17\20\0\1\17\3\0\3\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\7\17\1\u0307"+
    "\7\17\20\0\1\17\3\0\3\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\7\17\1\u0308\7\17\65\0"+
    "\1\u0309\30\0\1\17\3\0\1\17\1\u030a\1\17\2\0"+
    "\2\17\5\77\7\17\3\0\1\17\4\0\17\17\20\0"+
    "\1\17\3\0\1\17\1\u030b\1\17\2\0\2\17\5\77"+
    "\7\17\3\0\1\17\4\0\17\17\14\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[37076];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\2\11\3\1\1\11\5\1\1\11\2\1\1\11"+
    "\1\1\1\11\7\1\1\11\2\1\3\11\14\1\14\11"+
    "\2\1\1\0\1\11\2\1\1\11\13\1\6\0\6\1"+
    "\1\11\1\0\1\11\1\0\16\1\1\0\60\1\2\0"+
    "\1\1\1\11\25\1\3\0\14\1\1\0\21\1\1\0"+
    "\113\1\1\0\17\1\3\0\36\1\1\11\107\1\7\0"+
    "\10\1\1\0\1\1\1\0\11\1\2\0\1\11\2\0"+
    "\110\1\4\0\1\11\3\0\7\1\1\0\1\1\3\0"+
    "\10\1\3\0\11\1\1\0\55\1\2\0\1\11\4\0"+
    "\6\1\1\11\1\0\1\11\1\0\5\1\1\0\4\1"+
    "\1\0\46\1\1\11\2\0\1\11\1\0\1\11\3\1"+
    "\2\11\2\1\1\0\2\1\1\0\31\1\3\0\6\1"+
    "\1\0\22\1\1\11\2\0\4\1\1\0\12\1\2\0"+
    "\4\1\1\0\5\1\2\11\1\1\1\0\4\1\1\0"+
    "\3\1\1\11\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[779];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
  private StringBuffer string = new StringBuffer();

  private String originId;
  
  /** 
   * Resets scanner.
   */    
  public void reset(java.io.Reader reader, String originId) {
    this.originId = originId;
    yyreset(reader);
  } 
  
  /**
   * {@inheritDoc}
   */
  public void close() throws java.io.IOException {
    yyclose();
  }
  
  /** Factory method for tokens. */  
  private VBToken token (ETokenType type) {
	return new VBToken(type, yychar, yyline, yytext(), originId);
  }
  


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  VBScanner(java.io.Reader in, String originId) {
  	this.originId = originId;
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  VBScanner(java.io.InputStream in, String originId) {
    this(new java.io.InputStreamReader(in), originId);
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1760) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public VBToken getNextToken() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      if (zzMarkedPosL > zzStartRead) {
        switch (zzBufferL[zzMarkedPosL-1]) {
        case '\n':
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          zzAtBOL = true;
          break;
        case '\r': 
          if (zzMarkedPosL < zzEndReadL)
            zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
          else if (zzAtEOF)
            zzAtBOL = false;
          else {
            boolean eof = zzRefill();
            zzMarkedPosL = zzMarkedPos;
            zzEndReadL = zzEndRead;
            zzBufferL = zzBuffer;
            if (eof) 
              zzAtBOL = false;
            else 
              zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
          }
          break;
        default:
          zzAtBOL = false;
        }
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      if (zzAtBOL)
        zzState = ZZ_LEXSTATE[zzLexicalState+1];
      else
        zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 100: 
          { return token(ETokenType.CCHAR);
          }
        case 182: break;
        case 147: 
          { return token(ETokenType.UNICODE);
          }
        case 183: break;
        case 87: 
          { return token(ETokenType.ERROR);
          }
        case 184: break;
        case 18: 
          { return token(ETokenType.COLON);
          }
        case 185: break;
        case 167: 
          { return token(ETokenType.RAISEEVENT);
          }
        case 186: break;
        case 161: 
          { return token(ETokenType.OVERLOADS);
          }
        case 187: break;
        case 67: 
          { return token(ETokenType.CDEC);
          }
        case 188: break;
        case 131: 
          { return token(ETokenType.EXIT_SUB);
          }
        case 189: break;
        case 27: 
          { return token(ETokenType.LT);
          }
        case 190: break;
        case 58: 
          { return token(ETokenType.STEP);
          }
        case 191: break;
        case 28: 
          { return token(ETokenType.EQ);
          }
        case 192: break;
        case 140: 
          { return token(ETokenType.ANDALSO);
          }
        case 193: break;
        case 76: 
          { return token(ETokenType.NEXT);
          }
        case 194: break;
        case 25: 
          { return token(ETokenType.INTDIV);
          }
        case 195: break;
        case 121: 
          { return token(ETokenType.OBJECT);
          }
        case 196: break;
        case 20: 
          { return token(ETokenType.RPAREN);
          }
        case 197: break;
        case 60: 
          { return token(ETokenType.BYTE);
          }
        case 198: break;
        case 163: 
          { return token(ETokenType.PROTECTED);
          }
        case 199: break;
        case 118: 
          { return token(ETokenType.SINGLE);
          }
        case 200: break;
        case 115: 
          { return token(ETokenType.MYBASE);
          }
        case 201: break;
        case 75: 
          { return token(ETokenType.GOTO);
          }
        case 202: break;
        case 55: 
          { return token(ETokenType.ENUM);
          }
        case 203: break;
        case 128: 
          { return token(ETokenType.END_ENUM);
          }
        case 204: break;
        case 174: 
          { return token(ETokenType.END_FUNCTION);
          }
        case 205: break;
        case 57: 
          { return token(ETokenType.EXIT);
          }
        case 206: break;
        case 152: 
          { return token(ETokenType.DELEGATE);
          }
        case 207: break;
        case 143: 
          { return token(ETokenType.IMPORTS);
          }
        case 208: break;
        case 138: 
          { return token(ETokenType.DECLARE);
          }
        case 209: break;
        case 133: 
          { return token(ETokenType.MYCLASS);
          }
        case 210: break;
        case 47: 
          { return token(ETokenType.GET);
          }
        case 211: break;
        case 111: 
          { return token(ETokenType.END_SUB);
          }
        case 212: break;
        case 37: 
          { return token(ETokenType.AS);
          }
        case 213: break;
        case 148: 
          { return token(ETokenType.VARIANT);
          }
        case 214: break;
        case 144: 
          { return token(ETokenType.INTEGER);
          }
        case 215: break;
        case 14: 
          { return token(ETokenType.DOT);
          }
        case 216: break;
        case 81: 
          { return token(ETokenType.LONG);
          }
        case 217: break;
        case 164: 
          { return token(ETokenType.INTERFACE);
          }
        case 218: break;
        case 59: 
          { return token(ETokenType.STOP);
          }
        case 219: break;
        case 127: 
          { return token(ETokenType.FRIEND);
          }
        case 220: break;
        case 82: 
          { return token(ETokenType.LIKE);
          }
        case 221: break;
        case 166: 
          { return token(ETokenType.WRITEONLY);
          }
        case 222: break;
        case 119: 
          { return token(ETokenType.STATIC);
          }
        case 223: break;
        case 159: 
          { return token(ETokenType.STRUCTURE);
          }
        case 224: break;
        case 132: 
          { return token(ETokenType.EXIT_FOR);
          }
        case 225: break;
        case 110: 
          { return token(ETokenType.RETURN);
          }
        case 226: break;
        case 98: 
          { return token(ETokenType.CONST);
          }
        case 227: break;
        case 13: 
          { return token(ETokenType.INTEGER_LITERAL);
          }
        case 228: break;
        case 173: 
          { return token(ETokenType.END_PROPERTY);
          }
        case 229: break;
        case 32: 
          { return token(ETokenType.FLOATING_POINT_LITERAL);
          }
        case 230: break;
        case 154: 
          { return token(ETokenType.PRESERVE);
          }
        case 231: break;
        case 83: 
          { return token(ETokenType.WEND);
          }
        case 232: break;
        case 88: 
          { return token(ETokenType.ERASE);
          }
        case 233: break;
        case 180: 
          { return token(ETokenType.NOTOVERRIDABLE);
          }
        case 234: break;
        case 19: 
          { return token(ETokenType.LPAREN);
          }
        case 235: break;
        case 126: 
          { return token(ETokenType.TYPEOF);
          }
        case 236: break;
        case 56: 
          { return token(ETokenType.ELSE);
          }
        case 237: break;
        case 41: 
          { return token(ETokenType.TO);
          }
        case 238: break;
        case 3: 
          { /* ignore */
          }
        case 239: break;
        case 89: 
          { return token(ETokenType.END_IF);
          }
        case 240: break;
        case 146: 
          { return token(ETokenType.FINALLY);
          }
        case 241: break;
        case 10: 
          { return token(ETokenType.NOT);
          }
        case 242: break;
        case 150: 
          { return token(ETokenType.SYNCLOCK);
          }
        case 243: break;
        case 61: 
          { return token(ETokenType.DATE);
          }
        case 244: break;
        case 91: 
          { return token(ETokenType.DATE_LITERAL);
          }
        case 245: break;
        case 84: 
          { return token(ETokenType.WHEN);
          }
        case 246: break;
        case 65: 
          { return token(ETokenType.CHAR);
          }
        case 247: break;
        case 45: 
          { return token(ETokenType.SUB);
          }
        case 248: break;
        case 85: 
          { return token(ETokenType.WITH);
          }
        case 249: break;
        case 54: 
          { return token(ETokenType.EACH);
          }
        case 250: break;
        case 105: 
          { return token(ETokenType.GOSUB);
          }
        case 251: break;
        case 64: 
          { return token(ETokenType.CSTR);
          }
        case 252: break;
        case 169: 
          { return token(ETokenType.ADDHANDLER);
          }
        case 253: break;
        case 46: 
          { return token(ETokenType.DIM);
          }
        case 254: break;
        case 17: 
          { return token(ETokenType.MINUS);
          }
        case 255: break;
        case 102: 
          { return token(ETokenType.CTYPE);
          }
        case 256: break;
        case 39: 
          { return token(ETokenType.IN);
          }
        case 257: break;
        case 4: 
          { yyline -= 1;
          }
        case 258: break;
        case 15: 
          { return token(ETokenType.PLUS);
          }
        case 259: break;
        case 90: 
          { return token(ETokenType.EVENT);
          }
        case 260: break;
        case 62: 
          { return token(ETokenType.CHARACTER_LITERAL);
          }
        case 261: break;
        case 171: 
          { return token(ETokenType.IMPLEMENTS);
          }
        case 262: break;
        case 26: 
          { return token(ETokenType.CARET);
          }
        case 263: break;
        case 109: 
          { return token(ETokenType.RESUME);
          }
        case 264: break;
        case 130: 
          { return token(ETokenType.END_WITH);
          }
        case 265: break;
        case 112: 
          { return token(ETokenType.ELSEIF);
          }
        case 266: break;
        case 165: 
          { return token(ETokenType.NAMESPACE);
          }
        case 267: break;
        case 120: 
          { return token(ETokenType.ORELSE);
          }
        case 268: break;
        case 40: 
          { return token(ETokenType.IF);
          }
        case 269: break;
        case 158: 
          { return token(ETokenType.END_SELECT);
          }
        case 270: break;
        case 30: 
          { return token(ETokenType.SEMICOLON);
          }
        case 271: break;
        case 113: 
          { return token(ETokenType.EXIT_DO);
          }
        case 272: break;
        case 53: 
          { return token(ETokenType.XOR);
          }
        case 273: break;
        case 106: 
          { return token(ETokenType.THROW);
          }
        case 274: break;
        case 175: 
          { return token(ETokenType.MUSTINHERIT);
          }
        case 275: break;
        case 108: 
          { return token(ETokenType.WHILE);
          }
        case 276: break;
        case 157: 
          { return token(ETokenType.FUNCTION);
          }
        case 277: break;
        case 104: 
          { return token(ETokenType.ALIAS);
          }
        case 278: break;
        case 179: 
          { return token(ETokenType.BEGIN_PROPERTY);
          }
        case 279: break;
        case 86: 
          { return token(ETokenType.REDIM);
          }
        case 280: break;
        case 5: 
          { return token(ETokenType.END_OF_LINE_COMMENT);
          }
        case 281: break;
        case 101: 
          { return token(ETokenType.CATCH);
          }
        case 282: break;
        case 176: 
          { return token(ETokenType.OVERRIDABLE);
          }
        case 283: break;
        case 172: 
          { return token(ETokenType.WITHEVENTS);
          }
        case 284: break;
        case 78: 
          { return token(ETokenType.THEN);
          }
        case 285: break;
        case 93: 
          { return token(ETokenType.BEGIN);
          }
        case 286: break;
        case 42: 
          { return token(ETokenType.REM);
          }
        case 287: break;
        case 52: 
          { return token(ETokenType.FOR);
          }
        case 288: break;
        case 1: 
          { return token(ETokenType.ILLEGAL_CHARACTER);
          }
        case 289: break;
        case 178: 
          { return token(ETokenType.REMOVEHANDLER);
          }
        case 290: break;
        case 92: 
          { return token(ETokenType.SHORT);
          }
        case 291: break;
        case 142: 
          { return token(ETokenType.GETTYPE);
          }
        case 292: break;
        case 77: 
          { return token(ETokenType.BOOLEAN_LITERAL);
          }
        case 293: break;
        case 97: 
          { return token(ETokenType.CBYTE);
          }
        case 294: break;
        case 48: 
          { return token(ETokenType.NEW);
          }
        case 295: break;
        case 160: 
          { return token(ETokenType.OVERRIDES);
          }
        case 296: break;
        case 103: 
          { return token(ETokenType.CLASS);
          }
        case 297: break;
        case 139: 
          { return token(ETokenType.DEFAULT);
          }
        case 298: break;
        case 73: 
          { return token(ETokenType.ANSI);
          }
        case 299: break;
        case 149: 
          { return token(ETokenType.READONLY);
          }
        case 300: break;
        case 116: 
          { return token(ETokenType.SELECT);
          }
        case 301: break;
        case 114: 
          { return token(ETokenType.MODULE);
          }
        case 302: break;
        case 177: 
          { return token(ETokenType.MUSTOVERRIDE);
          }
        case 303: break;
        case 24: 
          { return token(ETokenType.MULT);
          }
        case 304: break;
        case 170: 
          { return token(ETokenType.PARAMARRAY);
          }
        case 305: break;
        case 72: 
          { return token(ETokenType.CLNG);
          }
        case 306: break;
        case 123: 
          { return token(ETokenType.DOUBLE);
          }
        case 307: break;
        case 117: 
          { return token(ETokenType.SHARED);
          }
        case 308: break;
        case 8: 
          { return token(ETokenType.RBRACK);
          }
        case 309: break;
        case 33: 
          { return token(ETokenType.OR);
          }
        case 310: break;
        case 66: 
          { return token(ETokenType.COBJ);
          }
        case 311: break;
        case 63: 
          { return token(ETokenType.CSNG);
          }
        case 312: break;
        case 155: 
          { return token(ETokenType.PROPERTY);
          }
        case 313: break;
        case 137: 
          { return token(ETokenType.DECIMAL);
          }
        case 314: break;
        case 34: 
          { return token(ETokenType.ON);
          }
        case 315: break;
        case 50: 
          { return token(ETokenType.LET);
          }
        case 316: break;
        case 95: 
          { return token(ETokenType.BYVAL);
          }
        case 317: break;
        case 22: 
          { return token(ETokenType.RBRACE);
          }
        case 318: break;
        case 49: 
          { return token(ETokenType.TRY);
          }
        case 319: break;
        case 168: 
          { return token(ETokenType.DIRECTCAST);
          }
        case 320: break;
        case 44: 
          { return token(ETokenType.SET);
          }
        case 321: break;
        case 51: 
          { return token(ETokenType.LIB);
          }
        case 322: break;
        case 11: 
          { return token(ETokenType.MOD);
          }
        case 323: break;
        case 12: 
          { return token(ETokenType.STRING);
          }
        case 324: break;
        case 79: 
          { return token(ETokenType.TYPE);
          }
        case 325: break;
        case 153: 
          { return token(ETokenType.ASSEMBLY);
          }
        case 326: break;
        case 68: 
          { return token(ETokenType.CDBL);
          }
        case 327: break;
        case 94: 
          { return token(ETokenType.BYREF);
          }
        case 328: break;
        case 156: 
          { return token(ETokenType.INHERITS);
          }
        case 329: break;
        case 80: 
          { return token(ETokenType.LOOP);
          }
        case 330: break;
        case 70: 
          { return token(ETokenType.CALL);
          }
        case 331: break;
        case 136: 
          { return token(ETokenType.BOOLEAN);
          }
        case 332: break;
        case 43: 
          { return token(ETokenType.END);
          }
        case 333: break;
        case 6: 
          { return token(ETokenType.IDENTIFIER);
          }
        case 334: break;
        case 145: 
          { return token(ETokenType.NOTHING);
          }
        case 335: break;
        case 125: 
          { return token(ETokenType.PUBLIC);
          }
        case 336: break;
        case 96: 
          { return token(ETokenType.CBOOL);
          }
        case 337: break;
        case 181: 
          { return token(ETokenType.NOTINHERITABLE);
          }
        case 338: break;
        case 141: 
          { return token(ETokenType.PRIVATE);
          }
        case 339: break;
        case 151: 
          { return token(ETokenType.OPTIONAL);
          }
        case 340: break;
        case 122: 
          { return token(ETokenType.OPTION);
          }
        case 341: break;
        case 107: 
          { return token(ETokenType.UNTIL);
          }
        case 342: break;
        case 16: 
          { return token(ETokenType.DIV);
          }
        case 343: break;
        case 35: 
          { return token(ETokenType.DO);
          }
        case 344: break;
        case 74: 
          { return token(ETokenType.AUTO);
          }
        case 345: break;
        case 129: 
          { return token(ETokenType.END_TYPE);
          }
        case 346: break;
        case 135: 
          { return token(ETokenType.HANDLES);
          }
        case 347: break;
        case 162: 
          { return token(ETokenType.ADDRESSOF);
          }
        case 348: break;
        case 31: 
          { return token(ETokenType.ME);
          }
        case 349: break;
        case 69: 
          { return token(ETokenType.CASE);
          }
        case 350: break;
        case 38: 
          { return token(ETokenType.IS);
          }
        case 351: break;
        case 7: 
          { return token(ETokenType.LBRACK);
          }
        case 352: break;
        case 134: 
          { return token(ETokenType.SHADOWS);
          }
        case 353: break;
        case 23: 
          { return token(ETokenType.COMMA);
          }
        case 354: break;
        case 71: 
          { return token(ETokenType.CINT);
          }
        case 355: break;
        case 124: 
          { return token(ETokenType.CSHORT);
          }
        case 356: break;
        case 99: 
          { return token(ETokenType.CDATE);
          }
        case 357: break;
        case 36: 
          { return token(ETokenType.STRING_LITERAL);
          }
        case 358: break;
        case 9: 
          { return token(ETokenType.AND);
          }
        case 359: break;
        case 29: 
          { return token(ETokenType.GT);
          }
        case 360: break;
        case 2: 
          { return token(ETokenType.EOL);
          }
        case 361: break;
        case 21: 
          { return token(ETokenType.LBRACE);
          }
        case 362: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return token(ETokenType.EOF);
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
