MODULE: package: json_ext (lines 1-70)
  METHOD: function: parsepath (lines 26-26)
  METHOD: function: get_json_value (lines 29-29)
  METHOD: function: get_string (lines 30-30)
  METHOD: function: get_number (lines 31-31)
  METHOD: function: get_json (lines 32-32)
  METHOD: function: get_json_list (lines 33-33)
  METHOD: function: get_bool (lines 34-34)
  METHOD: procedure: put (lines 37-37)
  METHOD: procedure: put (lines 38-38)
  METHOD: procedure: put (lines 39-39)
  METHOD: procedure: put (lines 40-40)
  METHOD: procedure: put (lines 41-41)
  METHOD: procedure: put (lines 42-42)
  METHOD: procedure: remove (lines 44-44)
  METHOD: function: pp (lines 47-47)
  METHOD: procedure: pp (lines 48-48)
  METHOD: procedure: pp_htp (lines 49-49)
  METHOD: function: is_integer (lines 52-52)
  ATTRIBUTE: variable: format_string (lines 54-54)
  METHOD: function: to_json_value (lines 56-56)
  METHOD: function: is_date (lines 58-58)
  METHOD: function: to_date2 (lines 61-61)
  METHOD: function: get_date (lines 63-63)
  METHOD: procedure: put (lines 64-64)
  METHOD: function: base64 (lines 67-67)
  METHOD: function: base64 (lines 68-68)
MODULE: package: json_ext (lines 72-665)
  META: exception declaration: scanner_exception (lines 73-73)
  META: pragma: null (lines 74-74)
  META: exception declaration: parser_exception (lines 75-75)
  META: pragma: null (lines 76-76)
  META: exception declaration: jext_exception (lines 77-77)
  META: pragma: null (lines 78-78)
  METHOD: function: is_integer (lines 81-90)
    ATTRIBUTE: variable: myint (lines 82-82)
    STATEMENT: if: null (lines 84-86)
      STATEMENT: myint: null (lines 85-85)
      STATEMENT: return: null (lines 86-86)
    STATEMENT: else: null (lines 87-89)
      STATEMENT: return: null (lines 88-88)
  METHOD: function: to_json_value (lines 93-96)
    STATEMENT: return: null (lines 95-95)
  METHOD: function: is_date (lines 99-107)
    ATTRIBUTE: variable: temp (lines 100-100)
    STATEMENT: temp: null (lines 102-102)
    STATEMENT: return: null (lines 103-103)
    META: exception section: null (lines 104-104)
    META: when: others (lines 105-105)
    STATEMENT: return: null (lines 106-106)
  METHOD: function: to_date2 (lines 110-120)
    STATEMENT: if: null (lines 112-113)
      STATEMENT: return: null (lines 113-113)
    STATEMENT: else: null (lines 114-116)
      STATEMENT: raise_application_error: null (lines 115-115)
    META: exception section: null (lines 117-117)
    META: when: others (lines 118-118)
    STATEMENT: raise_application_error: null (lines 119-119)
  METHOD: function: parsepath (lines 123-213)
    ATTRIBUTE: variable: build_path (lines 124-124)
    ATTRIBUTE: variable: buf (lines 125-125)
    ATTRIBUTE: variable: endstring (lines 126-126)
    ATTRIBUTE: variable: indx (lines 127-127)
    METHOD: procedure: next_char (lines 129-137)
      STATEMENT: if: null (lines 131-133)
        STATEMENT: buf: null (lines 132-132)
        STATEMENT: indx: null (lines 133-133)
      STATEMENT: else: null (lines 134-136)
        STATEMENT: buf: null (lines 135-135)
    METHOD: procedure: skipws (lines 139-139)
      STATEMENT: while: null (lines 139-139)
        STATEMENT: next_char: null (lines 139-139)
    STATEMENT: next_char: null (lines 142-142)
    STATEMENT: while: null (lines 143-208)
      STATEMENT: if: null (lines 144-157)
        STATEMENT: next_char: null (lines 145-145)
        STATEMENT: if: null (lines 146-146)
          STATEMENT: raise_application_error: null (lines 146-146)
        STATEMENT: if: null (lines 147-149)
          STATEMENT: raise_application_error: null (lines 148-148)
        STATEMENT: if: null (lines 151-151)
          STATEMENT: build_path: null (lines 151-151)
        STATEMENT: build_path: null (lines 152-152)
        STATEMENT: while: null (lines 153-156)
          STATEMENT: build_path: null (lines 154-154)
          STATEMENT: next_char: null (lines 155-155)
        STATEMENT: build_path: null (lines 157-157)
      STATEMENT: elsif: null (lines 158-193)
        STATEMENT: next_char: null (lines 159-159)
        STATEMENT: skipws: null (lines 160-160)
        STATEMENT: if: null (lines 161-161)
          STATEMENT: raise_application_error: null (lines 161-161)
        STATEMENT: if: null (lines 162-167)
          STATEMENT: if: null (lines 163-163)
            STATEMENT: build_path: null (lines 163-163)
          STATEMENT: while: null (lines 164-167)
            STATEMENT: build_path: null (lines 165-165)
            STATEMENT: next_char: null (lines 166-166)
        STATEMENT: elsif: null (lines 168-185)
          STATEMENT: endstring: null (lines 169-169)
          STATEMENT: if: null (lines 170-170)
            STATEMENT: build_path: null (lines 170-170)
          STATEMENT: build_path: null (lines 171-171)
          STATEMENT: next_char: null (lines 172-172)
          STATEMENT: if: null (lines 173-173)
            STATEMENT: raise_application_error: null (lines 173-173)
          STATEMENT: while: null (lines 174-183)
            STATEMENT: build_path: null (lines 175-175)
            STATEMENT: next_char: null (lines 176-176)
            STATEMENT: if: null (lines 177-177)
              STATEMENT: raise_application_error: null (lines 177-177)
            STATEMENT: if: null (lines 178-182)
              STATEMENT: next_char: null (lines 179-179)
              STATEMENT: build_path: null (lines 180-180)
              STATEMENT: next_char: null (lines 181-181)
          STATEMENT: build_path: null (lines 184-184)
          STATEMENT: next_char: null (lines 185-185)
        STATEMENT: else: null (lines 186-188)
          STATEMENT: raise_application_error: null (lines 187-187)
        STATEMENT: skipws: null (lines 189-189)
        STATEMENT: if: null (lines 190-190)
          STATEMENT: raise_application_error: null (lines 190-190)
        STATEMENT: if: null (lines 191-191)
          STATEMENT: raise_application_error: null (lines 191-191)
        STATEMENT: next_char: null (lines 192-192)
        STATEMENT: skipws: null (lines 193-193)
      STATEMENT: elsif: null (lines 194-203)
        STATEMENT: if: null (lines 195-197)
          STATEMENT: raise_application_error: null (lines 196-196)
        STATEMENT: build_path: null (lines 198-198)
        STATEMENT: while: null (lines 199-202)
          STATEMENT: build_path: null (lines 200-200)
          STATEMENT: next_char: null (lines 201-201)
        STATEMENT: build_path: null (lines 203-203)
      STATEMENT: else: null (lines 204-206)
        STATEMENT: raise_application_error: null (lines 205-205)
    STATEMENT: build_path: null (lines 210-210)
    STATEMENT: build_path: null (lines 211-211)
    STATEMENT: return: null (lines 212-212)
  METHOD: function: get_json_value (lines 216-249)
    ATTRIBUTE: variable: path (lines 217-217)
    ATTRIBUTE: variable: ret (lines 218-218)
    ATTRIBUTE: variable: o (lines 219-219)
    ATTRIBUTE: variable: l (lines 219-219)
    STATEMENT: path: null (lines 221-221)
    STATEMENT: ret: null (lines 222-222)
    STATEMENT: if: null (lines 223-223)
      STATEMENT: return: null (lines 223-223)
    STATEMENT: for: null (lines 225-241)
      STATEMENT: if: null (lines 226-229)
        STATEMENT: o: null (lines 228-228)
        STATEMENT: ret: null (lines 229-229)
      STATEMENT: else: null (lines 230-240)
        STATEMENT: if: null (lines 232-234)
          STATEMENT: l: null (lines 233-233)
          STATEMENT: ret: null (lines 234-234)
        STATEMENT: else: null (lines 235-239)
          STATEMENT: o: null (lines 236-236)
          STATEMENT: l: null (lines 237-237)
          STATEMENT: ret: null (lines 238-238)
    STATEMENT: return: null (lines 243-243)
    META: exception section: null (lines 244-244)
    META: when: scanner_exception (lines 245-245)
    STATEMENT: raise: null (lines 245-245)
    META: when: parser_exception (lines 246-246)
    STATEMENT: raise: null (lines 246-246)
    META: when: jext_exception (lines 247-247)
    STATEMENT: raise: null (lines 247-247)
    META: when: others (lines 248-248)
    STATEMENT: return: null (lines 248-248)
  METHOD: function: get_string (lines 252-261)
    ATTRIBUTE: variable: temp (lines 253-253)
    STATEMENT: temp: null (lines 255-255)
    STATEMENT: if: null (lines 256-257)
      STATEMENT: return: null (lines 257-257)
    STATEMENT: else: null (lines 258-260)
      STATEMENT: return: null (lines 259-259)
  METHOD: function: get_number (lines 263-272)
    ATTRIBUTE: variable: temp (lines 264-264)
    STATEMENT: temp: null (lines 266-266)
    STATEMENT: if: null (lines 267-268)
      STATEMENT: return: null (lines 268-268)
    STATEMENT: else: null (lines 269-271)
      STATEMENT: return: null (lines 270-270)
  METHOD: function: get_json (lines 274-283)
    ATTRIBUTE: variable: temp (lines 275-275)
    STATEMENT: temp: null (lines 277-277)
    STATEMENT: if: null (lines 278-279)
      STATEMENT: return: null (lines 279-279)
    STATEMENT: else: null (lines 280-282)
      STATEMENT: return: null (lines 281-281)
  METHOD: function: get_json_list (lines 285-294)
    ATTRIBUTE: variable: temp (lines 286-286)
    STATEMENT: temp: null (lines 288-288)
    STATEMENT: if: null (lines 289-290)
      STATEMENT: return: null (lines 290-290)
    STATEMENT: else: null (lines 291-293)
      STATEMENT: return: null (lines 292-292)
  METHOD: function: get_bool (lines 296-305)
    ATTRIBUTE: variable: temp (lines 297-297)
    STATEMENT: temp: null (lines 299-299)
    STATEMENT: if: null (lines 300-301)
      STATEMENT: return: null (lines 301-301)
    STATEMENT: else: null (lines 302-304)
      STATEMENT: return: null (lines 303-303)
  METHOD: function: get_date (lines 307-316)
    ATTRIBUTE: variable: temp (lines 308-308)
    STATEMENT: temp: null (lines 310-310)
    STATEMENT: if: null (lines 311-312)
      STATEMENT: return: null (lines 312-312)
    STATEMENT: else: null (lines 313-315)
      STATEMENT: return: null (lines 314-314)
  METHOD: procedure: put_internal (lines 319-454)
    ATTRIBUTE: variable: val (lines 320-320)
    ATTRIBUTE: variable: path (lines 321-321)
    ATTRIBUTE: variable: backreference (lines 322-322)
    ATTRIBUTE: variable: keyval (lines 324-324)
    ATTRIBUTE: variable: keynum (lines 324-324)
    ATTRIBUTE: variable: keystring (lines 324-324)
    ATTRIBUTE: variable: temp (lines 325-325)
    ATTRIBUTE: variable: obj_temp (lines 326-326)
    ATTRIBUTE: variable: list_temp (lines 327-327)
    ATTRIBUTE: variable: inserter (lines 328-328)
    STATEMENT: path: null (lines 330-330)
    STATEMENT: if: null (lines 331-331)
      STATEMENT: raise_application_error: null (lines 331-331)
    STATEMENT: for: null (lines 334-394)
      STATEMENT: keyval: null (lines 336-336)
      STATEMENT: if: null (lines 337-367)
        STATEMENT: keynum: null (lines 339-339)
        STATEMENT: if: null (lines 340-345)
          STATEMENT: if: null (lines 341-341)
            STATEMENT: return: null (lines 341-341)
          STATEMENT: backreference: null (lines 342-342)
          STATEMENT: temp: null (lines 343-343)
          STATEMENT: backreference: null (lines 344-344)
        STATEMENT: if: null (lines 347-353)
          STATEMENT: obj_temp: null (lines 348-348)
          STATEMENT: if: null (lines 349-352)
            STATEMENT: if: null (lines 350-350)
              STATEMENT: return: null (lines 350-350)
            STATEMENT: raise_application_error: null (lines 351-351)
          STATEMENT: temp: null (lines 353-353)
        STATEMENT: else: null (lines 354-367)
          STATEMENT: list_temp: null (lines 355-355)
          STATEMENT: if: null (lines 356-364)
            STATEMENT: if: null (lines 357-357)
              STATEMENT: return: null (lines 357-357)
            STATEMENT: for: null (lines 359-361)
              STATEMENT: list_temp: null (lines 360-360)
            STATEMENT: backreference: null (lines 362-362)
            STATEMENT: backreference: null (lines 363-363)
          STATEMENT: temp: null (lines 366-366)
      STATEMENT: else: null (lines 368-381)
        STATEMENT: keystring: null (lines 370-370)
        STATEMENT: if: null (lines 371-378)
          STATEMENT: if: null (lines 373-373)
            STATEMENT: return: null (lines 373-373)
          STATEMENT: backreference: null (lines 374-374)
          STATEMENT: temp: null (lines 375-375)
          STATEMENT: backreference: null (lines 376-376)
        STATEMENT: obj_temp: null (lines 379-379)
        STATEMENT: temp: null (lines 380-380)
      STATEMENT: if: null (lines 383-392)
        STATEMENT: if: null (lines 384-384)
          STATEMENT: return: null (lines 384-384)
        STATEMENT: keyval: null (lines 386-386)
        STATEMENT: if: null (lines 387-388)
          STATEMENT: temp: null (lines 388-388)
        STATEMENT: else: null (lines 389-391)
          STATEMENT: temp: null (lines 390-390)
      STATEMENT: backreference: null (lines 393-393)
    STATEMENT: inserter: null (lines 400-400)
    STATEMENT: for: null (lines 401-452)
      STATEMENT: if: null (lines 403-415)
        STATEMENT: keyval: null (lines 404-404)
        STATEMENT: if: null (lines 405-406)
          STATEMENT: keystring: null (lines 406-406)
        STATEMENT: else: null (lines 407-414)
          STATEMENT: keynum: null (lines 408-408)
          STATEMENT: block: null (lines 409-413)
            ATTRIBUTE: variable: t1 (lines 410-410)
            STATEMENT: keystring: null (lines 412-412)
        STATEMENT: if: null (lines 415-415)
          STATEMENT: obj: null (lines 415-415)
        STATEMENT: else: null (lines 415-415)
          STATEMENT: obj: null (lines 415-415)
      STATEMENT: else: null (lines 416-450)
        STATEMENT: temp: null (lines 417-417)
        STATEMENT: if: null (lines 418-437)
          STATEMENT: keyval: null (lines 419-419)
          STATEMENT: obj_temp: null (lines 420-420)
          STATEMENT: if: null (lines 421-422)
            STATEMENT: keystring: null (lines 422-422)
          STATEMENT: else: null (lines 423-430)
            STATEMENT: keynum: null (lines 424-424)
            STATEMENT: block: null (lines 425-429)
              ATTRIBUTE: variable: t1 (lines 426-426)
              STATEMENT: keystring: null (lines 428-428)
          STATEMENT: if: null (lines 431-433)
            STATEMENT: obj_temp: null (lines 432-432)
            STATEMENT: if: null (lines 433-433)
              STATEMENT: inserter: null (lines 433-433)
          STATEMENT: else: null (lines 434-437)
            STATEMENT: obj_temp: null (lines 435-435)
            STATEMENT: inserter: null (lines 436-436)
        STATEMENT: else: null (lines 438-449)
          STATEMENT: keynum: null (lines 440-440)
          STATEMENT: list_temp: null (lines 441-441)
          STATEMENT: list_temp: null (lines 442-442)
          STATEMENT: if: null (lines 443-445)
            STATEMENT: list_temp: null (lines 444-444)
            STATEMENT: inserter: null (lines 445-445)
          STATEMENT: else: null (lines 446-448)
            STATEMENT: if: null (lines 447-447)
              STATEMENT: inserter: null (lines 447-447)
  METHOD: procedure: put (lines 457-460)
    STATEMENT: put_internal: null (lines 459-459)
  METHOD: procedure: put (lines 462-466)
    STATEMENT: if: null (lines 464-464)
      STATEMENT: raise_application_error: null (lines 464-464)
    STATEMENT: put_internal: null (lines 465-465)
  METHOD: procedure: put (lines 468-472)
    STATEMENT: if: null (lines 470-470)
      STATEMENT: raise_application_error: null (lines 470-470)
    STATEMENT: put_internal: null (lines 471-471)
  METHOD: procedure: put (lines 474-478)
    STATEMENT: if: null (lines 476-476)
      STATEMENT: raise_application_error: null (lines 476-476)
    STATEMENT: put_internal: null (lines 477-477)
  METHOD: procedure: put (lines 480-484)
    STATEMENT: if: null (lines 482-482)
      STATEMENT: raise_application_error: null (lines 482-482)
    STATEMENT: put_internal: null (lines 483-483)
  METHOD: procedure: put (lines 486-490)
    STATEMENT: if: null (lines 488-488)
      STATEMENT: raise_application_error: null (lines 488-488)
    STATEMENT: put_internal: null (lines 489-489)
  METHOD: procedure: put (lines 492-496)
    STATEMENT: if: null (lines 494-494)
      STATEMENT: raise_application_error: null (lines 494-494)
    STATEMENT: put_internal: null (lines 495-495)
  METHOD: procedure: remove (lines 498-503)
    STATEMENT: json_ext: null (lines 500-500)
  METHOD: function: pp (lines 506-515)
    ATTRIBUTE: variable: json_part (lines 507-507)
    STATEMENT: json_part: null (lines 509-509)
    STATEMENT: if: null (lines 510-511)
      STATEMENT: return: null (lines 511-511)
    STATEMENT: else: null (lines 512-514)
      STATEMENT: return: null (lines 513-513)
  METHOD: procedure: pp (lines 517-520)
    STATEMENT: dbms_output: null (lines 519-519)
  METHOD: procedure: pp_htp (lines 523-530)
    ATTRIBUTE: variable: json_part (lines 524-524)
    STATEMENT: json_part: null (lines 526-526)
    STATEMENT: if: null (lines 527-527)
      STATEMENT: htp: null (lines 527-527)
    STATEMENT: else: null (lines 527-529)
      STATEMENT: htp: null (lines 528-528)
  METHOD: function: base64 (lines 532-598)
    ATTRIBUTE: variable: obj (lines 533-533)
    ATTRIBUTE: variable: c (lines 534-534)
    ATTRIBUTE: variable: benc (lines 535-535)
    ATTRIBUTE: variable: v_blob_offset (lines 537-537)
    ATTRIBUTE: variable: v_clob_offset (lines 538-538)
    ATTRIBUTE: variable: v_lang_context (lines 539-539)
    ATTRIBUTE: variable: v_warning (lines 540-540)
    ATTRIBUTE: variable: v_amount (lines 541-541)
    METHOD: function: encodeblob2base64 (lines 544-575)
      ATTRIBUTE: variable: vamount (lines 545-545)
      ATTRIBUTE: variable: vblobenc (lines 546-546)
      ATTRIBUTE: variable: vblobenclen (lines 547-547)
      ATTRIBUTE: variable: vblobinlen (lines 548-548)
      ATTRIBUTE: variable: vbuffer (lines 549-549)
      ATTRIBUTE: variable: voffset (lines 550-550)
      STATEMENT: dbms_output: null (lines 552-552)
      STATEMENT: vblobinlen: null (lines 553-553)
      STATEMENT: dbms_output: null (lines 554-554)
      STATEMENT: dbms_lob: null (lines 555-555)
      STATEMENT: loop: null (lines 556-570)
        STATEMENT: if: null (lines 557-559)
          STATEMENT: exit: null (lines 558-558)
        STATEMENT: dbms_lob: null (lines 560-560)
        STATEMENT: block: null (lines 561-568)
          STATEMENT: dbms_lob: null (lines 562-562)
          META: exception section: null (lines 563-563)
          META: when: others (lines 564-564)
          STATEMENT: dbms_output: null (lines 565-565)
          STATEMENT: dbms_output: null (lines 566-566)
          STATEMENT: raise: null (lines 567-567)
        STATEMENT: voffset: null (lines 569-569)
      STATEMENT: vblobenclen: null (lines 571-571)
      STATEMENT: dbms_output: null (lines 572-572)
      STATEMENT: dbms_output: null (lines 573-573)
      STATEMENT: return: null (lines 574-574)
    STATEMENT: benc: null (lines 577-577)
    STATEMENT: dbms_lob: null (lines 578-578)
    STATEMENT: v_amount: null (lines 579-579)
    STATEMENT: dbms_lob: null (lines 580-580)
    STATEMENT: v_amount: null (lines 582-582)
    STATEMENT: v_clob_offset: null (lines 583-583)
    STATEMENT: while: null (lines 585-591)
      STATEMENT: obj: null (lines 589-589)
      STATEMENT: v_clob_offset: null (lines 590-590)
    STATEMENT: dbms_lob: null (lines 592-592)
    STATEMENT: dbms_lob: null (lines 593-593)
    STATEMENT: return: null (lines 596-596)
  METHOD: function: base64 (lines 601-662)
    ATTRIBUTE: variable: c (lines 602-602)
    ATTRIBUTE: variable: b (lines 603-603)
    ATTRIBUTE: variable: bret (lines 604-604)
    ATTRIBUTE: variable: v_blob_offset (lines 606-606)
    ATTRIBUTE: variable: v_clob_offset (lines 607-607)
    ATTRIBUTE: variable: v_lang_context (lines 608-608)
    ATTRIBUTE: variable: v_warning (lines 609-609)
    ATTRIBUTE: variable: v_amount (lines 610-610)
    METHOD: function: decodebase642blob (lines 612-643)
      ATTRIBUTE: variable: vamount (lines 613-613)
      ATTRIBUTE: variable: vblobdec (lines 614-614)
      ATTRIBUTE: variable: vblobdeclen (lines 615-615)
      ATTRIBUTE: variable: vblobinlen (lines 616-616)
      ATTRIBUTE: variable: vbuffer (lines 617-617)
      ATTRIBUTE: variable: voffset (lines 618-618)
      STATEMENT: dbms_output: null (lines 620-620)
      STATEMENT: vblobinlen: null (lines 621-621)
      STATEMENT: dbms_output: null (lines 622-622)
      STATEMENT: dbms_lob: null (lines 623-623)
      STATEMENT: loop: null (lines 624-638)
        STATEMENT: if: null (lines 625-627)
          STATEMENT: exit: null (lines 626-626)
        STATEMENT: dbms_lob: null (lines 628-628)
        STATEMENT: block: null (lines 629-636)
          STATEMENT: dbms_lob: null (lines 630-630)
          META: exception section: null (lines 631-631)
          META: when: others (lines 632-632)
          STATEMENT: dbms_output: null (lines 633-633)
          STATEMENT: dbms_output: null (lines 634-634)
          STATEMENT: raise: null (lines 635-635)
        STATEMENT: voffset: null (lines 637-637)
      STATEMENT: vblobdeclen: null (lines 639-639)
      STATEMENT: dbms_output: null (lines 640-640)
      STATEMENT: dbms_output: null (lines 641-641)
      STATEMENT: return: null (lines 642-642)
    STATEMENT: dbms_lob: null (lines 645-645)
    STATEMENT: for: null (lines 646-648)
      STATEMENT: dbms_lob: null (lines 647-647)
    STATEMENT: v_amount: null (lines 649-649)
    STATEMENT: dbms_lob: null (lines 652-652)
    STATEMENT: dbms_lob: null (lines 653-653)
    STATEMENT: dbms_lob: null (lines 654-654)
    STATEMENT: v_amount: null (lines 655-655)
    STATEMENT: bret: null (lines 658-658)
    STATEMENT: dbms_lob: null (lines 659-659)
    STATEMENT: return: null (lines 660-660)
