META: #include <SDL/SDL.h>: null (lines 24-24)
META: #include <libraw1394/raw1394.h>: null (lines 25-25)
META: #include <libdc1394/dc1394_control.h>: null (lines 26-26)
META: #include "somedefs.h": null (lines 28-28)
META: #include "my_profiler.h": null (lines 29-29)
ATTRIBUTE: attribute: camera (lines 32-32)
ATTRIBUTE: attribute: handle (lines 33-33)
ATTRIBUTE: attribute: screen (lines 34-34)
ATTRIBUTE: attribute: width (lines 36-36)
ATTRIBUTE: attribute: height (lines 37-37)
ATTRIBUTE: attribute: new_buf (lines 38-38)
ATTRIBUTE: attribute: old_buf (lines 39-39)
ATTRIBUTE: attribute: render_buf (lines 40-40)
ATTRIBUTE: attribute: dmask_buf (lines 41-41)
ATTRIBUTE: attribute: running (lines 43-43)
ATTRIBUTE: attribute: effect (lines 44-44)
ATTRIBUTE: attribute: use_deltamask (lines 45-45)
ATTRIBUTE: attribute: use_grayscale (lines 46-46)
ATTRIBUTE: attribute: color1 (lines 47-47)
ATTRIBUTE: attribute: color2 (lines 48-48)
ATTRIBUTE: attribute: dmask_color (lines 49-49)
ATTRIBUTE: attribute: dmask_param (lines 50-50)
ATTRIBUTE: attribute: param (lines 51-51)
ATTRIBUTE: attribute: verbose (lines 52-52)
ATTRIBUTE: attribute: use_dma (lines 53-53)
METHOD: function: toggle_buffers (lines 56-62)
  STATEMENT: local variable: temp (lines 59-59)
  STATEMENT: simple statement: new_buf (lines 60-60)
  STATEMENT: simple statement: old_buf (lines 61-61)
METHOD: function: fill_buffer (lines 66-217)
  META: #define NORM(x) x = (x<0)?0:((x>255)?255:x): null (lines 69-69)
  STATEMENT: local variable: iso_on (lines 72-72)
  STATEMENT: if: null (lines 73-77)
    STATEMENT: simple statement: fprintf (lines 75-75)
    STATEMENT: simple statement: running (lines 76-76)
    STATEMENT: simple statement: return (lines 76-76)
  STATEMENT: if: null (lines 78-86)
    STATEMENT: simple statement: printf (lines 80-80)
    STATEMENT: if: null (lines 81-85)
      STATEMENT: simple statement: fprintf (lines 83-83)
      STATEMENT: simple statement: running (lines 84-84)
      STATEMENT: simple statement: return (lines 84-84)
  STATEMENT: simple statement: VERBOSE_PRINTF (lines 88-88)
  STATEMENT: if: null (lines 89-99)
    STATEMENT: simple statement: myprofiler_start (lines 91-91)
    STATEMENT: if: null (lines 92-97)
      STATEMENT: simple statement: fprintf (lines 94-94)
      STATEMENT: simple statement: running (lines 95-95)
      STATEMENT: simple statement: return (lines 96-96)
    STATEMENT: simple statement: myprofiler_stop (lines 98-98)
  STATEMENT: else: null (lines 100-110)
    STATEMENT: simple statement: myprofiler_start (lines 102-102)
    STATEMENT: if: null (lines 103-108)
      STATEMENT: simple statement: fprintf (lines 105-105)
      STATEMENT: simple statement: running (lines 106-106)
      STATEMENT: simple statement: return (lines 107-107)
    STATEMENT: simple statement: myprofiler_stop (lines 109-109)
  STATEMENT: simple statement: VERBOSE_PRINTF (lines 111-111)
  STATEMENT: if: null (lines 113-137)
    STATEMENT: simple statement: unsigned (lines 115-115)
    STATEMENT: simple statement: unsigned (lines 116-116)
    STATEMENT: simple statement: unsigned (lines 117-117)
    STATEMENT: simple statement: unsigned (lines 118-118)
    STATEMENT: while: null (lines 120-135)
      META: #define PUTGRAY(x,y) t2=(t1&(x))>>(y); *d++ = t2|(t2<<8)|(t2<<16)|(t2<<24): null (lines 122-122)
      STATEMENT: simple statement: t1 (lines 123-123)
      STATEMENT: simple statement: PUTGRAY (lines 124-124)
      STATEMENT: simple statement: PUTGRAY (lines 125-125)
      STATEMENT: simple statement: t1 (lines 126-126)
      STATEMENT: simple statement: PUTGRAY (lines 127-127)
      STATEMENT: simple statement: PUTGRAY (lines 128-128)
      STATEMENT: simple statement: PUTGRAY (lines 129-129)
      STATEMENT: simple statement: t1 (lines 130-130)
      STATEMENT: simple statement: PUTGRAY (lines 131-131)
      STATEMENT: simple statement: PUTGRAY (lines 132-132)
      STATEMENT: simple statement: PUTGRAY (lines 133-133)
      META: #undef PUTGRAY: null (lines 134-134)
  STATEMENT: else: null (lines 138-207)
    STATEMENT: simple statement: unsigned (lines 140-140)
    STATEMENT: simple statement: unsigned (lines 141-141)
    STATEMENT: simple statement: unsigned (lines 142-142)
    STATEMENT: simple statement: unsigned (lines 143-143)
    STATEMENT: simple statement: unsigned (lines 144-144)
    STATEMENT: local variable: rt (lines 145-145)
    STATEMENT: local variable: u (lines 146-146)
    META: #define NORM_RGBT rt=(rt<0)?0:((rt>255)?255:rt); \
		  gt=(gt<0)?0:((gt>255)?255:gt); \
		  bt=(bt<0)?0:((bt>255)?255:bt): null (lines 156-156)
    META: #define COMP_COL(_y,_vr,_ug,_vg,_ub) rt = _y + _vr; gt = _y - _ug - _vg; bt = _y + _ub; \
  NORM_RGBT; *nb++ = (_y<<24)|(bt<<16)|(gt<<8)|(rt): null (lines 158-158)
    STATEMENT: while: null (lines 160-204)
      STATEMENT: simple statement: c (lines 162-162)
      STATEMENT: simple statement: u (lines 163-163)
      STATEMENT: simple statement: y0 (lines 164-164)
      STATEMENT: simple statement: y1 (lines 165-165)
      STATEMENT: simple statement: v (lines 166-166)
      STATEMENT: simple statement: u (lines 168-168)
      STATEMENT: simple statement: v (lines 168-168)
      STATEMENT: simple statement: vr (lines 169-169)
      STATEMENT: simple statement: ug (lines 170-170)
      STATEMENT: simple statement: vg (lines 171-171)
      STATEMENT: simple statement: ub (lines 172-172)
      STATEMENT: simple statement: COMP_COL (lines 174-174)
      STATEMENT: simple statement: COMP_COL (lines 175-175)
      STATEMENT: simple statement: c (lines 177-177)
      STATEMENT: simple statement: y0 (lines 178-178)
      STATEMENT: simple statement: y1 (lines 179-179)
      STATEMENT: simple statement: COMP_COL (lines 181-181)
      STATEMENT: simple statement: COMP_COL (lines 182-182)
      STATEMENT: simple statement: u (lines 184-184)
      STATEMENT: simple statement: y0 (lines 185-185)
      STATEMENT: simple statement: c (lines 186-186)
      STATEMENT: simple statement: y1 (lines 187-187)
      STATEMENT: simple statement: v (lines 188-188)
      STATEMENT: simple statement: u (lines 190-190)
      STATEMENT: simple statement: v (lines 190-190)
      STATEMENT: simple statement: vr (lines 191-191)
      STATEMENT: simple statement: ug (lines 192-192)
      STATEMENT: simple statement: vg (lines 193-193)
      STATEMENT: simple statement: ub (lines 194-194)
      STATEMENT: simple statement: COMP_COL (lines 196-196)
      STATEMENT: simple statement: COMP_COL (lines 197-197)
      STATEMENT: simple statement: y0 (lines 199-199)
      STATEMENT: simple statement: y1 (lines 200-200)
      STATEMENT: simple statement: COMP_COL (lines 202-202)
      STATEMENT: simple statement: COMP_COL (lines 203-203)
    META: #undef COMP_COL: null (lines 205-205)
    META: #undef NORM_RGBT: null (lines 206-206)
  META: #undef NORM: null (lines 209-209)
  STATEMENT: if: null (lines 211-216)
    STATEMENT: simple statement: VERBOSE_PRINTF (lines 213-213)
    STATEMENT: simple statement: dc1394_dma_done_with_buffer (lines 214-214)
    STATEMENT: simple statement: VERBOSE_PRINTF (lines 215-215)
METHOD: function: apply_effect_filter (lines 220-414)
  STATEMENT: simple statement: unsigned (lines 223-223)
  STATEMENT: simple statement: unsigned (lines 224-224)
  STATEMENT: simple statement: unsigned (lines 225-225)
  STATEMENT: simple statement: unsigned (lines 226-226)
  STATEMENT: simple statement: unsigned (lines 227-227)
  STATEMENT: simple statement: unsigned (lines 228-228)
  STATEMENT: switch: null (lines 230-413)
    META: case: FX_NONE (lines 232-232)
    STATEMENT: simple statement: memcpy (lines 233-233)
    STATEMENT: simple statement: break (lines 234-234)
    META: case: FX_DELTA (lines 236-236)
    STATEMENT: if: null (lines 237-246)
      STATEMENT: while: null (lines 239-245)
        STATEMENT: simple statement: c1 (lines 241-241)
        STATEMENT: simple statement: c2 (lines 242-242)
        STATEMENT: simple statement: c1 (lines 243-243)
        STATEMENT: simple statement: * (lines 244-244)
    STATEMENT: else: null (lines 247-272)
      STATEMENT: simple statement: unsigned (lines 249-249)
      STATEMENT: while: null (lines 251-271)
        STATEMENT: simple statement: c1 (lines 253-253)
        STATEMENT: simple statement: c2 (lines 254-254)
        STATEMENT: simple statement: t1 (lines 256-256)
        STATEMENT: simple statement: t2 (lines 257-257)
        STATEMENT: simple statement: t3 (lines 258-258)
        STATEMENT: simple statement: t1 (lines 260-260)
        STATEMENT: simple statement: t2 (lines 261-261)
        STATEMENT: simple statement: t1 (lines 262-262)
        STATEMENT: simple statement: t3 (lines 263-263)
        STATEMENT: simple statement: t1 (lines 265-265)
        STATEMENT: simple statement: t2 (lines 266-266)
        STATEMENT: simple statement: t1 (lines 267-267)
        STATEMENT: simple statement: t3 (lines 268-268)
        STATEMENT: simple statement: * (lines 270-270)
    STATEMENT: simple statement: break (lines 273-273)
    META: case: FX_SOBEL (lines 275-275)
    STATEMENT: anonymous block: null (lines 277-332)
      STATEMENT: local variable: x (lines 278-278)
      STATEMENT: local variable: lev (lines 279-279)
      STATEMENT: simple statement: unsigned (lines 280-280)
      STATEMENT: for: null (lines 283-283)
        STATEMENT: simple statement: * (lines 283-283)
      STATEMENT: for: null (lines 285-328)
        STATEMENT: simple statement: * (lines 287-287)
        STATEMENT: simple statement: p1 (lines 288-288)
        STATEMENT: simple statement: p2 (lines 288-288)
        STATEMENT: simple statement: p3 (lines 288-288)
        STATEMENT: simple statement: p4 (lines 289-289)
        STATEMENT: simple statement: p5 (lines 289-289)
        STATEMENT: simple statement: p6 (lines 289-289)
        STATEMENT: simple statement: p7 (lines 290-290)
        STATEMENT: simple statement: p8 (lines 290-290)
        STATEMENT: simple statement: p9 (lines 290-290)
        STATEMENT: simple statement: lim (lines 291-291)
        STATEMENT: while: null (lines 292-317)
          STATEMENT: simple statement: t1 (lines 294-294)
          STATEMENT: simple statement: t1 (lines 295-295)
          STATEMENT: simple statement: t2 (lines 296-296)
          STATEMENT: simple statement: t2 (lines 297-297)
          STATEMENT: simple statement: t1 (lines 298-298)
          STATEMENT: simple statement: * (lines 299-299)
          STATEMENT: simple statement: p1 (lines 300-300)
          STATEMENT: simple statement: p4 (lines 300-300)
          STATEMENT: simple statement: p7 (lines 300-300)
          STATEMENT: simple statement: t1 (lines 302-302)
          STATEMENT: simple statement: t1 (lines 303-303)
          STATEMENT: simple statement: t2 (lines 304-304)
          STATEMENT: simple statement: t2 (lines 305-305)
          STATEMENT: simple statement: t1 (lines 306-306)
          STATEMENT: simple statement: * (lines 307-307)
          STATEMENT: simple statement: p2 (lines 308-308)
          STATEMENT: simple statement: p5 (lines 308-308)
          STATEMENT: simple statement: p8 (lines 308-308)
          STATEMENT: simple statement: t1 (lines 310-310)
          STATEMENT: simple statement: t1 (lines 311-311)
          STATEMENT: simple statement: t2 (lines 312-312)
          STATEMENT: simple statement: t2 (lines 313-313)
          STATEMENT: simple statement: t1 (lines 314-314)
          STATEMENT: simple statement: * (lines 315-315)
          STATEMENT: simple statement: p3 (lines 316-316)
          STATEMENT: simple statement: p6 (lines 316-316)
          STATEMENT: simple statement: p9 (lines 316-316)
        STATEMENT: if: null (lines 318-322)
          STATEMENT: simple statement: * (lines 320-320)
          STATEMENT: simple statement: * (lines 321-321)
        STATEMENT: else if: null (lines 323-326)
          STATEMENT: simple statement: * (lines 325-325)
        STATEMENT: simple statement: * (lines 327-327)
      STATEMENT: for: null (lines 331-331)
        STATEMENT: simple statement: * (lines 331-331)
    STATEMENT: simple statement: break (lines 333-333)
    META: case: FX_AND (lines 335-335)
    STATEMENT: while: null (lines 336-339)
      STATEMENT: simple statement: * (lines 338-338)
    STATEMENT: simple statement: break (lines 340-340)
    META: case: FX_XOR (lines 342-342)
    STATEMENT: while: null (lines 343-346)
      STATEMENT: simple statement: * (lines 345-345)
    STATEMENT: simple statement: break (lines 347-347)
    META: case: FX_COLORIZE (lines 348-348)
    META: case: FX_COLINV (lines 349-349)
    STATEMENT: anonymous block: null (lines 350-384)
      STATEMENT: simple statement: unsigned (lines 351-351)
      STATEMENT: local variable: pal_rgba (lines 352-352)
      STATEMENT: local variable: i (lines 353-353)
      STATEMENT: for: null (lines 356-367)
        STATEMENT: simple statement: pal_rgba (lines 358-358)
        STATEMENT: simple statement: pal_rgba (lines 359-359)
        STATEMENT: simple statement: pal_rgba (lines 360-360)
        STATEMENT: simple statement: pal_rgba (lines 361-362)
        STATEMENT: simple statement: pal_rgba (lines 363-364)
        STATEMENT: simple statement: pal_rgba (lines 365-366)
      STATEMENT: if: null (lines 370-376)
        STATEMENT: while: null (lines 372-375)
          STATEMENT: simple statement: * (lines 374-374)
      STATEMENT: else: null (lines 377-383)
        STATEMENT: while: null (lines 379-382)
          STATEMENT: simple statement: * (lines 381-381)
    STATEMENT: simple statement: break (lines 385-385)
    META: case: FX_COLBLEND (lines 386-386)
    STATEMENT: anonymous block: null (lines 387-408)
      STATEMENT: simple statement: unsigned (lines 388-388)
      STATEMENT: local variable: pal_rgba (lines 389-389)
      STATEMENT: local variable: i (lines 390-390)
      STATEMENT: for: null (lines 393-401)
        STATEMENT: simple statement: pal_rgba (lines 395-396)
        STATEMENT: simple statement: pal_rgba (lines 397-398)
        STATEMENT: simple statement: pal_rgba (lines 399-400)
      STATEMENT: while: null (lines 404-407)
        STATEMENT: simple statement: * (lines 406-406)
    STATEMENT: simple statement: break (lines 409-409)
    META: default: null (lines 410-410)
    STATEMENT: simple statement: fprintf (lines 411-411)
    STATEMENT: simple statement: running (lines 412-412)
METHOD: function: display_buffer (lines 417-439)
  STATEMENT: local variable: surf (lines 420-420)
  STATEMENT: simple statement: surf (lines 422-424)
  STATEMENT: if: null (lines 425-429)
    STATEMENT: simple statement: fprintf (lines 427-427)
    STATEMENT: simple statement: running (lines 428-428)
    STATEMENT: simple statement: return (lines 428-428)
  STATEMENT: if: null (lines 431-435)
    STATEMENT: simple statement: fprintf (lines 433-433)
    STATEMENT: simple statement: running (lines 434-434)
    STATEMENT: simple statement: return (lines 434-434)
  STATEMENT: simple statement: SDL_UpdateRect (lines 437-437)
  STATEMENT: simple statement: SDL_FreeSurface (lines 438-438)
METHOD: function: do_coloramp (lines 442-545)
  STATEMENT: simple statement: unsigned (lines 445-445)
  STATEMENT: simple statement: unsigned (lines 446-446)
  STATEMENT: while: null (lines 448-544)
    STATEMENT: local variable: r (lines 450-450)
    STATEMENT: local variable: min (lines 451-451)
    STATEMENT: simple statement: r (lines 454-454)
    STATEMENT: simple statement: g (lines 455-455)
    STATEMENT: simple statement: b (lines 456-456)
    STATEMENT: simple statement: min (lines 460-460)
    STATEMENT: simple statement: max (lines 461-461)
    STATEMENT: if: null (lines 462-462)
      STATEMENT: simple statement: max (lines 462-462)
    STATEMENT: else if: null (lines 463-463)
      STATEMENT: simple statement: min (lines 463-463)
    STATEMENT: if: null (lines 464-464)
      STATEMENT: simple statement: max (lines 464-464)
    STATEMENT: else if: null (lines 465-465)
      STATEMENT: simple statement: min (lines 465-465)
    STATEMENT: simple statement: v (lines 467-467)
    STATEMENT: simple statement: delta (lines 468-468)
    STATEMENT: if: null (lines 470-473)
      STATEMENT: simple statement: s (lines 472-472)
    STATEMENT: else: null (lines 474-484)
      STATEMENT: simple statement: s (lines 476-476)
      STATEMENT: if: null (lines 478-478)
        STATEMENT: simple statement: h (lines 478-478)
      STATEMENT: else if: null (lines 479-479)
        STATEMENT: simple statement: h (lines 479-479)
      STATEMENT: else: null (lines 480-480)
        STATEMENT: simple statement: h (lines 480-480)
      STATEMENT: simple statement: h (lines 482-482)
      STATEMENT: while: null (lines 483-483)
        STATEMENT: simple statement: h (lines 483-483)
    STATEMENT: if: null (lines 487-487)
      STATEMENT: simple statement: s (lines 487-487)
    STATEMENT: else: null (lines 487-487)
      STATEMENT: simple statement: s (lines 487-487)
    STATEMENT: if: null (lines 491-494)
      STATEMENT: simple statement: r (lines 493-493)
    STATEMENT: else: null (lines 495-537)
      STATEMENT: local variable: i (lines 497-497)
      STATEMENT: local variable: f (lines 498-498)
      STATEMENT: local variable: p (lines 499-499)
      STATEMENT: local variable: q (lines 500-500)
      STATEMENT: local variable: t (lines 501-501)
      STATEMENT: switch: null (lines 503-536)
        META: case: 0 (lines 504-504)
        STATEMENT: simple statement: r (lines 505-505)
        STATEMENT: simple statement: g (lines 506-506)
        STATEMENT: simple statement: b (lines 507-507)
        STATEMENT: simple statement: break (lines 508-508)
        META: case: 1 (lines 509-509)
        STATEMENT: simple statement: r (lines 510-510)
        STATEMENT: simple statement: g (lines 511-511)
        STATEMENT: simple statement: b (lines 512-512)
        STATEMENT: simple statement: break (lines 513-513)
        META: case: 2 (lines 514-514)
        STATEMENT: simple statement: r (lines 515-515)
        STATEMENT: simple statement: g (lines 516-516)
        STATEMENT: simple statement: b (lines 517-517)
        STATEMENT: simple statement: break (lines 518-518)
        META: case: 3 (lines 519-519)
        STATEMENT: simple statement: r (lines 520-520)
        STATEMENT: simple statement: g (lines 521-521)
        STATEMENT: simple statement: b (lines 522-522)
        STATEMENT: simple statement: break (lines 523-523)
        META: case: 4 (lines 524-524)
        STATEMENT: simple statement: r (lines 525-525)
        STATEMENT: simple statement: g (lines 526-526)
        STATEMENT: simple statement: b (lines 527-527)
        STATEMENT: simple statement: break (lines 528-528)
        META: case: 5 (lines 529-529)
        STATEMENT: simple statement: r (lines 530-530)
        STATEMENT: simple statement: g (lines 531-531)
        STATEMENT: simple statement: b (lines 532-532)
        STATEMENT: simple statement: break (lines 533-533)
        META: default: null (lines 534-534)
        STATEMENT: simple statement: printf (lines 535-535)
    STATEMENT: simple statement: * (lines 540-540)
    STATEMENT: simple statement: * (lines 541-541)
    STATEMENT: simple statement: n (lines 543-543)
